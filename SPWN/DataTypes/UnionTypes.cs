namespace SPWN.DataTypes;

using DataTypes.Base;
using InternalImplementation;
using Basics;
/*
// This code is generated by this Javascript generator cuz I'm lazy to copy and paste.
// If you REALLY want more Unions, you can use this
// Usage:
//    Put it in your browser console and it should run
//    And then run console.log(Generate(the_start_value,the_end_value))


function inlineFor(start, stop, sep, func) {
    var list = []
    for (let i = start; i <= stop; i++)
        list.push(func(i));
    return list.join(sep)
}

function Generate(start, stop) {
    if (start > stop) return "";
    return `
// Note UnionTypes is NOT a Built-in type in SPWN
[SPWNType("@typeunion")]
public class UnionTypes<${inlineFor(1, start, ", ", (x) => "T" + x)}> : SPWNValueBase
    ${inlineFor(1, start, "\n    ", (x) => "where T" + x + " : SPWNValueBase")}
{
    public override string ValueAsString { get; protected set; }

    ${inlineFor(1, start, "\n    ", (x) => "public UnionTypes(T" + x + " Value) => ValueAsString = Value.ValueAsString;")}

    ${inlineFor(1, start, "\n    ", (x) => "public bool IsT" + x + " => Type == TypeIndicator.GetType<T" + x + ">();")}

    ${inlineFor(1, start, "\n    ", (x) => "public T"+x+" AsT"+x+" => new StringSPWNExpr<T"+x+">(ValueAsString).AsValue();")}

    ${inlineFor(1, start, "\n    ", (x) => "public static implicit operator UnionTypes<" + inlineFor(1, start, ", ", (y) => "T" + y) + ">(T" + x + " Value) => new(Value);")}
}
` + Generate(start + 1, stop)
}
*/


// Note UnionTypes is NOT a Built-in type in SPWN
[SPWNType("@typeunion")]
public class UnionTypes<T1> : SPWNValueBase
    where T1 : SPWNValueBase
{
    public override string ValueAsString { get; protected set; }

    public UnionTypes(T1 Value) => ValueAsString = Value.ValueAsString;

    public bool IsT1 => Type == TypeIndicator.GetType<T1>();

    public T1 AsT1 => new StringSPWNExpr<T1>(ValueAsString).AsValue();

    public static implicit operator UnionTypes<T1>(T1 Value) => new(Value);
}

// Note UnionTypes is NOT a Built-in type in SPWN
[SPWNType("@typeunion")]
public class UnionTypes<T1, T2> : SPWNValueBase
    where T1 : SPWNValueBase
    where T2 : SPWNValueBase
{
    public override string ValueAsString { get; protected set; }

    public UnionTypes(T1 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T2 Value) => ValueAsString = Value.ValueAsString;

    public bool IsT1 => Type == TypeIndicator.GetType<T1>();
    public bool IsT2 => Type == TypeIndicator.GetType<T2>();

    public T1 AsT1 => new StringSPWNExpr<T1>(ValueAsString).AsValue();
    public T2 AsT2 => new StringSPWNExpr<T2>(ValueAsString).AsValue();

    public static implicit operator UnionTypes<T1, T2>(T1 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2>(T2 Value) => new(Value);
}

// Note UnionTypes is NOT a Built-in type in SPWN
[SPWNType("@typeunion")]
public class UnionTypes<T1, T2, T3> : SPWNValueBase
    where T1 : SPWNValueBase
    where T2 : SPWNValueBase
    where T3 : SPWNValueBase
{
    public override string ValueAsString { get; protected set; }

    public UnionTypes(T1 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T2 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T3 Value) => ValueAsString = Value.ValueAsString;

    public bool IsT1 => Type == TypeIndicator.GetType<T1>();
    public bool IsT2 => Type == TypeIndicator.GetType<T2>();
    public bool IsT3 => Type == TypeIndicator.GetType<T3>();

    public T1 AsT1 => new StringSPWNExpr<T1>(ValueAsString).AsValue();
    public T2 AsT2 => new StringSPWNExpr<T2>(ValueAsString).AsValue();
    public T3 AsT3 => new StringSPWNExpr<T3>(ValueAsString).AsValue();

    public static implicit operator UnionTypes<T1, T2, T3>(T1 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3>(T2 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3>(T3 Value) => new(Value);
}

// Note UnionTypes is NOT a Built-in type in SPWN
[SPWNType("@typeunion")]
public class UnionTypes<T1, T2, T3, T4> : SPWNValueBase
    where T1 : SPWNValueBase
    where T2 : SPWNValueBase
    where T3 : SPWNValueBase
    where T4 : SPWNValueBase
{
    public override string ValueAsString { get; protected set; }

    public UnionTypes(T1 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T2 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T3 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T4 Value) => ValueAsString = Value.ValueAsString;

    public bool IsT1 => Type == TypeIndicator.GetType<T1>();
    public bool IsT2 => Type == TypeIndicator.GetType<T2>();
    public bool IsT3 => Type == TypeIndicator.GetType<T3>();
    public bool IsT4 => Type == TypeIndicator.GetType<T4>();

    public T1 AsT1 => new StringSPWNExpr<T1>(ValueAsString).AsValue();
    public T2 AsT2 => new StringSPWNExpr<T2>(ValueAsString).AsValue();
    public T3 AsT3 => new StringSPWNExpr<T3>(ValueAsString).AsValue();
    public T4 AsT4 => new StringSPWNExpr<T4>(ValueAsString).AsValue();

    public static implicit operator UnionTypes<T1, T2, T3, T4>(T1 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4>(T2 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4>(T3 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4>(T4 Value) => new(Value);
}

// Note UnionTypes is NOT a Built-in type in SPWN
[SPWNType("@typeunion")]
public class UnionTypes<T1, T2, T3, T4, T5> : SPWNValueBase
    where T1 : SPWNValueBase
    where T2 : SPWNValueBase
    where T3 : SPWNValueBase
    where T4 : SPWNValueBase
    where T5 : SPWNValueBase
{
    public override string ValueAsString { get; protected set; }

    public UnionTypes(T1 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T2 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T3 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T4 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T5 Value) => ValueAsString = Value.ValueAsString;

    public bool IsT1 => Type == TypeIndicator.GetType<T1>();
    public bool IsT2 => Type == TypeIndicator.GetType<T2>();
    public bool IsT3 => Type == TypeIndicator.GetType<T3>();
    public bool IsT4 => Type == TypeIndicator.GetType<T4>();
    public bool IsT5 => Type == TypeIndicator.GetType<T5>();

    public T1 AsT1 => new StringSPWNExpr<T1>(ValueAsString).AsValue();
    public T2 AsT2 => new StringSPWNExpr<T2>(ValueAsString).AsValue();
    public T3 AsT3 => new StringSPWNExpr<T3>(ValueAsString).AsValue();
    public T4 AsT4 => new StringSPWNExpr<T4>(ValueAsString).AsValue();
    public T5 AsT5 => new StringSPWNExpr<T5>(ValueAsString).AsValue();

    public static implicit operator UnionTypes<T1, T2, T3, T4, T5>(T1 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5>(T2 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5>(T3 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5>(T4 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5>(T5 Value) => new(Value);
}

// Note UnionTypes is NOT a Built-in type in SPWN
[SPWNType("@typeunion")]
public class UnionTypes<T1, T2, T3, T4, T5, T6> : SPWNValueBase
    where T1 : SPWNValueBase
    where T2 : SPWNValueBase
    where T3 : SPWNValueBase
    where T4 : SPWNValueBase
    where T5 : SPWNValueBase
    where T6 : SPWNValueBase
{
    public override string ValueAsString { get; protected set; }

    public UnionTypes(T1 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T2 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T3 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T4 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T5 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T6 Value) => ValueAsString = Value.ValueAsString;

    public bool IsT1 => Type == TypeIndicator.GetType<T1>();
    public bool IsT2 => Type == TypeIndicator.GetType<T2>();
    public bool IsT3 => Type == TypeIndicator.GetType<T3>();
    public bool IsT4 => Type == TypeIndicator.GetType<T4>();
    public bool IsT5 => Type == TypeIndicator.GetType<T5>();
    public bool IsT6 => Type == TypeIndicator.GetType<T6>();

    public T1 AsT1 => new StringSPWNExpr<T1>(ValueAsString).AsValue();
    public T2 AsT2 => new StringSPWNExpr<T2>(ValueAsString).AsValue();
    public T3 AsT3 => new StringSPWNExpr<T3>(ValueAsString).AsValue();
    public T4 AsT4 => new StringSPWNExpr<T4>(ValueAsString).AsValue();
    public T5 AsT5 => new StringSPWNExpr<T5>(ValueAsString).AsValue();
    public T6 AsT6 => new StringSPWNExpr<T6>(ValueAsString).AsValue();

    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6>(T1 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6>(T2 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6>(T3 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6>(T4 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6>(T5 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6>(T6 Value) => new(Value);
}

// Note UnionTypes is NOT a Built-in type in SPWN
[SPWNType("@typeunion")]
public class UnionTypes<T1, T2, T3, T4, T5, T6, T7> : SPWNValueBase
    where T1 : SPWNValueBase
    where T2 : SPWNValueBase
    where T3 : SPWNValueBase
    where T4 : SPWNValueBase
    where T5 : SPWNValueBase
    where T6 : SPWNValueBase
    where T7 : SPWNValueBase
{
    public override string ValueAsString { get; protected set; }

    public UnionTypes(T1 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T2 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T3 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T4 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T5 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T6 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T7 Value) => ValueAsString = Value.ValueAsString;

    public bool IsT1 => Type == TypeIndicator.GetType<T1>();
    public bool IsT2 => Type == TypeIndicator.GetType<T2>();
    public bool IsT3 => Type == TypeIndicator.GetType<T3>();
    public bool IsT4 => Type == TypeIndicator.GetType<T4>();
    public bool IsT5 => Type == TypeIndicator.GetType<T5>();
    public bool IsT6 => Type == TypeIndicator.GetType<T6>();
    public bool IsT7 => Type == TypeIndicator.GetType<T7>();

    public T1 AsT1 => new StringSPWNExpr<T1>(ValueAsString).AsValue();
    public T2 AsT2 => new StringSPWNExpr<T2>(ValueAsString).AsValue();
    public T3 AsT3 => new StringSPWNExpr<T3>(ValueAsString).AsValue();
    public T4 AsT4 => new StringSPWNExpr<T4>(ValueAsString).AsValue();
    public T5 AsT5 => new StringSPWNExpr<T5>(ValueAsString).AsValue();
    public T6 AsT6 => new StringSPWNExpr<T6>(ValueAsString).AsValue();
    public T7 AsT7 => new StringSPWNExpr<T7>(ValueAsString).AsValue();

    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7>(T1 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7>(T2 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7>(T3 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7>(T4 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7>(T5 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7>(T6 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7>(T7 Value) => new(Value);
}

// Note UnionTypes is NOT a Built-in type in SPWN
[SPWNType("@typeunion")]
public class UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8> : SPWNValueBase
    where T1 : SPWNValueBase
    where T2 : SPWNValueBase
    where T3 : SPWNValueBase
    where T4 : SPWNValueBase
    where T5 : SPWNValueBase
    where T6 : SPWNValueBase
    where T7 : SPWNValueBase
    where T8 : SPWNValueBase
{
    public override string ValueAsString { get; protected set; }

    public UnionTypes(T1 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T2 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T3 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T4 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T5 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T6 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T7 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T8 Value) => ValueAsString = Value.ValueAsString;

    public bool IsT1 => Type == TypeIndicator.GetType<T1>();
    public bool IsT2 => Type == TypeIndicator.GetType<T2>();
    public bool IsT3 => Type == TypeIndicator.GetType<T3>();
    public bool IsT4 => Type == TypeIndicator.GetType<T4>();
    public bool IsT5 => Type == TypeIndicator.GetType<T5>();
    public bool IsT6 => Type == TypeIndicator.GetType<T6>();
    public bool IsT7 => Type == TypeIndicator.GetType<T7>();
    public bool IsT8 => Type == TypeIndicator.GetType<T8>();

    public T1 AsT1 => new StringSPWNExpr<T1>(ValueAsString).AsValue();
    public T2 AsT2 => new StringSPWNExpr<T2>(ValueAsString).AsValue();
    public T3 AsT3 => new StringSPWNExpr<T3>(ValueAsString).AsValue();
    public T4 AsT4 => new StringSPWNExpr<T4>(ValueAsString).AsValue();
    public T5 AsT5 => new StringSPWNExpr<T5>(ValueAsString).AsValue();
    public T6 AsT6 => new StringSPWNExpr<T6>(ValueAsString).AsValue();
    public T7 AsT7 => new StringSPWNExpr<T7>(ValueAsString).AsValue();
    public T8 AsT8 => new StringSPWNExpr<T8>(ValueAsString).AsValue();

    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8>(T1 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8>(T2 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8>(T3 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8>(T4 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8>(T5 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8>(T6 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8>(T7 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8>(T8 Value) => new(Value);
}

// Note UnionTypes is NOT a Built-in type in SPWN
[SPWNType("@typeunion")]
public class UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9> : SPWNValueBase
    where T1 : SPWNValueBase
    where T2 : SPWNValueBase
    where T3 : SPWNValueBase
    where T4 : SPWNValueBase
    where T5 : SPWNValueBase
    where T6 : SPWNValueBase
    where T7 : SPWNValueBase
    where T8 : SPWNValueBase
    where T9 : SPWNValueBase
{
    public override string ValueAsString { get; protected set; }

    public UnionTypes(T1 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T2 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T3 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T4 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T5 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T6 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T7 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T8 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T9 Value) => ValueAsString = Value.ValueAsString;

    public bool IsT1 => Type == TypeIndicator.GetType<T1>();
    public bool IsT2 => Type == TypeIndicator.GetType<T2>();
    public bool IsT3 => Type == TypeIndicator.GetType<T3>();
    public bool IsT4 => Type == TypeIndicator.GetType<T4>();
    public bool IsT5 => Type == TypeIndicator.GetType<T5>();
    public bool IsT6 => Type == TypeIndicator.GetType<T6>();
    public bool IsT7 => Type == TypeIndicator.GetType<T7>();
    public bool IsT8 => Type == TypeIndicator.GetType<T8>();
    public bool IsT9 => Type == TypeIndicator.GetType<T9>();

    public T1 AsT1 => new StringSPWNExpr<T1>(ValueAsString).AsValue();
    public T2 AsT2 => new StringSPWNExpr<T2>(ValueAsString).AsValue();
    public T3 AsT3 => new StringSPWNExpr<T3>(ValueAsString).AsValue();
    public T4 AsT4 => new StringSPWNExpr<T4>(ValueAsString).AsValue();
    public T5 AsT5 => new StringSPWNExpr<T5>(ValueAsString).AsValue();
    public T6 AsT6 => new StringSPWNExpr<T6>(ValueAsString).AsValue();
    public T7 AsT7 => new StringSPWNExpr<T7>(ValueAsString).AsValue();
    public T8 AsT8 => new StringSPWNExpr<T8>(ValueAsString).AsValue();
    public T9 AsT9 => new StringSPWNExpr<T9>(ValueAsString).AsValue();

    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9>(T1 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9>(T2 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9>(T3 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9>(T4 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9>(T5 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9>(T6 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9>(T7 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9>(T8 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9>(T9 Value) => new(Value);
}

// Note UnionTypes is NOT a Built-in type in SPWN
[SPWNType("@typeunion")]
public class UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10> : SPWNValueBase
    where T1 : SPWNValueBase
    where T2 : SPWNValueBase
    where T3 : SPWNValueBase
    where T4 : SPWNValueBase
    where T5 : SPWNValueBase
    where T6 : SPWNValueBase
    where T7 : SPWNValueBase
    where T8 : SPWNValueBase
    where T9 : SPWNValueBase
    where T10 : SPWNValueBase
{
    public override string ValueAsString { get; protected set; }

    public UnionTypes(T1 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T2 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T3 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T4 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T5 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T6 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T7 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T8 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T9 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T10 Value) => ValueAsString = Value.ValueAsString;

    public bool IsT1 => Type == TypeIndicator.GetType<T1>();
    public bool IsT2 => Type == TypeIndicator.GetType<T2>();
    public bool IsT3 => Type == TypeIndicator.GetType<T3>();
    public bool IsT4 => Type == TypeIndicator.GetType<T4>();
    public bool IsT5 => Type == TypeIndicator.GetType<T5>();
    public bool IsT6 => Type == TypeIndicator.GetType<T6>();
    public bool IsT7 => Type == TypeIndicator.GetType<T7>();
    public bool IsT8 => Type == TypeIndicator.GetType<T8>();
    public bool IsT9 => Type == TypeIndicator.GetType<T9>();
    public bool IsT10 => Type == TypeIndicator.GetType<T10>();

    public T1 AsT1 => new StringSPWNExpr<T1>(ValueAsString).AsValue();
    public T2 AsT2 => new StringSPWNExpr<T2>(ValueAsString).AsValue();
    public T3 AsT3 => new StringSPWNExpr<T3>(ValueAsString).AsValue();
    public T4 AsT4 => new StringSPWNExpr<T4>(ValueAsString).AsValue();
    public T5 AsT5 => new StringSPWNExpr<T5>(ValueAsString).AsValue();
    public T6 AsT6 => new StringSPWNExpr<T6>(ValueAsString).AsValue();
    public T7 AsT7 => new StringSPWNExpr<T7>(ValueAsString).AsValue();
    public T8 AsT8 => new StringSPWNExpr<T8>(ValueAsString).AsValue();
    public T9 AsT9 => new StringSPWNExpr<T9>(ValueAsString).AsValue();
    public T10 AsT10 => new StringSPWNExpr<T10>(ValueAsString).AsValue();

    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(T1 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(T2 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(T3 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(T4 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(T5 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(T6 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(T7 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(T8 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(T9 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10>(T10 Value) => new(Value);
}

// Note UnionTypes is NOT a Built-in type in SPWN
[SPWNType("@typeunion")]
public class UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11> : SPWNValueBase
    where T1 : SPWNValueBase
    where T2 : SPWNValueBase
    where T3 : SPWNValueBase
    where T4 : SPWNValueBase
    where T5 : SPWNValueBase
    where T6 : SPWNValueBase
    where T7 : SPWNValueBase
    where T8 : SPWNValueBase
    where T9 : SPWNValueBase
    where T10 : SPWNValueBase
    where T11 : SPWNValueBase
{
    public override string ValueAsString { get; protected set; }

    public UnionTypes(T1 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T2 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T3 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T4 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T5 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T6 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T7 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T8 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T9 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T10 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T11 Value) => ValueAsString = Value.ValueAsString;

    public bool IsT1 => Type == TypeIndicator.GetType<T1>();
    public bool IsT2 => Type == TypeIndicator.GetType<T2>();
    public bool IsT3 => Type == TypeIndicator.GetType<T3>();
    public bool IsT4 => Type == TypeIndicator.GetType<T4>();
    public bool IsT5 => Type == TypeIndicator.GetType<T5>();
    public bool IsT6 => Type == TypeIndicator.GetType<T6>();
    public bool IsT7 => Type == TypeIndicator.GetType<T7>();
    public bool IsT8 => Type == TypeIndicator.GetType<T8>();
    public bool IsT9 => Type == TypeIndicator.GetType<T9>();
    public bool IsT10 => Type == TypeIndicator.GetType<T10>();
    public bool IsT11 => Type == TypeIndicator.GetType<T11>();

    public T1 AsT1 => new StringSPWNExpr<T1>(ValueAsString).AsValue();
    public T2 AsT2 => new StringSPWNExpr<T2>(ValueAsString).AsValue();
    public T3 AsT3 => new StringSPWNExpr<T3>(ValueAsString).AsValue();
    public T4 AsT4 => new StringSPWNExpr<T4>(ValueAsString).AsValue();
    public T5 AsT5 => new StringSPWNExpr<T5>(ValueAsString).AsValue();
    public T6 AsT6 => new StringSPWNExpr<T6>(ValueAsString).AsValue();
    public T7 AsT7 => new StringSPWNExpr<T7>(ValueAsString).AsValue();
    public T8 AsT8 => new StringSPWNExpr<T8>(ValueAsString).AsValue();
    public T9 AsT9 => new StringSPWNExpr<T9>(ValueAsString).AsValue();
    public T10 AsT10 => new StringSPWNExpr<T10>(ValueAsString).AsValue();
    public T11 AsT11 => new StringSPWNExpr<T11>(ValueAsString).AsValue();

    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(T1 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(T2 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(T3 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(T4 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(T5 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(T6 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(T7 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(T8 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(T9 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(T10 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11>(T11 Value) => new(Value);
}

// Note UnionTypes is NOT a Built-in type in SPWN
[SPWNType("@typeunion")]
public class UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12> : SPWNValueBase
    where T1 : SPWNValueBase
    where T2 : SPWNValueBase
    where T3 : SPWNValueBase
    where T4 : SPWNValueBase
    where T5 : SPWNValueBase
    where T6 : SPWNValueBase
    where T7 : SPWNValueBase
    where T8 : SPWNValueBase
    where T9 : SPWNValueBase
    where T10 : SPWNValueBase
    where T11 : SPWNValueBase
    where T12 : SPWNValueBase
{
    public override string ValueAsString { get; protected set; }

    public UnionTypes(T1 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T2 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T3 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T4 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T5 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T6 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T7 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T8 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T9 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T10 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T11 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T12 Value) => ValueAsString = Value.ValueAsString;

    public bool IsT1 => Type == TypeIndicator.GetType<T1>();
    public bool IsT2 => Type == TypeIndicator.GetType<T2>();
    public bool IsT3 => Type == TypeIndicator.GetType<T3>();
    public bool IsT4 => Type == TypeIndicator.GetType<T4>();
    public bool IsT5 => Type == TypeIndicator.GetType<T5>();
    public bool IsT6 => Type == TypeIndicator.GetType<T6>();
    public bool IsT7 => Type == TypeIndicator.GetType<T7>();
    public bool IsT8 => Type == TypeIndicator.GetType<T8>();
    public bool IsT9 => Type == TypeIndicator.GetType<T9>();
    public bool IsT10 => Type == TypeIndicator.GetType<T10>();
    public bool IsT11 => Type == TypeIndicator.GetType<T11>();
    public bool IsT12 => Type == TypeIndicator.GetType<T12>();

    public T1 AsT1 => new StringSPWNExpr<T1>(ValueAsString).AsValue();
    public T2 AsT2 => new StringSPWNExpr<T2>(ValueAsString).AsValue();
    public T3 AsT3 => new StringSPWNExpr<T3>(ValueAsString).AsValue();
    public T4 AsT4 => new StringSPWNExpr<T4>(ValueAsString).AsValue();
    public T5 AsT5 => new StringSPWNExpr<T5>(ValueAsString).AsValue();
    public T6 AsT6 => new StringSPWNExpr<T6>(ValueAsString).AsValue();
    public T7 AsT7 => new StringSPWNExpr<T7>(ValueAsString).AsValue();
    public T8 AsT8 => new StringSPWNExpr<T8>(ValueAsString).AsValue();
    public T9 AsT9 => new StringSPWNExpr<T9>(ValueAsString).AsValue();
    public T10 AsT10 => new StringSPWNExpr<T10>(ValueAsString).AsValue();
    public T11 AsT11 => new StringSPWNExpr<T11>(ValueAsString).AsValue();
    public T12 AsT12 => new StringSPWNExpr<T12>(ValueAsString).AsValue();

    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(T1 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(T2 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(T3 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(T4 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(T5 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(T6 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(T7 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(T8 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(T9 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(T10 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(T11 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12>(T12 Value) => new(Value);
}

// Note UnionTypes is NOT a Built-in type in SPWN
[SPWNType("@typeunion")]
public class UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13> : SPWNValueBase
    where T1 : SPWNValueBase
    where T2 : SPWNValueBase
    where T3 : SPWNValueBase
    where T4 : SPWNValueBase
    where T5 : SPWNValueBase
    where T6 : SPWNValueBase
    where T7 : SPWNValueBase
    where T8 : SPWNValueBase
    where T9 : SPWNValueBase
    where T10 : SPWNValueBase
    where T11 : SPWNValueBase
    where T12 : SPWNValueBase
    where T13 : SPWNValueBase
{
    public override string ValueAsString { get; protected set; }

    public UnionTypes(T1 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T2 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T3 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T4 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T5 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T6 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T7 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T8 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T9 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T10 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T11 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T12 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T13 Value) => ValueAsString = Value.ValueAsString;

    public bool IsT1 => Type == TypeIndicator.GetType<T1>();
    public bool IsT2 => Type == TypeIndicator.GetType<T2>();
    public bool IsT3 => Type == TypeIndicator.GetType<T3>();
    public bool IsT4 => Type == TypeIndicator.GetType<T4>();
    public bool IsT5 => Type == TypeIndicator.GetType<T5>();
    public bool IsT6 => Type == TypeIndicator.GetType<T6>();
    public bool IsT7 => Type == TypeIndicator.GetType<T7>();
    public bool IsT8 => Type == TypeIndicator.GetType<T8>();
    public bool IsT9 => Type == TypeIndicator.GetType<T9>();
    public bool IsT10 => Type == TypeIndicator.GetType<T10>();
    public bool IsT11 => Type == TypeIndicator.GetType<T11>();
    public bool IsT12 => Type == TypeIndicator.GetType<T12>();
    public bool IsT13 => Type == TypeIndicator.GetType<T13>();

    public T1 AsT1 => new StringSPWNExpr<T1>(ValueAsString).AsValue();
    public T2 AsT2 => new StringSPWNExpr<T2>(ValueAsString).AsValue();
    public T3 AsT3 => new StringSPWNExpr<T3>(ValueAsString).AsValue();
    public T4 AsT4 => new StringSPWNExpr<T4>(ValueAsString).AsValue();
    public T5 AsT5 => new StringSPWNExpr<T5>(ValueAsString).AsValue();
    public T6 AsT6 => new StringSPWNExpr<T6>(ValueAsString).AsValue();
    public T7 AsT7 => new StringSPWNExpr<T7>(ValueAsString).AsValue();
    public T8 AsT8 => new StringSPWNExpr<T8>(ValueAsString).AsValue();
    public T9 AsT9 => new StringSPWNExpr<T9>(ValueAsString).AsValue();
    public T10 AsT10 => new StringSPWNExpr<T10>(ValueAsString).AsValue();
    public T11 AsT11 => new StringSPWNExpr<T11>(ValueAsString).AsValue();
    public T12 AsT12 => new StringSPWNExpr<T12>(ValueAsString).AsValue();
    public T13 AsT13 => new StringSPWNExpr<T13>(ValueAsString).AsValue();

    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(T1 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(T2 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(T3 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(T4 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(T5 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(T6 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(T7 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(T8 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(T9 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(T10 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(T11 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(T12 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13>(T13 Value) => new(Value);
}

// Note UnionTypes is NOT a Built-in type in SPWN
[SPWNType("@typeunion")]
public class UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14> : SPWNValueBase
    where T1 : SPWNValueBase
    where T2 : SPWNValueBase
    where T3 : SPWNValueBase
    where T4 : SPWNValueBase
    where T5 : SPWNValueBase
    where T6 : SPWNValueBase
    where T7 : SPWNValueBase
    where T8 : SPWNValueBase
    where T9 : SPWNValueBase
    where T10 : SPWNValueBase
    where T11 : SPWNValueBase
    where T12 : SPWNValueBase
    where T13 : SPWNValueBase
    where T14 : SPWNValueBase
{
    public override string ValueAsString { get; protected set; }

    public UnionTypes(T1 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T2 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T3 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T4 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T5 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T6 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T7 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T8 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T9 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T10 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T11 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T12 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T13 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T14 Value) => ValueAsString = Value.ValueAsString;

    public bool IsT1 => Type == TypeIndicator.GetType<T1>();
    public bool IsT2 => Type == TypeIndicator.GetType<T2>();
    public bool IsT3 => Type == TypeIndicator.GetType<T3>();
    public bool IsT4 => Type == TypeIndicator.GetType<T4>();
    public bool IsT5 => Type == TypeIndicator.GetType<T5>();
    public bool IsT6 => Type == TypeIndicator.GetType<T6>();
    public bool IsT7 => Type == TypeIndicator.GetType<T7>();
    public bool IsT8 => Type == TypeIndicator.GetType<T8>();
    public bool IsT9 => Type == TypeIndicator.GetType<T9>();
    public bool IsT10 => Type == TypeIndicator.GetType<T10>();
    public bool IsT11 => Type == TypeIndicator.GetType<T11>();
    public bool IsT12 => Type == TypeIndicator.GetType<T12>();
    public bool IsT13 => Type == TypeIndicator.GetType<T13>();
    public bool IsT14 => Type == TypeIndicator.GetType<T14>();

    public T1 AsT1 => new StringSPWNExpr<T1>(ValueAsString).AsValue();
    public T2 AsT2 => new StringSPWNExpr<T2>(ValueAsString).AsValue();
    public T3 AsT3 => new StringSPWNExpr<T3>(ValueAsString).AsValue();
    public T4 AsT4 => new StringSPWNExpr<T4>(ValueAsString).AsValue();
    public T5 AsT5 => new StringSPWNExpr<T5>(ValueAsString).AsValue();
    public T6 AsT6 => new StringSPWNExpr<T6>(ValueAsString).AsValue();
    public T7 AsT7 => new StringSPWNExpr<T7>(ValueAsString).AsValue();
    public T8 AsT8 => new StringSPWNExpr<T8>(ValueAsString).AsValue();
    public T9 AsT9 => new StringSPWNExpr<T9>(ValueAsString).AsValue();
    public T10 AsT10 => new StringSPWNExpr<T10>(ValueAsString).AsValue();
    public T11 AsT11 => new StringSPWNExpr<T11>(ValueAsString).AsValue();
    public T12 AsT12 => new StringSPWNExpr<T12>(ValueAsString).AsValue();
    public T13 AsT13 => new StringSPWNExpr<T13>(ValueAsString).AsValue();
    public T14 AsT14 => new StringSPWNExpr<T14>(ValueAsString).AsValue();

    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(T1 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(T2 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(T3 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(T4 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(T5 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(T6 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(T7 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(T8 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(T9 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(T10 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(T11 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(T12 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(T13 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14>(T14 Value) => new(Value);
}

// Note UnionTypes is NOT a Built-in type in SPWN
[SPWNType("@typeunion")]
public class UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15> : SPWNValueBase
    where T1 : SPWNValueBase
    where T2 : SPWNValueBase
    where T3 : SPWNValueBase
    where T4 : SPWNValueBase
    where T5 : SPWNValueBase
    where T6 : SPWNValueBase
    where T7 : SPWNValueBase
    where T8 : SPWNValueBase
    where T9 : SPWNValueBase
    where T10 : SPWNValueBase
    where T11 : SPWNValueBase
    where T12 : SPWNValueBase
    where T13 : SPWNValueBase
    where T14 : SPWNValueBase
    where T15 : SPWNValueBase
{
    public override string ValueAsString { get; protected set; }

    public UnionTypes(T1 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T2 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T3 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T4 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T5 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T6 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T7 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T8 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T9 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T10 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T11 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T12 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T13 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T14 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T15 Value) => ValueAsString = Value.ValueAsString;

    public bool IsT1 => Type == TypeIndicator.GetType<T1>();
    public bool IsT2 => Type == TypeIndicator.GetType<T2>();
    public bool IsT3 => Type == TypeIndicator.GetType<T3>();
    public bool IsT4 => Type == TypeIndicator.GetType<T4>();
    public bool IsT5 => Type == TypeIndicator.GetType<T5>();
    public bool IsT6 => Type == TypeIndicator.GetType<T6>();
    public bool IsT7 => Type == TypeIndicator.GetType<T7>();
    public bool IsT8 => Type == TypeIndicator.GetType<T8>();
    public bool IsT9 => Type == TypeIndicator.GetType<T9>();
    public bool IsT10 => Type == TypeIndicator.GetType<T10>();
    public bool IsT11 => Type == TypeIndicator.GetType<T11>();
    public bool IsT12 => Type == TypeIndicator.GetType<T12>();
    public bool IsT13 => Type == TypeIndicator.GetType<T13>();
    public bool IsT14 => Type == TypeIndicator.GetType<T14>();
    public bool IsT15 => Type == TypeIndicator.GetType<T15>();

    public T1 AsT1 => new StringSPWNExpr<T1>(ValueAsString).AsValue();
    public T2 AsT2 => new StringSPWNExpr<T2>(ValueAsString).AsValue();
    public T3 AsT3 => new StringSPWNExpr<T3>(ValueAsString).AsValue();
    public T4 AsT4 => new StringSPWNExpr<T4>(ValueAsString).AsValue();
    public T5 AsT5 => new StringSPWNExpr<T5>(ValueAsString).AsValue();
    public T6 AsT6 => new StringSPWNExpr<T6>(ValueAsString).AsValue();
    public T7 AsT7 => new StringSPWNExpr<T7>(ValueAsString).AsValue();
    public T8 AsT8 => new StringSPWNExpr<T8>(ValueAsString).AsValue();
    public T9 AsT9 => new StringSPWNExpr<T9>(ValueAsString).AsValue();
    public T10 AsT10 => new StringSPWNExpr<T10>(ValueAsString).AsValue();
    public T11 AsT11 => new StringSPWNExpr<T11>(ValueAsString).AsValue();
    public T12 AsT12 => new StringSPWNExpr<T12>(ValueAsString).AsValue();
    public T13 AsT13 => new StringSPWNExpr<T13>(ValueAsString).AsValue();
    public T14 AsT14 => new StringSPWNExpr<T14>(ValueAsString).AsValue();
    public T15 AsT15 => new StringSPWNExpr<T15>(ValueAsString).AsValue();

    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(T1 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(T2 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(T3 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(T4 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(T5 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(T6 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(T7 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(T8 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(T9 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(T10 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(T11 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(T12 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(T13 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(T14 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15>(T15 Value) => new(Value);
}

// Note UnionTypes is NOT a Built-in type in SPWN
[SPWNType("@typeunion")]
public class UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16> : SPWNValueBase
    where T1 : SPWNValueBase
    where T2 : SPWNValueBase
    where T3 : SPWNValueBase
    where T4 : SPWNValueBase
    where T5 : SPWNValueBase
    where T6 : SPWNValueBase
    where T7 : SPWNValueBase
    where T8 : SPWNValueBase
    where T9 : SPWNValueBase
    where T10 : SPWNValueBase
    where T11 : SPWNValueBase
    where T12 : SPWNValueBase
    where T13 : SPWNValueBase
    where T14 : SPWNValueBase
    where T15 : SPWNValueBase
    where T16 : SPWNValueBase
{
    public override string ValueAsString { get; protected set; }

    public UnionTypes(T1 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T2 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T3 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T4 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T5 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T6 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T7 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T8 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T9 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T10 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T11 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T12 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T13 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T14 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T15 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T16 Value) => ValueAsString = Value.ValueAsString;

    public bool IsT1 => Type == TypeIndicator.GetType<T1>();
    public bool IsT2 => Type == TypeIndicator.GetType<T2>();
    public bool IsT3 => Type == TypeIndicator.GetType<T3>();
    public bool IsT4 => Type == TypeIndicator.GetType<T4>();
    public bool IsT5 => Type == TypeIndicator.GetType<T5>();
    public bool IsT6 => Type == TypeIndicator.GetType<T6>();
    public bool IsT7 => Type == TypeIndicator.GetType<T7>();
    public bool IsT8 => Type == TypeIndicator.GetType<T8>();
    public bool IsT9 => Type == TypeIndicator.GetType<T9>();
    public bool IsT10 => Type == TypeIndicator.GetType<T10>();
    public bool IsT11 => Type == TypeIndicator.GetType<T11>();
    public bool IsT12 => Type == TypeIndicator.GetType<T12>();
    public bool IsT13 => Type == TypeIndicator.GetType<T13>();
    public bool IsT14 => Type == TypeIndicator.GetType<T14>();
    public bool IsT15 => Type == TypeIndicator.GetType<T15>();
    public bool IsT16 => Type == TypeIndicator.GetType<T16>();

    public T1 AsT1 => new StringSPWNExpr<T1>(ValueAsString).AsValue();
    public T2 AsT2 => new StringSPWNExpr<T2>(ValueAsString).AsValue();
    public T3 AsT3 => new StringSPWNExpr<T3>(ValueAsString).AsValue();
    public T4 AsT4 => new StringSPWNExpr<T4>(ValueAsString).AsValue();
    public T5 AsT5 => new StringSPWNExpr<T5>(ValueAsString).AsValue();
    public T6 AsT6 => new StringSPWNExpr<T6>(ValueAsString).AsValue();
    public T7 AsT7 => new StringSPWNExpr<T7>(ValueAsString).AsValue();
    public T8 AsT8 => new StringSPWNExpr<T8>(ValueAsString).AsValue();
    public T9 AsT9 => new StringSPWNExpr<T9>(ValueAsString).AsValue();
    public T10 AsT10 => new StringSPWNExpr<T10>(ValueAsString).AsValue();
    public T11 AsT11 => new StringSPWNExpr<T11>(ValueAsString).AsValue();
    public T12 AsT12 => new StringSPWNExpr<T12>(ValueAsString).AsValue();
    public T13 AsT13 => new StringSPWNExpr<T13>(ValueAsString).AsValue();
    public T14 AsT14 => new StringSPWNExpr<T14>(ValueAsString).AsValue();
    public T15 AsT15 => new StringSPWNExpr<T15>(ValueAsString).AsValue();
    public T16 AsT16 => new StringSPWNExpr<T16>(ValueAsString).AsValue();

    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(T1 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(T2 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(T3 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(T4 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(T5 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(T6 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(T7 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(T8 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(T9 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(T10 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(T11 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(T12 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(T13 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(T14 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(T15 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16>(T16 Value) => new(Value);
}

// Note UnionTypes is NOT a Built-in type in SPWN
[SPWNType("@typeunion")]
public class UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17> : SPWNValueBase
    where T1 : SPWNValueBase
    where T2 : SPWNValueBase
    where T3 : SPWNValueBase
    where T4 : SPWNValueBase
    where T5 : SPWNValueBase
    where T6 : SPWNValueBase
    where T7 : SPWNValueBase
    where T8 : SPWNValueBase
    where T9 : SPWNValueBase
    where T10 : SPWNValueBase
    where T11 : SPWNValueBase
    where T12 : SPWNValueBase
    where T13 : SPWNValueBase
    where T14 : SPWNValueBase
    where T15 : SPWNValueBase
    where T16 : SPWNValueBase
    where T17 : SPWNValueBase
{
    public override string ValueAsString { get; protected set; }

    public UnionTypes(T1 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T2 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T3 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T4 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T5 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T6 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T7 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T8 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T9 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T10 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T11 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T12 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T13 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T14 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T15 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T16 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T17 Value) => ValueAsString = Value.ValueAsString;

    public bool IsT1 => Type == TypeIndicator.GetType<T1>();
    public bool IsT2 => Type == TypeIndicator.GetType<T2>();
    public bool IsT3 => Type == TypeIndicator.GetType<T3>();
    public bool IsT4 => Type == TypeIndicator.GetType<T4>();
    public bool IsT5 => Type == TypeIndicator.GetType<T5>();
    public bool IsT6 => Type == TypeIndicator.GetType<T6>();
    public bool IsT7 => Type == TypeIndicator.GetType<T7>();
    public bool IsT8 => Type == TypeIndicator.GetType<T8>();
    public bool IsT9 => Type == TypeIndicator.GetType<T9>();
    public bool IsT10 => Type == TypeIndicator.GetType<T10>();
    public bool IsT11 => Type == TypeIndicator.GetType<T11>();
    public bool IsT12 => Type == TypeIndicator.GetType<T12>();
    public bool IsT13 => Type == TypeIndicator.GetType<T13>();
    public bool IsT14 => Type == TypeIndicator.GetType<T14>();
    public bool IsT15 => Type == TypeIndicator.GetType<T15>();
    public bool IsT16 => Type == TypeIndicator.GetType<T16>();
    public bool IsT17 => Type == TypeIndicator.GetType<T17>();

    public T1 AsT1 => new StringSPWNExpr<T1>(ValueAsString).AsValue();
    public T2 AsT2 => new StringSPWNExpr<T2>(ValueAsString).AsValue();
    public T3 AsT3 => new StringSPWNExpr<T3>(ValueAsString).AsValue();
    public T4 AsT4 => new StringSPWNExpr<T4>(ValueAsString).AsValue();
    public T5 AsT5 => new StringSPWNExpr<T5>(ValueAsString).AsValue();
    public T6 AsT6 => new StringSPWNExpr<T6>(ValueAsString).AsValue();
    public T7 AsT7 => new StringSPWNExpr<T7>(ValueAsString).AsValue();
    public T8 AsT8 => new StringSPWNExpr<T8>(ValueAsString).AsValue();
    public T9 AsT9 => new StringSPWNExpr<T9>(ValueAsString).AsValue();
    public T10 AsT10 => new StringSPWNExpr<T10>(ValueAsString).AsValue();
    public T11 AsT11 => new StringSPWNExpr<T11>(ValueAsString).AsValue();
    public T12 AsT12 => new StringSPWNExpr<T12>(ValueAsString).AsValue();
    public T13 AsT13 => new StringSPWNExpr<T13>(ValueAsString).AsValue();
    public T14 AsT14 => new StringSPWNExpr<T14>(ValueAsString).AsValue();
    public T15 AsT15 => new StringSPWNExpr<T15>(ValueAsString).AsValue();
    public T16 AsT16 => new StringSPWNExpr<T16>(ValueAsString).AsValue();
    public T17 AsT17 => new StringSPWNExpr<T17>(ValueAsString).AsValue();

    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(T1 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(T2 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(T3 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(T4 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(T5 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(T6 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(T7 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(T8 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(T9 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(T10 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(T11 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(T12 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(T13 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(T14 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(T15 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(T16 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17>(T17 Value) => new(Value);
}

// Note UnionTypes is NOT a Built-in type in SPWN
[SPWNType("@typeunion")]
public class UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18> : SPWNValueBase
    where T1 : SPWNValueBase
    where T2 : SPWNValueBase
    where T3 : SPWNValueBase
    where T4 : SPWNValueBase
    where T5 : SPWNValueBase
    where T6 : SPWNValueBase
    where T7 : SPWNValueBase
    where T8 : SPWNValueBase
    where T9 : SPWNValueBase
    where T10 : SPWNValueBase
    where T11 : SPWNValueBase
    where T12 : SPWNValueBase
    where T13 : SPWNValueBase
    where T14 : SPWNValueBase
    where T15 : SPWNValueBase
    where T16 : SPWNValueBase
    where T17 : SPWNValueBase
    where T18 : SPWNValueBase
{
    public override string ValueAsString { get; protected set; }

    public UnionTypes(T1 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T2 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T3 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T4 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T5 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T6 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T7 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T8 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T9 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T10 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T11 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T12 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T13 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T14 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T15 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T16 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T17 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T18 Value) => ValueAsString = Value.ValueAsString;

    public bool IsT1 => Type == TypeIndicator.GetType<T1>();
    public bool IsT2 => Type == TypeIndicator.GetType<T2>();
    public bool IsT3 => Type == TypeIndicator.GetType<T3>();
    public bool IsT4 => Type == TypeIndicator.GetType<T4>();
    public bool IsT5 => Type == TypeIndicator.GetType<T5>();
    public bool IsT6 => Type == TypeIndicator.GetType<T6>();
    public bool IsT7 => Type == TypeIndicator.GetType<T7>();
    public bool IsT8 => Type == TypeIndicator.GetType<T8>();
    public bool IsT9 => Type == TypeIndicator.GetType<T9>();
    public bool IsT10 => Type == TypeIndicator.GetType<T10>();
    public bool IsT11 => Type == TypeIndicator.GetType<T11>();
    public bool IsT12 => Type == TypeIndicator.GetType<T12>();
    public bool IsT13 => Type == TypeIndicator.GetType<T13>();
    public bool IsT14 => Type == TypeIndicator.GetType<T14>();
    public bool IsT15 => Type == TypeIndicator.GetType<T15>();
    public bool IsT16 => Type == TypeIndicator.GetType<T16>();
    public bool IsT17 => Type == TypeIndicator.GetType<T17>();
    public bool IsT18 => Type == TypeIndicator.GetType<T18>();

    public T1 AsT1 => new StringSPWNExpr<T1>(ValueAsString).AsValue();
    public T2 AsT2 => new StringSPWNExpr<T2>(ValueAsString).AsValue();
    public T3 AsT3 => new StringSPWNExpr<T3>(ValueAsString).AsValue();
    public T4 AsT4 => new StringSPWNExpr<T4>(ValueAsString).AsValue();
    public T5 AsT5 => new StringSPWNExpr<T5>(ValueAsString).AsValue();
    public T6 AsT6 => new StringSPWNExpr<T6>(ValueAsString).AsValue();
    public T7 AsT7 => new StringSPWNExpr<T7>(ValueAsString).AsValue();
    public T8 AsT8 => new StringSPWNExpr<T8>(ValueAsString).AsValue();
    public T9 AsT9 => new StringSPWNExpr<T9>(ValueAsString).AsValue();
    public T10 AsT10 => new StringSPWNExpr<T10>(ValueAsString).AsValue();
    public T11 AsT11 => new StringSPWNExpr<T11>(ValueAsString).AsValue();
    public T12 AsT12 => new StringSPWNExpr<T12>(ValueAsString).AsValue();
    public T13 AsT13 => new StringSPWNExpr<T13>(ValueAsString).AsValue();
    public T14 AsT14 => new StringSPWNExpr<T14>(ValueAsString).AsValue();
    public T15 AsT15 => new StringSPWNExpr<T15>(ValueAsString).AsValue();
    public T16 AsT16 => new StringSPWNExpr<T16>(ValueAsString).AsValue();
    public T17 AsT17 => new StringSPWNExpr<T17>(ValueAsString).AsValue();
    public T18 AsT18 => new StringSPWNExpr<T18>(ValueAsString).AsValue();

    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(T1 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(T2 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(T3 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(T4 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(T5 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(T6 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(T7 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(T8 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(T9 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(T10 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(T11 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(T12 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(T13 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(T14 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(T15 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(T16 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(T17 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18>(T18 Value) => new(Value);
}

// Note UnionTypes is NOT a Built-in type in SPWN
[SPWNType("@typeunion")]
public class UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19> : SPWNValueBase
    where T1 : SPWNValueBase
    where T2 : SPWNValueBase
    where T3 : SPWNValueBase
    where T4 : SPWNValueBase
    where T5 : SPWNValueBase
    where T6 : SPWNValueBase
    where T7 : SPWNValueBase
    where T8 : SPWNValueBase
    where T9 : SPWNValueBase
    where T10 : SPWNValueBase
    where T11 : SPWNValueBase
    where T12 : SPWNValueBase
    where T13 : SPWNValueBase
    where T14 : SPWNValueBase
    where T15 : SPWNValueBase
    where T16 : SPWNValueBase
    where T17 : SPWNValueBase
    where T18 : SPWNValueBase
    where T19 : SPWNValueBase
{
    public override string ValueAsString { get; protected set; }

    public UnionTypes(T1 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T2 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T3 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T4 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T5 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T6 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T7 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T8 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T9 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T10 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T11 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T12 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T13 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T14 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T15 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T16 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T17 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T18 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T19 Value) => ValueAsString = Value.ValueAsString;

    public bool IsT1 => Type == TypeIndicator.GetType<T1>();
    public bool IsT2 => Type == TypeIndicator.GetType<T2>();
    public bool IsT3 => Type == TypeIndicator.GetType<T3>();
    public bool IsT4 => Type == TypeIndicator.GetType<T4>();
    public bool IsT5 => Type == TypeIndicator.GetType<T5>();
    public bool IsT6 => Type == TypeIndicator.GetType<T6>();
    public bool IsT7 => Type == TypeIndicator.GetType<T7>();
    public bool IsT8 => Type == TypeIndicator.GetType<T8>();
    public bool IsT9 => Type == TypeIndicator.GetType<T9>();
    public bool IsT10 => Type == TypeIndicator.GetType<T10>();
    public bool IsT11 => Type == TypeIndicator.GetType<T11>();
    public bool IsT12 => Type == TypeIndicator.GetType<T12>();
    public bool IsT13 => Type == TypeIndicator.GetType<T13>();
    public bool IsT14 => Type == TypeIndicator.GetType<T14>();
    public bool IsT15 => Type == TypeIndicator.GetType<T15>();
    public bool IsT16 => Type == TypeIndicator.GetType<T16>();
    public bool IsT17 => Type == TypeIndicator.GetType<T17>();
    public bool IsT18 => Type == TypeIndicator.GetType<T18>();
    public bool IsT19 => Type == TypeIndicator.GetType<T19>();

    public T1 AsT1 => new StringSPWNExpr<T1>(ValueAsString).AsValue();
    public T2 AsT2 => new StringSPWNExpr<T2>(ValueAsString).AsValue();
    public T3 AsT3 => new StringSPWNExpr<T3>(ValueAsString).AsValue();
    public T4 AsT4 => new StringSPWNExpr<T4>(ValueAsString).AsValue();
    public T5 AsT5 => new StringSPWNExpr<T5>(ValueAsString).AsValue();
    public T6 AsT6 => new StringSPWNExpr<T6>(ValueAsString).AsValue();
    public T7 AsT7 => new StringSPWNExpr<T7>(ValueAsString).AsValue();
    public T8 AsT8 => new StringSPWNExpr<T8>(ValueAsString).AsValue();
    public T9 AsT9 => new StringSPWNExpr<T9>(ValueAsString).AsValue();
    public T10 AsT10 => new StringSPWNExpr<T10>(ValueAsString).AsValue();
    public T11 AsT11 => new StringSPWNExpr<T11>(ValueAsString).AsValue();
    public T12 AsT12 => new StringSPWNExpr<T12>(ValueAsString).AsValue();
    public T13 AsT13 => new StringSPWNExpr<T13>(ValueAsString).AsValue();
    public T14 AsT14 => new StringSPWNExpr<T14>(ValueAsString).AsValue();
    public T15 AsT15 => new StringSPWNExpr<T15>(ValueAsString).AsValue();
    public T16 AsT16 => new StringSPWNExpr<T16>(ValueAsString).AsValue();
    public T17 AsT17 => new StringSPWNExpr<T17>(ValueAsString).AsValue();
    public T18 AsT18 => new StringSPWNExpr<T18>(ValueAsString).AsValue();
    public T19 AsT19 => new StringSPWNExpr<T19>(ValueAsString).AsValue();

    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(T1 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(T2 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(T3 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(T4 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(T5 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(T6 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(T7 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(T8 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(T9 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(T10 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(T11 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(T12 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(T13 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(T14 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(T15 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(T16 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(T17 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(T18 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19>(T19 Value) => new(Value);
}

// Note UnionTypes is NOT a Built-in type in SPWN
[SPWNType("@typeunion")]
public class UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20> : SPWNValueBase
    where T1 : SPWNValueBase
    where T2 : SPWNValueBase
    where T3 : SPWNValueBase
    where T4 : SPWNValueBase
    where T5 : SPWNValueBase
    where T6 : SPWNValueBase
    where T7 : SPWNValueBase
    where T8 : SPWNValueBase
    where T9 : SPWNValueBase
    where T10 : SPWNValueBase
    where T11 : SPWNValueBase
    where T12 : SPWNValueBase
    where T13 : SPWNValueBase
    where T14 : SPWNValueBase
    where T15 : SPWNValueBase
    where T16 : SPWNValueBase
    where T17 : SPWNValueBase
    where T18 : SPWNValueBase
    where T19 : SPWNValueBase
    where T20 : SPWNValueBase
{
    public override string ValueAsString { get; protected set; }

    public UnionTypes(T1 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T2 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T3 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T4 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T5 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T6 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T7 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T8 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T9 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T10 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T11 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T12 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T13 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T14 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T15 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T16 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T17 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T18 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T19 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T20 Value) => ValueAsString = Value.ValueAsString;

    public bool IsT1 => Type == TypeIndicator.GetType<T1>();
    public bool IsT2 => Type == TypeIndicator.GetType<T2>();
    public bool IsT3 => Type == TypeIndicator.GetType<T3>();
    public bool IsT4 => Type == TypeIndicator.GetType<T4>();
    public bool IsT5 => Type == TypeIndicator.GetType<T5>();
    public bool IsT6 => Type == TypeIndicator.GetType<T6>();
    public bool IsT7 => Type == TypeIndicator.GetType<T7>();
    public bool IsT8 => Type == TypeIndicator.GetType<T8>();
    public bool IsT9 => Type == TypeIndicator.GetType<T9>();
    public bool IsT10 => Type == TypeIndicator.GetType<T10>();
    public bool IsT11 => Type == TypeIndicator.GetType<T11>();
    public bool IsT12 => Type == TypeIndicator.GetType<T12>();
    public bool IsT13 => Type == TypeIndicator.GetType<T13>();
    public bool IsT14 => Type == TypeIndicator.GetType<T14>();
    public bool IsT15 => Type == TypeIndicator.GetType<T15>();
    public bool IsT16 => Type == TypeIndicator.GetType<T16>();
    public bool IsT17 => Type == TypeIndicator.GetType<T17>();
    public bool IsT18 => Type == TypeIndicator.GetType<T18>();
    public bool IsT19 => Type == TypeIndicator.GetType<T19>();
    public bool IsT20 => Type == TypeIndicator.GetType<T20>();

    public T1 AsT1 => new StringSPWNExpr<T1>(ValueAsString).AsValue();
    public T2 AsT2 => new StringSPWNExpr<T2>(ValueAsString).AsValue();
    public T3 AsT3 => new StringSPWNExpr<T3>(ValueAsString).AsValue();
    public T4 AsT4 => new StringSPWNExpr<T4>(ValueAsString).AsValue();
    public T5 AsT5 => new StringSPWNExpr<T5>(ValueAsString).AsValue();
    public T6 AsT6 => new StringSPWNExpr<T6>(ValueAsString).AsValue();
    public T7 AsT7 => new StringSPWNExpr<T7>(ValueAsString).AsValue();
    public T8 AsT8 => new StringSPWNExpr<T8>(ValueAsString).AsValue();
    public T9 AsT9 => new StringSPWNExpr<T9>(ValueAsString).AsValue();
    public T10 AsT10 => new StringSPWNExpr<T10>(ValueAsString).AsValue();
    public T11 AsT11 => new StringSPWNExpr<T11>(ValueAsString).AsValue();
    public T12 AsT12 => new StringSPWNExpr<T12>(ValueAsString).AsValue();
    public T13 AsT13 => new StringSPWNExpr<T13>(ValueAsString).AsValue();
    public T14 AsT14 => new StringSPWNExpr<T14>(ValueAsString).AsValue();
    public T15 AsT15 => new StringSPWNExpr<T15>(ValueAsString).AsValue();
    public T16 AsT16 => new StringSPWNExpr<T16>(ValueAsString).AsValue();
    public T17 AsT17 => new StringSPWNExpr<T17>(ValueAsString).AsValue();
    public T18 AsT18 => new StringSPWNExpr<T18>(ValueAsString).AsValue();
    public T19 AsT19 => new StringSPWNExpr<T19>(ValueAsString).AsValue();
    public T20 AsT20 => new StringSPWNExpr<T20>(ValueAsString).AsValue();

    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(T1 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(T2 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(T3 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(T4 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(T5 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(T6 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(T7 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(T8 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(T9 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(T10 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(T11 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(T12 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(T13 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(T14 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(T15 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(T16 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(T17 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(T18 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(T19 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20>(T20 Value) => new(Value);
}

// Note UnionTypes is NOT a Built-in type in SPWN
[SPWNType("@typeunion")]
public class UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21> : SPWNValueBase
    where T1 : SPWNValueBase
    where T2 : SPWNValueBase
    where T3 : SPWNValueBase
    where T4 : SPWNValueBase
    where T5 : SPWNValueBase
    where T6 : SPWNValueBase
    where T7 : SPWNValueBase
    where T8 : SPWNValueBase
    where T9 : SPWNValueBase
    where T10 : SPWNValueBase
    where T11 : SPWNValueBase
    where T12 : SPWNValueBase
    where T13 : SPWNValueBase
    where T14 : SPWNValueBase
    where T15 : SPWNValueBase
    where T16 : SPWNValueBase
    where T17 : SPWNValueBase
    where T18 : SPWNValueBase
    where T19 : SPWNValueBase
    where T20 : SPWNValueBase
    where T21 : SPWNValueBase
{
    public override string ValueAsString { get; protected set; }

    public UnionTypes(T1 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T2 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T3 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T4 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T5 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T6 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T7 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T8 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T9 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T10 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T11 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T12 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T13 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T14 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T15 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T16 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T17 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T18 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T19 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T20 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T21 Value) => ValueAsString = Value.ValueAsString;

    public bool IsT1 => Type == TypeIndicator.GetType<T1>();
    public bool IsT2 => Type == TypeIndicator.GetType<T2>();
    public bool IsT3 => Type == TypeIndicator.GetType<T3>();
    public bool IsT4 => Type == TypeIndicator.GetType<T4>();
    public bool IsT5 => Type == TypeIndicator.GetType<T5>();
    public bool IsT6 => Type == TypeIndicator.GetType<T6>();
    public bool IsT7 => Type == TypeIndicator.GetType<T7>();
    public bool IsT8 => Type == TypeIndicator.GetType<T8>();
    public bool IsT9 => Type == TypeIndicator.GetType<T9>();
    public bool IsT10 => Type == TypeIndicator.GetType<T10>();
    public bool IsT11 => Type == TypeIndicator.GetType<T11>();
    public bool IsT12 => Type == TypeIndicator.GetType<T12>();
    public bool IsT13 => Type == TypeIndicator.GetType<T13>();
    public bool IsT14 => Type == TypeIndicator.GetType<T14>();
    public bool IsT15 => Type == TypeIndicator.GetType<T15>();
    public bool IsT16 => Type == TypeIndicator.GetType<T16>();
    public bool IsT17 => Type == TypeIndicator.GetType<T17>();
    public bool IsT18 => Type == TypeIndicator.GetType<T18>();
    public bool IsT19 => Type == TypeIndicator.GetType<T19>();
    public bool IsT20 => Type == TypeIndicator.GetType<T20>();
    public bool IsT21 => Type == TypeIndicator.GetType<T21>();

    public T1 AsT1 => new StringSPWNExpr<T1>(ValueAsString).AsValue();
    public T2 AsT2 => new StringSPWNExpr<T2>(ValueAsString).AsValue();
    public T3 AsT3 => new StringSPWNExpr<T3>(ValueAsString).AsValue();
    public T4 AsT4 => new StringSPWNExpr<T4>(ValueAsString).AsValue();
    public T5 AsT5 => new StringSPWNExpr<T5>(ValueAsString).AsValue();
    public T6 AsT6 => new StringSPWNExpr<T6>(ValueAsString).AsValue();
    public T7 AsT7 => new StringSPWNExpr<T7>(ValueAsString).AsValue();
    public T8 AsT8 => new StringSPWNExpr<T8>(ValueAsString).AsValue();
    public T9 AsT9 => new StringSPWNExpr<T9>(ValueAsString).AsValue();
    public T10 AsT10 => new StringSPWNExpr<T10>(ValueAsString).AsValue();
    public T11 AsT11 => new StringSPWNExpr<T11>(ValueAsString).AsValue();
    public T12 AsT12 => new StringSPWNExpr<T12>(ValueAsString).AsValue();
    public T13 AsT13 => new StringSPWNExpr<T13>(ValueAsString).AsValue();
    public T14 AsT14 => new StringSPWNExpr<T14>(ValueAsString).AsValue();
    public T15 AsT15 => new StringSPWNExpr<T15>(ValueAsString).AsValue();
    public T16 AsT16 => new StringSPWNExpr<T16>(ValueAsString).AsValue();
    public T17 AsT17 => new StringSPWNExpr<T17>(ValueAsString).AsValue();
    public T18 AsT18 => new StringSPWNExpr<T18>(ValueAsString).AsValue();
    public T19 AsT19 => new StringSPWNExpr<T19>(ValueAsString).AsValue();
    public T20 AsT20 => new StringSPWNExpr<T20>(ValueAsString).AsValue();
    public T21 AsT21 => new StringSPWNExpr<T21>(ValueAsString).AsValue();

    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(T1 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(T2 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(T3 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(T4 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(T5 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(T6 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(T7 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(T8 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(T9 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(T10 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(T11 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(T12 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(T13 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(T14 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(T15 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(T16 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(T17 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(T18 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(T19 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(T20 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21>(T21 Value) => new(Value);
}

// Note UnionTypes is NOT a Built-in type in SPWN
[SPWNType("@typeunion")]
public class UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22> : SPWNValueBase
    where T1 : SPWNValueBase
    where T2 : SPWNValueBase
    where T3 : SPWNValueBase
    where T4 : SPWNValueBase
    where T5 : SPWNValueBase
    where T6 : SPWNValueBase
    where T7 : SPWNValueBase
    where T8 : SPWNValueBase
    where T9 : SPWNValueBase
    where T10 : SPWNValueBase
    where T11 : SPWNValueBase
    where T12 : SPWNValueBase
    where T13 : SPWNValueBase
    where T14 : SPWNValueBase
    where T15 : SPWNValueBase
    where T16 : SPWNValueBase
    where T17 : SPWNValueBase
    where T18 : SPWNValueBase
    where T19 : SPWNValueBase
    where T20 : SPWNValueBase
    where T21 : SPWNValueBase
    where T22 : SPWNValueBase
{
    public override string ValueAsString { get; protected set; }

    public UnionTypes(T1 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T2 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T3 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T4 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T5 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T6 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T7 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T8 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T9 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T10 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T11 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T12 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T13 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T14 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T15 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T16 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T17 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T18 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T19 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T20 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T21 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T22 Value) => ValueAsString = Value.ValueAsString;

    public bool IsT1 => Type == TypeIndicator.GetType<T1>();
    public bool IsT2 => Type == TypeIndicator.GetType<T2>();
    public bool IsT3 => Type == TypeIndicator.GetType<T3>();
    public bool IsT4 => Type == TypeIndicator.GetType<T4>();
    public bool IsT5 => Type == TypeIndicator.GetType<T5>();
    public bool IsT6 => Type == TypeIndicator.GetType<T6>();
    public bool IsT7 => Type == TypeIndicator.GetType<T7>();
    public bool IsT8 => Type == TypeIndicator.GetType<T8>();
    public bool IsT9 => Type == TypeIndicator.GetType<T9>();
    public bool IsT10 => Type == TypeIndicator.GetType<T10>();
    public bool IsT11 => Type == TypeIndicator.GetType<T11>();
    public bool IsT12 => Type == TypeIndicator.GetType<T12>();
    public bool IsT13 => Type == TypeIndicator.GetType<T13>();
    public bool IsT14 => Type == TypeIndicator.GetType<T14>();
    public bool IsT15 => Type == TypeIndicator.GetType<T15>();
    public bool IsT16 => Type == TypeIndicator.GetType<T16>();
    public bool IsT17 => Type == TypeIndicator.GetType<T17>();
    public bool IsT18 => Type == TypeIndicator.GetType<T18>();
    public bool IsT19 => Type == TypeIndicator.GetType<T19>();
    public bool IsT20 => Type == TypeIndicator.GetType<T20>();
    public bool IsT21 => Type == TypeIndicator.GetType<T21>();
    public bool IsT22 => Type == TypeIndicator.GetType<T22>();

    public T1 AsT1 => new StringSPWNExpr<T1>(ValueAsString).AsValue();
    public T2 AsT2 => new StringSPWNExpr<T2>(ValueAsString).AsValue();
    public T3 AsT3 => new StringSPWNExpr<T3>(ValueAsString).AsValue();
    public T4 AsT4 => new StringSPWNExpr<T4>(ValueAsString).AsValue();
    public T5 AsT5 => new StringSPWNExpr<T5>(ValueAsString).AsValue();
    public T6 AsT6 => new StringSPWNExpr<T6>(ValueAsString).AsValue();
    public T7 AsT7 => new StringSPWNExpr<T7>(ValueAsString).AsValue();
    public T8 AsT8 => new StringSPWNExpr<T8>(ValueAsString).AsValue();
    public T9 AsT9 => new StringSPWNExpr<T9>(ValueAsString).AsValue();
    public T10 AsT10 => new StringSPWNExpr<T10>(ValueAsString).AsValue();
    public T11 AsT11 => new StringSPWNExpr<T11>(ValueAsString).AsValue();
    public T12 AsT12 => new StringSPWNExpr<T12>(ValueAsString).AsValue();
    public T13 AsT13 => new StringSPWNExpr<T13>(ValueAsString).AsValue();
    public T14 AsT14 => new StringSPWNExpr<T14>(ValueAsString).AsValue();
    public T15 AsT15 => new StringSPWNExpr<T15>(ValueAsString).AsValue();
    public T16 AsT16 => new StringSPWNExpr<T16>(ValueAsString).AsValue();
    public T17 AsT17 => new StringSPWNExpr<T17>(ValueAsString).AsValue();
    public T18 AsT18 => new StringSPWNExpr<T18>(ValueAsString).AsValue();
    public T19 AsT19 => new StringSPWNExpr<T19>(ValueAsString).AsValue();
    public T20 AsT20 => new StringSPWNExpr<T20>(ValueAsString).AsValue();
    public T21 AsT21 => new StringSPWNExpr<T21>(ValueAsString).AsValue();
    public T22 AsT22 => new StringSPWNExpr<T22>(ValueAsString).AsValue();

    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(T1 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(T2 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(T3 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(T4 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(T5 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(T6 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(T7 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(T8 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(T9 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(T10 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(T11 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(T12 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(T13 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(T14 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(T15 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(T16 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(T17 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(T18 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(T19 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(T20 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(T21 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22>(T22 Value) => new(Value);
}

// Note UnionTypes is NOT a Built-in type in SPWN
[SPWNType("@typeunion")]
public class UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23> : SPWNValueBase
    where T1 : SPWNValueBase
    where T2 : SPWNValueBase
    where T3 : SPWNValueBase
    where T4 : SPWNValueBase
    where T5 : SPWNValueBase
    where T6 : SPWNValueBase
    where T7 : SPWNValueBase
    where T8 : SPWNValueBase
    where T9 : SPWNValueBase
    where T10 : SPWNValueBase
    where T11 : SPWNValueBase
    where T12 : SPWNValueBase
    where T13 : SPWNValueBase
    where T14 : SPWNValueBase
    where T15 : SPWNValueBase
    where T16 : SPWNValueBase
    where T17 : SPWNValueBase
    where T18 : SPWNValueBase
    where T19 : SPWNValueBase
    where T20 : SPWNValueBase
    where T21 : SPWNValueBase
    where T22 : SPWNValueBase
    where T23 : SPWNValueBase
{
    public override string ValueAsString { get; protected set; }

    public UnionTypes(T1 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T2 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T3 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T4 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T5 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T6 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T7 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T8 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T9 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T10 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T11 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T12 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T13 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T14 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T15 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T16 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T17 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T18 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T19 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T20 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T21 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T22 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T23 Value) => ValueAsString = Value.ValueAsString;

    public bool IsT1 => Type == TypeIndicator.GetType<T1>();
    public bool IsT2 => Type == TypeIndicator.GetType<T2>();
    public bool IsT3 => Type == TypeIndicator.GetType<T3>();
    public bool IsT4 => Type == TypeIndicator.GetType<T4>();
    public bool IsT5 => Type == TypeIndicator.GetType<T5>();
    public bool IsT6 => Type == TypeIndicator.GetType<T6>();
    public bool IsT7 => Type == TypeIndicator.GetType<T7>();
    public bool IsT8 => Type == TypeIndicator.GetType<T8>();
    public bool IsT9 => Type == TypeIndicator.GetType<T9>();
    public bool IsT10 => Type == TypeIndicator.GetType<T10>();
    public bool IsT11 => Type == TypeIndicator.GetType<T11>();
    public bool IsT12 => Type == TypeIndicator.GetType<T12>();
    public bool IsT13 => Type == TypeIndicator.GetType<T13>();
    public bool IsT14 => Type == TypeIndicator.GetType<T14>();
    public bool IsT15 => Type == TypeIndicator.GetType<T15>();
    public bool IsT16 => Type == TypeIndicator.GetType<T16>();
    public bool IsT17 => Type == TypeIndicator.GetType<T17>();
    public bool IsT18 => Type == TypeIndicator.GetType<T18>();
    public bool IsT19 => Type == TypeIndicator.GetType<T19>();
    public bool IsT20 => Type == TypeIndicator.GetType<T20>();
    public bool IsT21 => Type == TypeIndicator.GetType<T21>();
    public bool IsT22 => Type == TypeIndicator.GetType<T22>();
    public bool IsT23 => Type == TypeIndicator.GetType<T23>();

    public T1 AsT1 => new StringSPWNExpr<T1>(ValueAsString).AsValue();
    public T2 AsT2 => new StringSPWNExpr<T2>(ValueAsString).AsValue();
    public T3 AsT3 => new StringSPWNExpr<T3>(ValueAsString).AsValue();
    public T4 AsT4 => new StringSPWNExpr<T4>(ValueAsString).AsValue();
    public T5 AsT5 => new StringSPWNExpr<T5>(ValueAsString).AsValue();
    public T6 AsT6 => new StringSPWNExpr<T6>(ValueAsString).AsValue();
    public T7 AsT7 => new StringSPWNExpr<T7>(ValueAsString).AsValue();
    public T8 AsT8 => new StringSPWNExpr<T8>(ValueAsString).AsValue();
    public T9 AsT9 => new StringSPWNExpr<T9>(ValueAsString).AsValue();
    public T10 AsT10 => new StringSPWNExpr<T10>(ValueAsString).AsValue();
    public T11 AsT11 => new StringSPWNExpr<T11>(ValueAsString).AsValue();
    public T12 AsT12 => new StringSPWNExpr<T12>(ValueAsString).AsValue();
    public T13 AsT13 => new StringSPWNExpr<T13>(ValueAsString).AsValue();
    public T14 AsT14 => new StringSPWNExpr<T14>(ValueAsString).AsValue();
    public T15 AsT15 => new StringSPWNExpr<T15>(ValueAsString).AsValue();
    public T16 AsT16 => new StringSPWNExpr<T16>(ValueAsString).AsValue();
    public T17 AsT17 => new StringSPWNExpr<T17>(ValueAsString).AsValue();
    public T18 AsT18 => new StringSPWNExpr<T18>(ValueAsString).AsValue();
    public T19 AsT19 => new StringSPWNExpr<T19>(ValueAsString).AsValue();
    public T20 AsT20 => new StringSPWNExpr<T20>(ValueAsString).AsValue();
    public T21 AsT21 => new StringSPWNExpr<T21>(ValueAsString).AsValue();
    public T22 AsT22 => new StringSPWNExpr<T22>(ValueAsString).AsValue();
    public T23 AsT23 => new StringSPWNExpr<T23>(ValueAsString).AsValue();

    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(T1 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(T2 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(T3 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(T4 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(T5 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(T6 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(T7 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(T8 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(T9 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(T10 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(T11 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(T12 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(T13 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(T14 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(T15 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(T16 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(T17 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(T18 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(T19 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(T20 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(T21 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(T22 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23>(T23 Value) => new(Value);
}

// Note UnionTypes is NOT a Built-in type in SPWN
[SPWNType("@typeunion")]
public class UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24> : SPWNValueBase
    where T1 : SPWNValueBase
    where T2 : SPWNValueBase
    where T3 : SPWNValueBase
    where T4 : SPWNValueBase
    where T5 : SPWNValueBase
    where T6 : SPWNValueBase
    where T7 : SPWNValueBase
    where T8 : SPWNValueBase
    where T9 : SPWNValueBase
    where T10 : SPWNValueBase
    where T11 : SPWNValueBase
    where T12 : SPWNValueBase
    where T13 : SPWNValueBase
    where T14 : SPWNValueBase
    where T15 : SPWNValueBase
    where T16 : SPWNValueBase
    where T17 : SPWNValueBase
    where T18 : SPWNValueBase
    where T19 : SPWNValueBase
    where T20 : SPWNValueBase
    where T21 : SPWNValueBase
    where T22 : SPWNValueBase
    where T23 : SPWNValueBase
    where T24 : SPWNValueBase
{
    public override string ValueAsString { get; protected set; }

    public UnionTypes(T1 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T2 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T3 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T4 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T5 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T6 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T7 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T8 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T9 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T10 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T11 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T12 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T13 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T14 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T15 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T16 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T17 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T18 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T19 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T20 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T21 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T22 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T23 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T24 Value) => ValueAsString = Value.ValueAsString;

    public bool IsT1 => Type == TypeIndicator.GetType<T1>();
    public bool IsT2 => Type == TypeIndicator.GetType<T2>();
    public bool IsT3 => Type == TypeIndicator.GetType<T3>();
    public bool IsT4 => Type == TypeIndicator.GetType<T4>();
    public bool IsT5 => Type == TypeIndicator.GetType<T5>();
    public bool IsT6 => Type == TypeIndicator.GetType<T6>();
    public bool IsT7 => Type == TypeIndicator.GetType<T7>();
    public bool IsT8 => Type == TypeIndicator.GetType<T8>();
    public bool IsT9 => Type == TypeIndicator.GetType<T9>();
    public bool IsT10 => Type == TypeIndicator.GetType<T10>();
    public bool IsT11 => Type == TypeIndicator.GetType<T11>();
    public bool IsT12 => Type == TypeIndicator.GetType<T12>();
    public bool IsT13 => Type == TypeIndicator.GetType<T13>();
    public bool IsT14 => Type == TypeIndicator.GetType<T14>();
    public bool IsT15 => Type == TypeIndicator.GetType<T15>();
    public bool IsT16 => Type == TypeIndicator.GetType<T16>();
    public bool IsT17 => Type == TypeIndicator.GetType<T17>();
    public bool IsT18 => Type == TypeIndicator.GetType<T18>();
    public bool IsT19 => Type == TypeIndicator.GetType<T19>();
    public bool IsT20 => Type == TypeIndicator.GetType<T20>();
    public bool IsT21 => Type == TypeIndicator.GetType<T21>();
    public bool IsT22 => Type == TypeIndicator.GetType<T22>();
    public bool IsT23 => Type == TypeIndicator.GetType<T23>();
    public bool IsT24 => Type == TypeIndicator.GetType<T24>();

    public T1 AsT1 => new StringSPWNExpr<T1>(ValueAsString).AsValue();
    public T2 AsT2 => new StringSPWNExpr<T2>(ValueAsString).AsValue();
    public T3 AsT3 => new StringSPWNExpr<T3>(ValueAsString).AsValue();
    public T4 AsT4 => new StringSPWNExpr<T4>(ValueAsString).AsValue();
    public T5 AsT5 => new StringSPWNExpr<T5>(ValueAsString).AsValue();
    public T6 AsT6 => new StringSPWNExpr<T6>(ValueAsString).AsValue();
    public T7 AsT7 => new StringSPWNExpr<T7>(ValueAsString).AsValue();
    public T8 AsT8 => new StringSPWNExpr<T8>(ValueAsString).AsValue();
    public T9 AsT9 => new StringSPWNExpr<T9>(ValueAsString).AsValue();
    public T10 AsT10 => new StringSPWNExpr<T10>(ValueAsString).AsValue();
    public T11 AsT11 => new StringSPWNExpr<T11>(ValueAsString).AsValue();
    public T12 AsT12 => new StringSPWNExpr<T12>(ValueAsString).AsValue();
    public T13 AsT13 => new StringSPWNExpr<T13>(ValueAsString).AsValue();
    public T14 AsT14 => new StringSPWNExpr<T14>(ValueAsString).AsValue();
    public T15 AsT15 => new StringSPWNExpr<T15>(ValueAsString).AsValue();
    public T16 AsT16 => new StringSPWNExpr<T16>(ValueAsString).AsValue();
    public T17 AsT17 => new StringSPWNExpr<T17>(ValueAsString).AsValue();
    public T18 AsT18 => new StringSPWNExpr<T18>(ValueAsString).AsValue();
    public T19 AsT19 => new StringSPWNExpr<T19>(ValueAsString).AsValue();
    public T20 AsT20 => new StringSPWNExpr<T20>(ValueAsString).AsValue();
    public T21 AsT21 => new StringSPWNExpr<T21>(ValueAsString).AsValue();
    public T22 AsT22 => new StringSPWNExpr<T22>(ValueAsString).AsValue();
    public T23 AsT23 => new StringSPWNExpr<T23>(ValueAsString).AsValue();
    public T24 AsT24 => new StringSPWNExpr<T24>(ValueAsString).AsValue();

    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(T1 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(T2 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(T3 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(T4 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(T5 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(T6 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(T7 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(T8 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(T9 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(T10 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(T11 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(T12 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(T13 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(T14 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(T15 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(T16 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(T17 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(T18 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(T19 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(T20 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(T21 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(T22 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(T23 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24>(T24 Value) => new(Value);
}

// Note UnionTypes is NOT a Built-in type in SPWN
[SPWNType("@typeunion")]
public class UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25> : SPWNValueBase
    where T1 : SPWNValueBase
    where T2 : SPWNValueBase
    where T3 : SPWNValueBase
    where T4 : SPWNValueBase
    where T5 : SPWNValueBase
    where T6 : SPWNValueBase
    where T7 : SPWNValueBase
    where T8 : SPWNValueBase
    where T9 : SPWNValueBase
    where T10 : SPWNValueBase
    where T11 : SPWNValueBase
    where T12 : SPWNValueBase
    where T13 : SPWNValueBase
    where T14 : SPWNValueBase
    where T15 : SPWNValueBase
    where T16 : SPWNValueBase
    where T17 : SPWNValueBase
    where T18 : SPWNValueBase
    where T19 : SPWNValueBase
    where T20 : SPWNValueBase
    where T21 : SPWNValueBase
    where T22 : SPWNValueBase
    where T23 : SPWNValueBase
    where T24 : SPWNValueBase
    where T25 : SPWNValueBase
{
    public override string ValueAsString { get; protected set; }

    public UnionTypes(T1 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T2 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T3 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T4 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T5 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T6 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T7 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T8 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T9 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T10 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T11 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T12 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T13 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T14 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T15 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T16 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T17 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T18 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T19 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T20 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T21 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T22 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T23 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T24 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T25 Value) => ValueAsString = Value.ValueAsString;

    public bool IsT1 => Type == TypeIndicator.GetType<T1>();
    public bool IsT2 => Type == TypeIndicator.GetType<T2>();
    public bool IsT3 => Type == TypeIndicator.GetType<T3>();
    public bool IsT4 => Type == TypeIndicator.GetType<T4>();
    public bool IsT5 => Type == TypeIndicator.GetType<T5>();
    public bool IsT6 => Type == TypeIndicator.GetType<T6>();
    public bool IsT7 => Type == TypeIndicator.GetType<T7>();
    public bool IsT8 => Type == TypeIndicator.GetType<T8>();
    public bool IsT9 => Type == TypeIndicator.GetType<T9>();
    public bool IsT10 => Type == TypeIndicator.GetType<T10>();
    public bool IsT11 => Type == TypeIndicator.GetType<T11>();
    public bool IsT12 => Type == TypeIndicator.GetType<T12>();
    public bool IsT13 => Type == TypeIndicator.GetType<T13>();
    public bool IsT14 => Type == TypeIndicator.GetType<T14>();
    public bool IsT15 => Type == TypeIndicator.GetType<T15>();
    public bool IsT16 => Type == TypeIndicator.GetType<T16>();
    public bool IsT17 => Type == TypeIndicator.GetType<T17>();
    public bool IsT18 => Type == TypeIndicator.GetType<T18>();
    public bool IsT19 => Type == TypeIndicator.GetType<T19>();
    public bool IsT20 => Type == TypeIndicator.GetType<T20>();
    public bool IsT21 => Type == TypeIndicator.GetType<T21>();
    public bool IsT22 => Type == TypeIndicator.GetType<T22>();
    public bool IsT23 => Type == TypeIndicator.GetType<T23>();
    public bool IsT24 => Type == TypeIndicator.GetType<T24>();
    public bool IsT25 => Type == TypeIndicator.GetType<T25>();

    public T1 AsT1 => new StringSPWNExpr<T1>(ValueAsString).AsValue();
    public T2 AsT2 => new StringSPWNExpr<T2>(ValueAsString).AsValue();
    public T3 AsT3 => new StringSPWNExpr<T3>(ValueAsString).AsValue();
    public T4 AsT4 => new StringSPWNExpr<T4>(ValueAsString).AsValue();
    public T5 AsT5 => new StringSPWNExpr<T5>(ValueAsString).AsValue();
    public T6 AsT6 => new StringSPWNExpr<T6>(ValueAsString).AsValue();
    public T7 AsT7 => new StringSPWNExpr<T7>(ValueAsString).AsValue();
    public T8 AsT8 => new StringSPWNExpr<T8>(ValueAsString).AsValue();
    public T9 AsT9 => new StringSPWNExpr<T9>(ValueAsString).AsValue();
    public T10 AsT10 => new StringSPWNExpr<T10>(ValueAsString).AsValue();
    public T11 AsT11 => new StringSPWNExpr<T11>(ValueAsString).AsValue();
    public T12 AsT12 => new StringSPWNExpr<T12>(ValueAsString).AsValue();
    public T13 AsT13 => new StringSPWNExpr<T13>(ValueAsString).AsValue();
    public T14 AsT14 => new StringSPWNExpr<T14>(ValueAsString).AsValue();
    public T15 AsT15 => new StringSPWNExpr<T15>(ValueAsString).AsValue();
    public T16 AsT16 => new StringSPWNExpr<T16>(ValueAsString).AsValue();
    public T17 AsT17 => new StringSPWNExpr<T17>(ValueAsString).AsValue();
    public T18 AsT18 => new StringSPWNExpr<T18>(ValueAsString).AsValue();
    public T19 AsT19 => new StringSPWNExpr<T19>(ValueAsString).AsValue();
    public T20 AsT20 => new StringSPWNExpr<T20>(ValueAsString).AsValue();
    public T21 AsT21 => new StringSPWNExpr<T21>(ValueAsString).AsValue();
    public T22 AsT22 => new StringSPWNExpr<T22>(ValueAsString).AsValue();
    public T23 AsT23 => new StringSPWNExpr<T23>(ValueAsString).AsValue();
    public T24 AsT24 => new StringSPWNExpr<T24>(ValueAsString).AsValue();
    public T25 AsT25 => new StringSPWNExpr<T25>(ValueAsString).AsValue();

    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(T1 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(T2 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(T3 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(T4 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(T5 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(T6 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(T7 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(T8 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(T9 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(T10 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(T11 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(T12 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(T13 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(T14 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(T15 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(T16 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(T17 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(T18 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(T19 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(T20 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(T21 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(T22 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(T23 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(T24 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25>(T25 Value) => new(Value);
}

// Note UnionTypes is NOT a Built-in type in SPWN
[SPWNType("@typeunion")]
public class UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26> : SPWNValueBase
    where T1 : SPWNValueBase
    where T2 : SPWNValueBase
    where T3 : SPWNValueBase
    where T4 : SPWNValueBase
    where T5 : SPWNValueBase
    where T6 : SPWNValueBase
    where T7 : SPWNValueBase
    where T8 : SPWNValueBase
    where T9 : SPWNValueBase
    where T10 : SPWNValueBase
    where T11 : SPWNValueBase
    where T12 : SPWNValueBase
    where T13 : SPWNValueBase
    where T14 : SPWNValueBase
    where T15 : SPWNValueBase
    where T16 : SPWNValueBase
    where T17 : SPWNValueBase
    where T18 : SPWNValueBase
    where T19 : SPWNValueBase
    where T20 : SPWNValueBase
    where T21 : SPWNValueBase
    where T22 : SPWNValueBase
    where T23 : SPWNValueBase
    where T24 : SPWNValueBase
    where T25 : SPWNValueBase
    where T26 : SPWNValueBase
{
    public override string ValueAsString { get; protected set; }

    public UnionTypes(T1 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T2 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T3 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T4 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T5 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T6 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T7 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T8 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T9 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T10 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T11 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T12 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T13 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T14 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T15 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T16 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T17 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T18 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T19 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T20 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T21 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T22 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T23 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T24 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T25 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T26 Value) => ValueAsString = Value.ValueAsString;

    public bool IsT1 => Type == TypeIndicator.GetType<T1>();
    public bool IsT2 => Type == TypeIndicator.GetType<T2>();
    public bool IsT3 => Type == TypeIndicator.GetType<T3>();
    public bool IsT4 => Type == TypeIndicator.GetType<T4>();
    public bool IsT5 => Type == TypeIndicator.GetType<T5>();
    public bool IsT6 => Type == TypeIndicator.GetType<T6>();
    public bool IsT7 => Type == TypeIndicator.GetType<T7>();
    public bool IsT8 => Type == TypeIndicator.GetType<T8>();
    public bool IsT9 => Type == TypeIndicator.GetType<T9>();
    public bool IsT10 => Type == TypeIndicator.GetType<T10>();
    public bool IsT11 => Type == TypeIndicator.GetType<T11>();
    public bool IsT12 => Type == TypeIndicator.GetType<T12>();
    public bool IsT13 => Type == TypeIndicator.GetType<T13>();
    public bool IsT14 => Type == TypeIndicator.GetType<T14>();
    public bool IsT15 => Type == TypeIndicator.GetType<T15>();
    public bool IsT16 => Type == TypeIndicator.GetType<T16>();
    public bool IsT17 => Type == TypeIndicator.GetType<T17>();
    public bool IsT18 => Type == TypeIndicator.GetType<T18>();
    public bool IsT19 => Type == TypeIndicator.GetType<T19>();
    public bool IsT20 => Type == TypeIndicator.GetType<T20>();
    public bool IsT21 => Type == TypeIndicator.GetType<T21>();
    public bool IsT22 => Type == TypeIndicator.GetType<T22>();
    public bool IsT23 => Type == TypeIndicator.GetType<T23>();
    public bool IsT24 => Type == TypeIndicator.GetType<T24>();
    public bool IsT25 => Type == TypeIndicator.GetType<T25>();
    public bool IsT26 => Type == TypeIndicator.GetType<T26>();

    public T1 AsT1 => new StringSPWNExpr<T1>(ValueAsString).AsValue();
    public T2 AsT2 => new StringSPWNExpr<T2>(ValueAsString).AsValue();
    public T3 AsT3 => new StringSPWNExpr<T3>(ValueAsString).AsValue();
    public T4 AsT4 => new StringSPWNExpr<T4>(ValueAsString).AsValue();
    public T5 AsT5 => new StringSPWNExpr<T5>(ValueAsString).AsValue();
    public T6 AsT6 => new StringSPWNExpr<T6>(ValueAsString).AsValue();
    public T7 AsT7 => new StringSPWNExpr<T7>(ValueAsString).AsValue();
    public T8 AsT8 => new StringSPWNExpr<T8>(ValueAsString).AsValue();
    public T9 AsT9 => new StringSPWNExpr<T9>(ValueAsString).AsValue();
    public T10 AsT10 => new StringSPWNExpr<T10>(ValueAsString).AsValue();
    public T11 AsT11 => new StringSPWNExpr<T11>(ValueAsString).AsValue();
    public T12 AsT12 => new StringSPWNExpr<T12>(ValueAsString).AsValue();
    public T13 AsT13 => new StringSPWNExpr<T13>(ValueAsString).AsValue();
    public T14 AsT14 => new StringSPWNExpr<T14>(ValueAsString).AsValue();
    public T15 AsT15 => new StringSPWNExpr<T15>(ValueAsString).AsValue();
    public T16 AsT16 => new StringSPWNExpr<T16>(ValueAsString).AsValue();
    public T17 AsT17 => new StringSPWNExpr<T17>(ValueAsString).AsValue();
    public T18 AsT18 => new StringSPWNExpr<T18>(ValueAsString).AsValue();
    public T19 AsT19 => new StringSPWNExpr<T19>(ValueAsString).AsValue();
    public T20 AsT20 => new StringSPWNExpr<T20>(ValueAsString).AsValue();
    public T21 AsT21 => new StringSPWNExpr<T21>(ValueAsString).AsValue();
    public T22 AsT22 => new StringSPWNExpr<T22>(ValueAsString).AsValue();
    public T23 AsT23 => new StringSPWNExpr<T23>(ValueAsString).AsValue();
    public T24 AsT24 => new StringSPWNExpr<T24>(ValueAsString).AsValue();
    public T25 AsT25 => new StringSPWNExpr<T25>(ValueAsString).AsValue();
    public T26 AsT26 => new StringSPWNExpr<T26>(ValueAsString).AsValue();

    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(T1 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(T2 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(T3 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(T4 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(T5 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(T6 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(T7 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(T8 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(T9 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(T10 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(T11 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(T12 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(T13 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(T14 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(T15 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(T16 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(T17 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(T18 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(T19 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(T20 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(T21 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(T22 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(T23 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(T24 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(T25 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26>(T26 Value) => new(Value);
}

// Note UnionTypes is NOT a Built-in type in SPWN
[SPWNType("@typeunion")]
public class UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27> : SPWNValueBase
    where T1 : SPWNValueBase
    where T2 : SPWNValueBase
    where T3 : SPWNValueBase
    where T4 : SPWNValueBase
    where T5 : SPWNValueBase
    where T6 : SPWNValueBase
    where T7 : SPWNValueBase
    where T8 : SPWNValueBase
    where T9 : SPWNValueBase
    where T10 : SPWNValueBase
    where T11 : SPWNValueBase
    where T12 : SPWNValueBase
    where T13 : SPWNValueBase
    where T14 : SPWNValueBase
    where T15 : SPWNValueBase
    where T16 : SPWNValueBase
    where T17 : SPWNValueBase
    where T18 : SPWNValueBase
    where T19 : SPWNValueBase
    where T20 : SPWNValueBase
    where T21 : SPWNValueBase
    where T22 : SPWNValueBase
    where T23 : SPWNValueBase
    where T24 : SPWNValueBase
    where T25 : SPWNValueBase
    where T26 : SPWNValueBase
    where T27 : SPWNValueBase
{
    public override string ValueAsString { get; protected set; }

    public UnionTypes(T1 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T2 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T3 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T4 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T5 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T6 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T7 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T8 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T9 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T10 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T11 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T12 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T13 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T14 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T15 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T16 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T17 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T18 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T19 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T20 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T21 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T22 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T23 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T24 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T25 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T26 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T27 Value) => ValueAsString = Value.ValueAsString;

    public bool IsT1 => Type == TypeIndicator.GetType<T1>();
    public bool IsT2 => Type == TypeIndicator.GetType<T2>();
    public bool IsT3 => Type == TypeIndicator.GetType<T3>();
    public bool IsT4 => Type == TypeIndicator.GetType<T4>();
    public bool IsT5 => Type == TypeIndicator.GetType<T5>();
    public bool IsT6 => Type == TypeIndicator.GetType<T6>();
    public bool IsT7 => Type == TypeIndicator.GetType<T7>();
    public bool IsT8 => Type == TypeIndicator.GetType<T8>();
    public bool IsT9 => Type == TypeIndicator.GetType<T9>();
    public bool IsT10 => Type == TypeIndicator.GetType<T10>();
    public bool IsT11 => Type == TypeIndicator.GetType<T11>();
    public bool IsT12 => Type == TypeIndicator.GetType<T12>();
    public bool IsT13 => Type == TypeIndicator.GetType<T13>();
    public bool IsT14 => Type == TypeIndicator.GetType<T14>();
    public bool IsT15 => Type == TypeIndicator.GetType<T15>();
    public bool IsT16 => Type == TypeIndicator.GetType<T16>();
    public bool IsT17 => Type == TypeIndicator.GetType<T17>();
    public bool IsT18 => Type == TypeIndicator.GetType<T18>();
    public bool IsT19 => Type == TypeIndicator.GetType<T19>();
    public bool IsT20 => Type == TypeIndicator.GetType<T20>();
    public bool IsT21 => Type == TypeIndicator.GetType<T21>();
    public bool IsT22 => Type == TypeIndicator.GetType<T22>();
    public bool IsT23 => Type == TypeIndicator.GetType<T23>();
    public bool IsT24 => Type == TypeIndicator.GetType<T24>();
    public bool IsT25 => Type == TypeIndicator.GetType<T25>();
    public bool IsT26 => Type == TypeIndicator.GetType<T26>();
    public bool IsT27 => Type == TypeIndicator.GetType<T27>();

    public T1 AsT1 => new StringSPWNExpr<T1>(ValueAsString).AsValue();
    public T2 AsT2 => new StringSPWNExpr<T2>(ValueAsString).AsValue();
    public T3 AsT3 => new StringSPWNExpr<T3>(ValueAsString).AsValue();
    public T4 AsT4 => new StringSPWNExpr<T4>(ValueAsString).AsValue();
    public T5 AsT5 => new StringSPWNExpr<T5>(ValueAsString).AsValue();
    public T6 AsT6 => new StringSPWNExpr<T6>(ValueAsString).AsValue();
    public T7 AsT7 => new StringSPWNExpr<T7>(ValueAsString).AsValue();
    public T8 AsT8 => new StringSPWNExpr<T8>(ValueAsString).AsValue();
    public T9 AsT9 => new StringSPWNExpr<T9>(ValueAsString).AsValue();
    public T10 AsT10 => new StringSPWNExpr<T10>(ValueAsString).AsValue();
    public T11 AsT11 => new StringSPWNExpr<T11>(ValueAsString).AsValue();
    public T12 AsT12 => new StringSPWNExpr<T12>(ValueAsString).AsValue();
    public T13 AsT13 => new StringSPWNExpr<T13>(ValueAsString).AsValue();
    public T14 AsT14 => new StringSPWNExpr<T14>(ValueAsString).AsValue();
    public T15 AsT15 => new StringSPWNExpr<T15>(ValueAsString).AsValue();
    public T16 AsT16 => new StringSPWNExpr<T16>(ValueAsString).AsValue();
    public T17 AsT17 => new StringSPWNExpr<T17>(ValueAsString).AsValue();
    public T18 AsT18 => new StringSPWNExpr<T18>(ValueAsString).AsValue();
    public T19 AsT19 => new StringSPWNExpr<T19>(ValueAsString).AsValue();
    public T20 AsT20 => new StringSPWNExpr<T20>(ValueAsString).AsValue();
    public T21 AsT21 => new StringSPWNExpr<T21>(ValueAsString).AsValue();
    public T22 AsT22 => new StringSPWNExpr<T22>(ValueAsString).AsValue();
    public T23 AsT23 => new StringSPWNExpr<T23>(ValueAsString).AsValue();
    public T24 AsT24 => new StringSPWNExpr<T24>(ValueAsString).AsValue();
    public T25 AsT25 => new StringSPWNExpr<T25>(ValueAsString).AsValue();
    public T26 AsT26 => new StringSPWNExpr<T26>(ValueAsString).AsValue();
    public T27 AsT27 => new StringSPWNExpr<T27>(ValueAsString).AsValue();

    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(T1 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(T2 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(T3 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(T4 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(T5 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(T6 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(T7 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(T8 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(T9 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(T10 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(T11 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(T12 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(T13 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(T14 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(T15 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(T16 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(T17 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(T18 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(T19 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(T20 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(T21 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(T22 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(T23 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(T24 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(T25 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(T26 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27>(T27 Value) => new(Value);
}

// Note UnionTypes is NOT a Built-in type in SPWN
[SPWNType("@typeunion")]
public class UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28> : SPWNValueBase
    where T1 : SPWNValueBase
    where T2 : SPWNValueBase
    where T3 : SPWNValueBase
    where T4 : SPWNValueBase
    where T5 : SPWNValueBase
    where T6 : SPWNValueBase
    where T7 : SPWNValueBase
    where T8 : SPWNValueBase
    where T9 : SPWNValueBase
    where T10 : SPWNValueBase
    where T11 : SPWNValueBase
    where T12 : SPWNValueBase
    where T13 : SPWNValueBase
    where T14 : SPWNValueBase
    where T15 : SPWNValueBase
    where T16 : SPWNValueBase
    where T17 : SPWNValueBase
    where T18 : SPWNValueBase
    where T19 : SPWNValueBase
    where T20 : SPWNValueBase
    where T21 : SPWNValueBase
    where T22 : SPWNValueBase
    where T23 : SPWNValueBase
    where T24 : SPWNValueBase
    where T25 : SPWNValueBase
    where T26 : SPWNValueBase
    where T27 : SPWNValueBase
    where T28 : SPWNValueBase
{
    public override string ValueAsString { get; protected set; }

    public UnionTypes(T1 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T2 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T3 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T4 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T5 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T6 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T7 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T8 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T9 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T10 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T11 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T12 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T13 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T14 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T15 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T16 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T17 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T18 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T19 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T20 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T21 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T22 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T23 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T24 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T25 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T26 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T27 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T28 Value) => ValueAsString = Value.ValueAsString;

    public bool IsT1 => Type == TypeIndicator.GetType<T1>();
    public bool IsT2 => Type == TypeIndicator.GetType<T2>();
    public bool IsT3 => Type == TypeIndicator.GetType<T3>();
    public bool IsT4 => Type == TypeIndicator.GetType<T4>();
    public bool IsT5 => Type == TypeIndicator.GetType<T5>();
    public bool IsT6 => Type == TypeIndicator.GetType<T6>();
    public bool IsT7 => Type == TypeIndicator.GetType<T7>();
    public bool IsT8 => Type == TypeIndicator.GetType<T8>();
    public bool IsT9 => Type == TypeIndicator.GetType<T9>();
    public bool IsT10 => Type == TypeIndicator.GetType<T10>();
    public bool IsT11 => Type == TypeIndicator.GetType<T11>();
    public bool IsT12 => Type == TypeIndicator.GetType<T12>();
    public bool IsT13 => Type == TypeIndicator.GetType<T13>();
    public bool IsT14 => Type == TypeIndicator.GetType<T14>();
    public bool IsT15 => Type == TypeIndicator.GetType<T15>();
    public bool IsT16 => Type == TypeIndicator.GetType<T16>();
    public bool IsT17 => Type == TypeIndicator.GetType<T17>();
    public bool IsT18 => Type == TypeIndicator.GetType<T18>();
    public bool IsT19 => Type == TypeIndicator.GetType<T19>();
    public bool IsT20 => Type == TypeIndicator.GetType<T20>();
    public bool IsT21 => Type == TypeIndicator.GetType<T21>();
    public bool IsT22 => Type == TypeIndicator.GetType<T22>();
    public bool IsT23 => Type == TypeIndicator.GetType<T23>();
    public bool IsT24 => Type == TypeIndicator.GetType<T24>();
    public bool IsT25 => Type == TypeIndicator.GetType<T25>();
    public bool IsT26 => Type == TypeIndicator.GetType<T26>();
    public bool IsT27 => Type == TypeIndicator.GetType<T27>();
    public bool IsT28 => Type == TypeIndicator.GetType<T28>();

    public T1 AsT1 => new StringSPWNExpr<T1>(ValueAsString).AsValue();
    public T2 AsT2 => new StringSPWNExpr<T2>(ValueAsString).AsValue();
    public T3 AsT3 => new StringSPWNExpr<T3>(ValueAsString).AsValue();
    public T4 AsT4 => new StringSPWNExpr<T4>(ValueAsString).AsValue();
    public T5 AsT5 => new StringSPWNExpr<T5>(ValueAsString).AsValue();
    public T6 AsT6 => new StringSPWNExpr<T6>(ValueAsString).AsValue();
    public T7 AsT7 => new StringSPWNExpr<T7>(ValueAsString).AsValue();
    public T8 AsT8 => new StringSPWNExpr<T8>(ValueAsString).AsValue();
    public T9 AsT9 => new StringSPWNExpr<T9>(ValueAsString).AsValue();
    public T10 AsT10 => new StringSPWNExpr<T10>(ValueAsString).AsValue();
    public T11 AsT11 => new StringSPWNExpr<T11>(ValueAsString).AsValue();
    public T12 AsT12 => new StringSPWNExpr<T12>(ValueAsString).AsValue();
    public T13 AsT13 => new StringSPWNExpr<T13>(ValueAsString).AsValue();
    public T14 AsT14 => new StringSPWNExpr<T14>(ValueAsString).AsValue();
    public T15 AsT15 => new StringSPWNExpr<T15>(ValueAsString).AsValue();
    public T16 AsT16 => new StringSPWNExpr<T16>(ValueAsString).AsValue();
    public T17 AsT17 => new StringSPWNExpr<T17>(ValueAsString).AsValue();
    public T18 AsT18 => new StringSPWNExpr<T18>(ValueAsString).AsValue();
    public T19 AsT19 => new StringSPWNExpr<T19>(ValueAsString).AsValue();
    public T20 AsT20 => new StringSPWNExpr<T20>(ValueAsString).AsValue();
    public T21 AsT21 => new StringSPWNExpr<T21>(ValueAsString).AsValue();
    public T22 AsT22 => new StringSPWNExpr<T22>(ValueAsString).AsValue();
    public T23 AsT23 => new StringSPWNExpr<T23>(ValueAsString).AsValue();
    public T24 AsT24 => new StringSPWNExpr<T24>(ValueAsString).AsValue();
    public T25 AsT25 => new StringSPWNExpr<T25>(ValueAsString).AsValue();
    public T26 AsT26 => new StringSPWNExpr<T26>(ValueAsString).AsValue();
    public T27 AsT27 => new StringSPWNExpr<T27>(ValueAsString).AsValue();
    public T28 AsT28 => new StringSPWNExpr<T28>(ValueAsString).AsValue();

    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(T1 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(T2 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(T3 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(T4 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(T5 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(T6 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(T7 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(T8 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(T9 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(T10 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(T11 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(T12 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(T13 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(T14 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(T15 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(T16 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(T17 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(T18 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(T19 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(T20 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(T21 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(T22 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(T23 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(T24 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(T25 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(T26 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(T27 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28>(T28 Value) => new(Value);
}

// Note UnionTypes is NOT a Built-in type in SPWN
[SPWNType("@typeunion")]
public class UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29> : SPWNValueBase
    where T1 : SPWNValueBase
    where T2 : SPWNValueBase
    where T3 : SPWNValueBase
    where T4 : SPWNValueBase
    where T5 : SPWNValueBase
    where T6 : SPWNValueBase
    where T7 : SPWNValueBase
    where T8 : SPWNValueBase
    where T9 : SPWNValueBase
    where T10 : SPWNValueBase
    where T11 : SPWNValueBase
    where T12 : SPWNValueBase
    where T13 : SPWNValueBase
    where T14 : SPWNValueBase
    where T15 : SPWNValueBase
    where T16 : SPWNValueBase
    where T17 : SPWNValueBase
    where T18 : SPWNValueBase
    where T19 : SPWNValueBase
    where T20 : SPWNValueBase
    where T21 : SPWNValueBase
    where T22 : SPWNValueBase
    where T23 : SPWNValueBase
    where T24 : SPWNValueBase
    where T25 : SPWNValueBase
    where T26 : SPWNValueBase
    where T27 : SPWNValueBase
    where T28 : SPWNValueBase
    where T29 : SPWNValueBase
{
    public override string ValueAsString { get; protected set; }

    public UnionTypes(T1 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T2 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T3 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T4 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T5 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T6 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T7 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T8 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T9 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T10 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T11 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T12 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T13 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T14 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T15 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T16 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T17 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T18 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T19 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T20 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T21 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T22 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T23 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T24 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T25 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T26 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T27 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T28 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T29 Value) => ValueAsString = Value.ValueAsString;

    public bool IsT1 => Type == TypeIndicator.GetType<T1>();
    public bool IsT2 => Type == TypeIndicator.GetType<T2>();
    public bool IsT3 => Type == TypeIndicator.GetType<T3>();
    public bool IsT4 => Type == TypeIndicator.GetType<T4>();
    public bool IsT5 => Type == TypeIndicator.GetType<T5>();
    public bool IsT6 => Type == TypeIndicator.GetType<T6>();
    public bool IsT7 => Type == TypeIndicator.GetType<T7>();
    public bool IsT8 => Type == TypeIndicator.GetType<T8>();
    public bool IsT9 => Type == TypeIndicator.GetType<T9>();
    public bool IsT10 => Type == TypeIndicator.GetType<T10>();
    public bool IsT11 => Type == TypeIndicator.GetType<T11>();
    public bool IsT12 => Type == TypeIndicator.GetType<T12>();
    public bool IsT13 => Type == TypeIndicator.GetType<T13>();
    public bool IsT14 => Type == TypeIndicator.GetType<T14>();
    public bool IsT15 => Type == TypeIndicator.GetType<T15>();
    public bool IsT16 => Type == TypeIndicator.GetType<T16>();
    public bool IsT17 => Type == TypeIndicator.GetType<T17>();
    public bool IsT18 => Type == TypeIndicator.GetType<T18>();
    public bool IsT19 => Type == TypeIndicator.GetType<T19>();
    public bool IsT20 => Type == TypeIndicator.GetType<T20>();
    public bool IsT21 => Type == TypeIndicator.GetType<T21>();
    public bool IsT22 => Type == TypeIndicator.GetType<T22>();
    public bool IsT23 => Type == TypeIndicator.GetType<T23>();
    public bool IsT24 => Type == TypeIndicator.GetType<T24>();
    public bool IsT25 => Type == TypeIndicator.GetType<T25>();
    public bool IsT26 => Type == TypeIndicator.GetType<T26>();
    public bool IsT27 => Type == TypeIndicator.GetType<T27>();
    public bool IsT28 => Type == TypeIndicator.GetType<T28>();
    public bool IsT29 => Type == TypeIndicator.GetType<T29>();

    public T1 AsT1 => new StringSPWNExpr<T1>(ValueAsString).AsValue();
    public T2 AsT2 => new StringSPWNExpr<T2>(ValueAsString).AsValue();
    public T3 AsT3 => new StringSPWNExpr<T3>(ValueAsString).AsValue();
    public T4 AsT4 => new StringSPWNExpr<T4>(ValueAsString).AsValue();
    public T5 AsT5 => new StringSPWNExpr<T5>(ValueAsString).AsValue();
    public T6 AsT6 => new StringSPWNExpr<T6>(ValueAsString).AsValue();
    public T7 AsT7 => new StringSPWNExpr<T7>(ValueAsString).AsValue();
    public T8 AsT8 => new StringSPWNExpr<T8>(ValueAsString).AsValue();
    public T9 AsT9 => new StringSPWNExpr<T9>(ValueAsString).AsValue();
    public T10 AsT10 => new StringSPWNExpr<T10>(ValueAsString).AsValue();
    public T11 AsT11 => new StringSPWNExpr<T11>(ValueAsString).AsValue();
    public T12 AsT12 => new StringSPWNExpr<T12>(ValueAsString).AsValue();
    public T13 AsT13 => new StringSPWNExpr<T13>(ValueAsString).AsValue();
    public T14 AsT14 => new StringSPWNExpr<T14>(ValueAsString).AsValue();
    public T15 AsT15 => new StringSPWNExpr<T15>(ValueAsString).AsValue();
    public T16 AsT16 => new StringSPWNExpr<T16>(ValueAsString).AsValue();
    public T17 AsT17 => new StringSPWNExpr<T17>(ValueAsString).AsValue();
    public T18 AsT18 => new StringSPWNExpr<T18>(ValueAsString).AsValue();
    public T19 AsT19 => new StringSPWNExpr<T19>(ValueAsString).AsValue();
    public T20 AsT20 => new StringSPWNExpr<T20>(ValueAsString).AsValue();
    public T21 AsT21 => new StringSPWNExpr<T21>(ValueAsString).AsValue();
    public T22 AsT22 => new StringSPWNExpr<T22>(ValueAsString).AsValue();
    public T23 AsT23 => new StringSPWNExpr<T23>(ValueAsString).AsValue();
    public T24 AsT24 => new StringSPWNExpr<T24>(ValueAsString).AsValue();
    public T25 AsT25 => new StringSPWNExpr<T25>(ValueAsString).AsValue();
    public T26 AsT26 => new StringSPWNExpr<T26>(ValueAsString).AsValue();
    public T27 AsT27 => new StringSPWNExpr<T27>(ValueAsString).AsValue();
    public T28 AsT28 => new StringSPWNExpr<T28>(ValueAsString).AsValue();
    public T29 AsT29 => new StringSPWNExpr<T29>(ValueAsString).AsValue();

    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(T1 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(T2 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(T3 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(T4 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(T5 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(T6 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(T7 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(T8 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(T9 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(T10 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(T11 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(T12 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(T13 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(T14 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(T15 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(T16 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(T17 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(T18 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(T19 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(T20 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(T21 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(T22 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(T23 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(T24 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(T25 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(T26 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(T27 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(T28 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29>(T29 Value) => new(Value);
}

// Note UnionTypes is NOT a Built-in type in SPWN
[SPWNType("@typeunion")]
public class UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30> : SPWNValueBase
    where T1 : SPWNValueBase
    where T2 : SPWNValueBase
    where T3 : SPWNValueBase
    where T4 : SPWNValueBase
    where T5 : SPWNValueBase
    where T6 : SPWNValueBase
    where T7 : SPWNValueBase
    where T8 : SPWNValueBase
    where T9 : SPWNValueBase
    where T10 : SPWNValueBase
    where T11 : SPWNValueBase
    where T12 : SPWNValueBase
    where T13 : SPWNValueBase
    where T14 : SPWNValueBase
    where T15 : SPWNValueBase
    where T16 : SPWNValueBase
    where T17 : SPWNValueBase
    where T18 : SPWNValueBase
    where T19 : SPWNValueBase
    where T20 : SPWNValueBase
    where T21 : SPWNValueBase
    where T22 : SPWNValueBase
    where T23 : SPWNValueBase
    where T24 : SPWNValueBase
    where T25 : SPWNValueBase
    where T26 : SPWNValueBase
    where T27 : SPWNValueBase
    where T28 : SPWNValueBase
    where T29 : SPWNValueBase
    where T30 : SPWNValueBase
{
    public override string ValueAsString { get; protected set; }

    public UnionTypes(T1 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T2 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T3 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T4 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T5 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T6 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T7 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T8 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T9 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T10 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T11 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T12 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T13 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T14 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T15 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T16 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T17 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T18 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T19 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T20 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T21 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T22 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T23 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T24 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T25 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T26 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T27 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T28 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T29 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T30 Value) => ValueAsString = Value.ValueAsString;

    public bool IsT1 => Type == TypeIndicator.GetType<T1>();
    public bool IsT2 => Type == TypeIndicator.GetType<T2>();
    public bool IsT3 => Type == TypeIndicator.GetType<T3>();
    public bool IsT4 => Type == TypeIndicator.GetType<T4>();
    public bool IsT5 => Type == TypeIndicator.GetType<T5>();
    public bool IsT6 => Type == TypeIndicator.GetType<T6>();
    public bool IsT7 => Type == TypeIndicator.GetType<T7>();
    public bool IsT8 => Type == TypeIndicator.GetType<T8>();
    public bool IsT9 => Type == TypeIndicator.GetType<T9>();
    public bool IsT10 => Type == TypeIndicator.GetType<T10>();
    public bool IsT11 => Type == TypeIndicator.GetType<T11>();
    public bool IsT12 => Type == TypeIndicator.GetType<T12>();
    public bool IsT13 => Type == TypeIndicator.GetType<T13>();
    public bool IsT14 => Type == TypeIndicator.GetType<T14>();
    public bool IsT15 => Type == TypeIndicator.GetType<T15>();
    public bool IsT16 => Type == TypeIndicator.GetType<T16>();
    public bool IsT17 => Type == TypeIndicator.GetType<T17>();
    public bool IsT18 => Type == TypeIndicator.GetType<T18>();
    public bool IsT19 => Type == TypeIndicator.GetType<T19>();
    public bool IsT20 => Type == TypeIndicator.GetType<T20>();
    public bool IsT21 => Type == TypeIndicator.GetType<T21>();
    public bool IsT22 => Type == TypeIndicator.GetType<T22>();
    public bool IsT23 => Type == TypeIndicator.GetType<T23>();
    public bool IsT24 => Type == TypeIndicator.GetType<T24>();
    public bool IsT25 => Type == TypeIndicator.GetType<T25>();
    public bool IsT26 => Type == TypeIndicator.GetType<T26>();
    public bool IsT27 => Type == TypeIndicator.GetType<T27>();
    public bool IsT28 => Type == TypeIndicator.GetType<T28>();
    public bool IsT29 => Type == TypeIndicator.GetType<T29>();
    public bool IsT30 => Type == TypeIndicator.GetType<T30>();

    public T1 AsT1 => new StringSPWNExpr<T1>(ValueAsString).AsValue();
    public T2 AsT2 => new StringSPWNExpr<T2>(ValueAsString).AsValue();
    public T3 AsT3 => new StringSPWNExpr<T3>(ValueAsString).AsValue();
    public T4 AsT4 => new StringSPWNExpr<T4>(ValueAsString).AsValue();
    public T5 AsT5 => new StringSPWNExpr<T5>(ValueAsString).AsValue();
    public T6 AsT6 => new StringSPWNExpr<T6>(ValueAsString).AsValue();
    public T7 AsT7 => new StringSPWNExpr<T7>(ValueAsString).AsValue();
    public T8 AsT8 => new StringSPWNExpr<T8>(ValueAsString).AsValue();
    public T9 AsT9 => new StringSPWNExpr<T9>(ValueAsString).AsValue();
    public T10 AsT10 => new StringSPWNExpr<T10>(ValueAsString).AsValue();
    public T11 AsT11 => new StringSPWNExpr<T11>(ValueAsString).AsValue();
    public T12 AsT12 => new StringSPWNExpr<T12>(ValueAsString).AsValue();
    public T13 AsT13 => new StringSPWNExpr<T13>(ValueAsString).AsValue();
    public T14 AsT14 => new StringSPWNExpr<T14>(ValueAsString).AsValue();
    public T15 AsT15 => new StringSPWNExpr<T15>(ValueAsString).AsValue();
    public T16 AsT16 => new StringSPWNExpr<T16>(ValueAsString).AsValue();
    public T17 AsT17 => new StringSPWNExpr<T17>(ValueAsString).AsValue();
    public T18 AsT18 => new StringSPWNExpr<T18>(ValueAsString).AsValue();
    public T19 AsT19 => new StringSPWNExpr<T19>(ValueAsString).AsValue();
    public T20 AsT20 => new StringSPWNExpr<T20>(ValueAsString).AsValue();
    public T21 AsT21 => new StringSPWNExpr<T21>(ValueAsString).AsValue();
    public T22 AsT22 => new StringSPWNExpr<T22>(ValueAsString).AsValue();
    public T23 AsT23 => new StringSPWNExpr<T23>(ValueAsString).AsValue();
    public T24 AsT24 => new StringSPWNExpr<T24>(ValueAsString).AsValue();
    public T25 AsT25 => new StringSPWNExpr<T25>(ValueAsString).AsValue();
    public T26 AsT26 => new StringSPWNExpr<T26>(ValueAsString).AsValue();
    public T27 AsT27 => new StringSPWNExpr<T27>(ValueAsString).AsValue();
    public T28 AsT28 => new StringSPWNExpr<T28>(ValueAsString).AsValue();
    public T29 AsT29 => new StringSPWNExpr<T29>(ValueAsString).AsValue();
    public T30 AsT30 => new StringSPWNExpr<T30>(ValueAsString).AsValue();

    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(T1 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(T2 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(T3 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(T4 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(T5 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(T6 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(T7 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(T8 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(T9 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(T10 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(T11 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(T12 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(T13 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(T14 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(T15 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(T16 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(T17 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(T18 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(T19 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(T20 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(T21 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(T22 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(T23 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(T24 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(T25 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(T26 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(T27 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(T28 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(T29 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30>(T30 Value) => new(Value);
}

// Note UnionTypes is NOT a Built-in type in SPWN
[SPWNType("@typeunion")]
public class UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31> : SPWNValueBase
    where T1 : SPWNValueBase
    where T2 : SPWNValueBase
    where T3 : SPWNValueBase
    where T4 : SPWNValueBase
    where T5 : SPWNValueBase
    where T6 : SPWNValueBase
    where T7 : SPWNValueBase
    where T8 : SPWNValueBase
    where T9 : SPWNValueBase
    where T10 : SPWNValueBase
    where T11 : SPWNValueBase
    where T12 : SPWNValueBase
    where T13 : SPWNValueBase
    where T14 : SPWNValueBase
    where T15 : SPWNValueBase
    where T16 : SPWNValueBase
    where T17 : SPWNValueBase
    where T18 : SPWNValueBase
    where T19 : SPWNValueBase
    where T20 : SPWNValueBase
    where T21 : SPWNValueBase
    where T22 : SPWNValueBase
    where T23 : SPWNValueBase
    where T24 : SPWNValueBase
    where T25 : SPWNValueBase
    where T26 : SPWNValueBase
    where T27 : SPWNValueBase
    where T28 : SPWNValueBase
    where T29 : SPWNValueBase
    where T30 : SPWNValueBase
    where T31 : SPWNValueBase
{
    public override string ValueAsString { get; protected set; }

    public UnionTypes(T1 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T2 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T3 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T4 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T5 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T6 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T7 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T8 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T9 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T10 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T11 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T12 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T13 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T14 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T15 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T16 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T17 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T18 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T19 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T20 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T21 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T22 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T23 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T24 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T25 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T26 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T27 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T28 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T29 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T30 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T31 Value) => ValueAsString = Value.ValueAsString;

    public bool IsT1 => Type == TypeIndicator.GetType<T1>();
    public bool IsT2 => Type == TypeIndicator.GetType<T2>();
    public bool IsT3 => Type == TypeIndicator.GetType<T3>();
    public bool IsT4 => Type == TypeIndicator.GetType<T4>();
    public bool IsT5 => Type == TypeIndicator.GetType<T5>();
    public bool IsT6 => Type == TypeIndicator.GetType<T6>();
    public bool IsT7 => Type == TypeIndicator.GetType<T7>();
    public bool IsT8 => Type == TypeIndicator.GetType<T8>();
    public bool IsT9 => Type == TypeIndicator.GetType<T9>();
    public bool IsT10 => Type == TypeIndicator.GetType<T10>();
    public bool IsT11 => Type == TypeIndicator.GetType<T11>();
    public bool IsT12 => Type == TypeIndicator.GetType<T12>();
    public bool IsT13 => Type == TypeIndicator.GetType<T13>();
    public bool IsT14 => Type == TypeIndicator.GetType<T14>();
    public bool IsT15 => Type == TypeIndicator.GetType<T15>();
    public bool IsT16 => Type == TypeIndicator.GetType<T16>();
    public bool IsT17 => Type == TypeIndicator.GetType<T17>();
    public bool IsT18 => Type == TypeIndicator.GetType<T18>();
    public bool IsT19 => Type == TypeIndicator.GetType<T19>();
    public bool IsT20 => Type == TypeIndicator.GetType<T20>();
    public bool IsT21 => Type == TypeIndicator.GetType<T21>();
    public bool IsT22 => Type == TypeIndicator.GetType<T22>();
    public bool IsT23 => Type == TypeIndicator.GetType<T23>();
    public bool IsT24 => Type == TypeIndicator.GetType<T24>();
    public bool IsT25 => Type == TypeIndicator.GetType<T25>();
    public bool IsT26 => Type == TypeIndicator.GetType<T26>();
    public bool IsT27 => Type == TypeIndicator.GetType<T27>();
    public bool IsT28 => Type == TypeIndicator.GetType<T28>();
    public bool IsT29 => Type == TypeIndicator.GetType<T29>();
    public bool IsT30 => Type == TypeIndicator.GetType<T30>();
    public bool IsT31 => Type == TypeIndicator.GetType<T31>();

    public T1 AsT1 => new StringSPWNExpr<T1>(ValueAsString).AsValue();
    public T2 AsT2 => new StringSPWNExpr<T2>(ValueAsString).AsValue();
    public T3 AsT3 => new StringSPWNExpr<T3>(ValueAsString).AsValue();
    public T4 AsT4 => new StringSPWNExpr<T4>(ValueAsString).AsValue();
    public T5 AsT5 => new StringSPWNExpr<T5>(ValueAsString).AsValue();
    public T6 AsT6 => new StringSPWNExpr<T6>(ValueAsString).AsValue();
    public T7 AsT7 => new StringSPWNExpr<T7>(ValueAsString).AsValue();
    public T8 AsT8 => new StringSPWNExpr<T8>(ValueAsString).AsValue();
    public T9 AsT9 => new StringSPWNExpr<T9>(ValueAsString).AsValue();
    public T10 AsT10 => new StringSPWNExpr<T10>(ValueAsString).AsValue();
    public T11 AsT11 => new StringSPWNExpr<T11>(ValueAsString).AsValue();
    public T12 AsT12 => new StringSPWNExpr<T12>(ValueAsString).AsValue();
    public T13 AsT13 => new StringSPWNExpr<T13>(ValueAsString).AsValue();
    public T14 AsT14 => new StringSPWNExpr<T14>(ValueAsString).AsValue();
    public T15 AsT15 => new StringSPWNExpr<T15>(ValueAsString).AsValue();
    public T16 AsT16 => new StringSPWNExpr<T16>(ValueAsString).AsValue();
    public T17 AsT17 => new StringSPWNExpr<T17>(ValueAsString).AsValue();
    public T18 AsT18 => new StringSPWNExpr<T18>(ValueAsString).AsValue();
    public T19 AsT19 => new StringSPWNExpr<T19>(ValueAsString).AsValue();
    public T20 AsT20 => new StringSPWNExpr<T20>(ValueAsString).AsValue();
    public T21 AsT21 => new StringSPWNExpr<T21>(ValueAsString).AsValue();
    public T22 AsT22 => new StringSPWNExpr<T22>(ValueAsString).AsValue();
    public T23 AsT23 => new StringSPWNExpr<T23>(ValueAsString).AsValue();
    public T24 AsT24 => new StringSPWNExpr<T24>(ValueAsString).AsValue();
    public T25 AsT25 => new StringSPWNExpr<T25>(ValueAsString).AsValue();
    public T26 AsT26 => new StringSPWNExpr<T26>(ValueAsString).AsValue();
    public T27 AsT27 => new StringSPWNExpr<T27>(ValueAsString).AsValue();
    public T28 AsT28 => new StringSPWNExpr<T28>(ValueAsString).AsValue();
    public T29 AsT29 => new StringSPWNExpr<T29>(ValueAsString).AsValue();
    public T30 AsT30 => new StringSPWNExpr<T30>(ValueAsString).AsValue();
    public T31 AsT31 => new StringSPWNExpr<T31>(ValueAsString).AsValue();

    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(T1 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(T2 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(T3 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(T4 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(T5 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(T6 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(T7 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(T8 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(T9 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(T10 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(T11 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(T12 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(T13 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(T14 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(T15 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(T16 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(T17 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(T18 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(T19 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(T20 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(T21 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(T22 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(T23 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(T24 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(T25 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(T26 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(T27 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(T28 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(T29 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(T30 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31>(T31 Value) => new(Value);
}

// Note UnionTypes is NOT a Built-in type in SPWN
[SPWNType("@typeunion")]
public class UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32> : SPWNValueBase
    where T1 : SPWNValueBase
    where T2 : SPWNValueBase
    where T3 : SPWNValueBase
    where T4 : SPWNValueBase
    where T5 : SPWNValueBase
    where T6 : SPWNValueBase
    where T7 : SPWNValueBase
    where T8 : SPWNValueBase
    where T9 : SPWNValueBase
    where T10 : SPWNValueBase
    where T11 : SPWNValueBase
    where T12 : SPWNValueBase
    where T13 : SPWNValueBase
    where T14 : SPWNValueBase
    where T15 : SPWNValueBase
    where T16 : SPWNValueBase
    where T17 : SPWNValueBase
    where T18 : SPWNValueBase
    where T19 : SPWNValueBase
    where T20 : SPWNValueBase
    where T21 : SPWNValueBase
    where T22 : SPWNValueBase
    where T23 : SPWNValueBase
    where T24 : SPWNValueBase
    where T25 : SPWNValueBase
    where T26 : SPWNValueBase
    where T27 : SPWNValueBase
    where T28 : SPWNValueBase
    where T29 : SPWNValueBase
    where T30 : SPWNValueBase
    where T31 : SPWNValueBase
    where T32 : SPWNValueBase
{
    public override string ValueAsString { get; protected set; }

    public UnionTypes(T1 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T2 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T3 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T4 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T5 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T6 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T7 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T8 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T9 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T10 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T11 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T12 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T13 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T14 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T15 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T16 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T17 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T18 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T19 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T20 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T21 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T22 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T23 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T24 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T25 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T26 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T27 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T28 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T29 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T30 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T31 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T32 Value) => ValueAsString = Value.ValueAsString;

    public bool IsT1 => Type == TypeIndicator.GetType<T1>();
    public bool IsT2 => Type == TypeIndicator.GetType<T2>();
    public bool IsT3 => Type == TypeIndicator.GetType<T3>();
    public bool IsT4 => Type == TypeIndicator.GetType<T4>();
    public bool IsT5 => Type == TypeIndicator.GetType<T5>();
    public bool IsT6 => Type == TypeIndicator.GetType<T6>();
    public bool IsT7 => Type == TypeIndicator.GetType<T7>();
    public bool IsT8 => Type == TypeIndicator.GetType<T8>();
    public bool IsT9 => Type == TypeIndicator.GetType<T9>();
    public bool IsT10 => Type == TypeIndicator.GetType<T10>();
    public bool IsT11 => Type == TypeIndicator.GetType<T11>();
    public bool IsT12 => Type == TypeIndicator.GetType<T12>();
    public bool IsT13 => Type == TypeIndicator.GetType<T13>();
    public bool IsT14 => Type == TypeIndicator.GetType<T14>();
    public bool IsT15 => Type == TypeIndicator.GetType<T15>();
    public bool IsT16 => Type == TypeIndicator.GetType<T16>();
    public bool IsT17 => Type == TypeIndicator.GetType<T17>();
    public bool IsT18 => Type == TypeIndicator.GetType<T18>();
    public bool IsT19 => Type == TypeIndicator.GetType<T19>();
    public bool IsT20 => Type == TypeIndicator.GetType<T20>();
    public bool IsT21 => Type == TypeIndicator.GetType<T21>();
    public bool IsT22 => Type == TypeIndicator.GetType<T22>();
    public bool IsT23 => Type == TypeIndicator.GetType<T23>();
    public bool IsT24 => Type == TypeIndicator.GetType<T24>();
    public bool IsT25 => Type == TypeIndicator.GetType<T25>();
    public bool IsT26 => Type == TypeIndicator.GetType<T26>();
    public bool IsT27 => Type == TypeIndicator.GetType<T27>();
    public bool IsT28 => Type == TypeIndicator.GetType<T28>();
    public bool IsT29 => Type == TypeIndicator.GetType<T29>();
    public bool IsT30 => Type == TypeIndicator.GetType<T30>();
    public bool IsT31 => Type == TypeIndicator.GetType<T31>();
    public bool IsT32 => Type == TypeIndicator.GetType<T32>();

    public T1 AsT1 => new StringSPWNExpr<T1>(ValueAsString).AsValue();
    public T2 AsT2 => new StringSPWNExpr<T2>(ValueAsString).AsValue();
    public T3 AsT3 => new StringSPWNExpr<T3>(ValueAsString).AsValue();
    public T4 AsT4 => new StringSPWNExpr<T4>(ValueAsString).AsValue();
    public T5 AsT5 => new StringSPWNExpr<T5>(ValueAsString).AsValue();
    public T6 AsT6 => new StringSPWNExpr<T6>(ValueAsString).AsValue();
    public T7 AsT7 => new StringSPWNExpr<T7>(ValueAsString).AsValue();
    public T8 AsT8 => new StringSPWNExpr<T8>(ValueAsString).AsValue();
    public T9 AsT9 => new StringSPWNExpr<T9>(ValueAsString).AsValue();
    public T10 AsT10 => new StringSPWNExpr<T10>(ValueAsString).AsValue();
    public T11 AsT11 => new StringSPWNExpr<T11>(ValueAsString).AsValue();
    public T12 AsT12 => new StringSPWNExpr<T12>(ValueAsString).AsValue();
    public T13 AsT13 => new StringSPWNExpr<T13>(ValueAsString).AsValue();
    public T14 AsT14 => new StringSPWNExpr<T14>(ValueAsString).AsValue();
    public T15 AsT15 => new StringSPWNExpr<T15>(ValueAsString).AsValue();
    public T16 AsT16 => new StringSPWNExpr<T16>(ValueAsString).AsValue();
    public T17 AsT17 => new StringSPWNExpr<T17>(ValueAsString).AsValue();
    public T18 AsT18 => new StringSPWNExpr<T18>(ValueAsString).AsValue();
    public T19 AsT19 => new StringSPWNExpr<T19>(ValueAsString).AsValue();
    public T20 AsT20 => new StringSPWNExpr<T20>(ValueAsString).AsValue();
    public T21 AsT21 => new StringSPWNExpr<T21>(ValueAsString).AsValue();
    public T22 AsT22 => new StringSPWNExpr<T22>(ValueAsString).AsValue();
    public T23 AsT23 => new StringSPWNExpr<T23>(ValueAsString).AsValue();
    public T24 AsT24 => new StringSPWNExpr<T24>(ValueAsString).AsValue();
    public T25 AsT25 => new StringSPWNExpr<T25>(ValueAsString).AsValue();
    public T26 AsT26 => new StringSPWNExpr<T26>(ValueAsString).AsValue();
    public T27 AsT27 => new StringSPWNExpr<T27>(ValueAsString).AsValue();
    public T28 AsT28 => new StringSPWNExpr<T28>(ValueAsString).AsValue();
    public T29 AsT29 => new StringSPWNExpr<T29>(ValueAsString).AsValue();
    public T30 AsT30 => new StringSPWNExpr<T30>(ValueAsString).AsValue();
    public T31 AsT31 => new StringSPWNExpr<T31>(ValueAsString).AsValue();
    public T32 AsT32 => new StringSPWNExpr<T32>(ValueAsString).AsValue();

    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(T1 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(T2 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(T3 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(T4 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(T5 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(T6 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(T7 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(T8 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(T9 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(T10 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(T11 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(T12 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(T13 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(T14 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(T15 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(T16 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(T17 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(T18 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(T19 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(T20 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(T21 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(T22 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(T23 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(T24 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(T25 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(T26 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(T27 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(T28 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(T29 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(T30 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(T31 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32>(T32 Value) => new(Value);
}

// Note UnionTypes is NOT a Built-in type in SPWN
[SPWNType("@typeunion")]
public class UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33> : SPWNValueBase
    where T1 : SPWNValueBase
    where T2 : SPWNValueBase
    where T3 : SPWNValueBase
    where T4 : SPWNValueBase
    where T5 : SPWNValueBase
    where T6 : SPWNValueBase
    where T7 : SPWNValueBase
    where T8 : SPWNValueBase
    where T9 : SPWNValueBase
    where T10 : SPWNValueBase
    where T11 : SPWNValueBase
    where T12 : SPWNValueBase
    where T13 : SPWNValueBase
    where T14 : SPWNValueBase
    where T15 : SPWNValueBase
    where T16 : SPWNValueBase
    where T17 : SPWNValueBase
    where T18 : SPWNValueBase
    where T19 : SPWNValueBase
    where T20 : SPWNValueBase
    where T21 : SPWNValueBase
    where T22 : SPWNValueBase
    where T23 : SPWNValueBase
    where T24 : SPWNValueBase
    where T25 : SPWNValueBase
    where T26 : SPWNValueBase
    where T27 : SPWNValueBase
    where T28 : SPWNValueBase
    where T29 : SPWNValueBase
    where T30 : SPWNValueBase
    where T31 : SPWNValueBase
    where T32 : SPWNValueBase
    where T33 : SPWNValueBase
{
    public override string ValueAsString { get; protected set; }

    public UnionTypes(T1 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T2 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T3 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T4 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T5 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T6 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T7 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T8 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T9 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T10 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T11 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T12 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T13 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T14 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T15 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T16 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T17 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T18 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T19 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T20 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T21 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T22 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T23 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T24 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T25 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T26 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T27 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T28 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T29 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T30 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T31 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T32 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T33 Value) => ValueAsString = Value.ValueAsString;

    public bool IsT1 => Type == TypeIndicator.GetType<T1>();
    public bool IsT2 => Type == TypeIndicator.GetType<T2>();
    public bool IsT3 => Type == TypeIndicator.GetType<T3>();
    public bool IsT4 => Type == TypeIndicator.GetType<T4>();
    public bool IsT5 => Type == TypeIndicator.GetType<T5>();
    public bool IsT6 => Type == TypeIndicator.GetType<T6>();
    public bool IsT7 => Type == TypeIndicator.GetType<T7>();
    public bool IsT8 => Type == TypeIndicator.GetType<T8>();
    public bool IsT9 => Type == TypeIndicator.GetType<T9>();
    public bool IsT10 => Type == TypeIndicator.GetType<T10>();
    public bool IsT11 => Type == TypeIndicator.GetType<T11>();
    public bool IsT12 => Type == TypeIndicator.GetType<T12>();
    public bool IsT13 => Type == TypeIndicator.GetType<T13>();
    public bool IsT14 => Type == TypeIndicator.GetType<T14>();
    public bool IsT15 => Type == TypeIndicator.GetType<T15>();
    public bool IsT16 => Type == TypeIndicator.GetType<T16>();
    public bool IsT17 => Type == TypeIndicator.GetType<T17>();
    public bool IsT18 => Type == TypeIndicator.GetType<T18>();
    public bool IsT19 => Type == TypeIndicator.GetType<T19>();
    public bool IsT20 => Type == TypeIndicator.GetType<T20>();
    public bool IsT21 => Type == TypeIndicator.GetType<T21>();
    public bool IsT22 => Type == TypeIndicator.GetType<T22>();
    public bool IsT23 => Type == TypeIndicator.GetType<T23>();
    public bool IsT24 => Type == TypeIndicator.GetType<T24>();
    public bool IsT25 => Type == TypeIndicator.GetType<T25>();
    public bool IsT26 => Type == TypeIndicator.GetType<T26>();
    public bool IsT27 => Type == TypeIndicator.GetType<T27>();
    public bool IsT28 => Type == TypeIndicator.GetType<T28>();
    public bool IsT29 => Type == TypeIndicator.GetType<T29>();
    public bool IsT30 => Type == TypeIndicator.GetType<T30>();
    public bool IsT31 => Type == TypeIndicator.GetType<T31>();
    public bool IsT32 => Type == TypeIndicator.GetType<T32>();
    public bool IsT33 => Type == TypeIndicator.GetType<T33>();

    public T1 AsT1 => new StringSPWNExpr<T1>(ValueAsString).AsValue();
    public T2 AsT2 => new StringSPWNExpr<T2>(ValueAsString).AsValue();
    public T3 AsT3 => new StringSPWNExpr<T3>(ValueAsString).AsValue();
    public T4 AsT4 => new StringSPWNExpr<T4>(ValueAsString).AsValue();
    public T5 AsT5 => new StringSPWNExpr<T5>(ValueAsString).AsValue();
    public T6 AsT6 => new StringSPWNExpr<T6>(ValueAsString).AsValue();
    public T7 AsT7 => new StringSPWNExpr<T7>(ValueAsString).AsValue();
    public T8 AsT8 => new StringSPWNExpr<T8>(ValueAsString).AsValue();
    public T9 AsT9 => new StringSPWNExpr<T9>(ValueAsString).AsValue();
    public T10 AsT10 => new StringSPWNExpr<T10>(ValueAsString).AsValue();
    public T11 AsT11 => new StringSPWNExpr<T11>(ValueAsString).AsValue();
    public T12 AsT12 => new StringSPWNExpr<T12>(ValueAsString).AsValue();
    public T13 AsT13 => new StringSPWNExpr<T13>(ValueAsString).AsValue();
    public T14 AsT14 => new StringSPWNExpr<T14>(ValueAsString).AsValue();
    public T15 AsT15 => new StringSPWNExpr<T15>(ValueAsString).AsValue();
    public T16 AsT16 => new StringSPWNExpr<T16>(ValueAsString).AsValue();
    public T17 AsT17 => new StringSPWNExpr<T17>(ValueAsString).AsValue();
    public T18 AsT18 => new StringSPWNExpr<T18>(ValueAsString).AsValue();
    public T19 AsT19 => new StringSPWNExpr<T19>(ValueAsString).AsValue();
    public T20 AsT20 => new StringSPWNExpr<T20>(ValueAsString).AsValue();
    public T21 AsT21 => new StringSPWNExpr<T21>(ValueAsString).AsValue();
    public T22 AsT22 => new StringSPWNExpr<T22>(ValueAsString).AsValue();
    public T23 AsT23 => new StringSPWNExpr<T23>(ValueAsString).AsValue();
    public T24 AsT24 => new StringSPWNExpr<T24>(ValueAsString).AsValue();
    public T25 AsT25 => new StringSPWNExpr<T25>(ValueAsString).AsValue();
    public T26 AsT26 => new StringSPWNExpr<T26>(ValueAsString).AsValue();
    public T27 AsT27 => new StringSPWNExpr<T27>(ValueAsString).AsValue();
    public T28 AsT28 => new StringSPWNExpr<T28>(ValueAsString).AsValue();
    public T29 AsT29 => new StringSPWNExpr<T29>(ValueAsString).AsValue();
    public T30 AsT30 => new StringSPWNExpr<T30>(ValueAsString).AsValue();
    public T31 AsT31 => new StringSPWNExpr<T31>(ValueAsString).AsValue();
    public T32 AsT32 => new StringSPWNExpr<T32>(ValueAsString).AsValue();
    public T33 AsT33 => new StringSPWNExpr<T33>(ValueAsString).AsValue();

    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33>(T1 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33>(T2 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33>(T3 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33>(T4 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33>(T5 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33>(T6 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33>(T7 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33>(T8 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33>(T9 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33>(T10 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33>(T11 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33>(T12 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33>(T13 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33>(T14 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33>(T15 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33>(T16 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33>(T17 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33>(T18 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33>(T19 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33>(T20 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33>(T21 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33>(T22 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33>(T23 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33>(T24 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33>(T25 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33>(T26 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33>(T27 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33>(T28 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33>(T29 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33>(T30 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33>(T31 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33>(T32 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33>(T33 Value) => new(Value);
}

// Note UnionTypes is NOT a Built-in type in SPWN
[SPWNType("@typeunion")]
public class UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34> : SPWNValueBase
    where T1 : SPWNValueBase
    where T2 : SPWNValueBase
    where T3 : SPWNValueBase
    where T4 : SPWNValueBase
    where T5 : SPWNValueBase
    where T6 : SPWNValueBase
    where T7 : SPWNValueBase
    where T8 : SPWNValueBase
    where T9 : SPWNValueBase
    where T10 : SPWNValueBase
    where T11 : SPWNValueBase
    where T12 : SPWNValueBase
    where T13 : SPWNValueBase
    where T14 : SPWNValueBase
    where T15 : SPWNValueBase
    where T16 : SPWNValueBase
    where T17 : SPWNValueBase
    where T18 : SPWNValueBase
    where T19 : SPWNValueBase
    where T20 : SPWNValueBase
    where T21 : SPWNValueBase
    where T22 : SPWNValueBase
    where T23 : SPWNValueBase
    where T24 : SPWNValueBase
    where T25 : SPWNValueBase
    where T26 : SPWNValueBase
    where T27 : SPWNValueBase
    where T28 : SPWNValueBase
    where T29 : SPWNValueBase
    where T30 : SPWNValueBase
    where T31 : SPWNValueBase
    where T32 : SPWNValueBase
    where T33 : SPWNValueBase
    where T34 : SPWNValueBase
{
    public override string ValueAsString { get; protected set; }

    public UnionTypes(T1 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T2 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T3 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T4 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T5 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T6 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T7 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T8 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T9 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T10 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T11 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T12 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T13 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T14 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T15 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T16 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T17 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T18 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T19 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T20 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T21 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T22 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T23 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T24 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T25 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T26 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T27 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T28 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T29 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T30 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T31 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T32 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T33 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T34 Value) => ValueAsString = Value.ValueAsString;

    public bool IsT1 => Type == TypeIndicator.GetType<T1>();
    public bool IsT2 => Type == TypeIndicator.GetType<T2>();
    public bool IsT3 => Type == TypeIndicator.GetType<T3>();
    public bool IsT4 => Type == TypeIndicator.GetType<T4>();
    public bool IsT5 => Type == TypeIndicator.GetType<T5>();
    public bool IsT6 => Type == TypeIndicator.GetType<T6>();
    public bool IsT7 => Type == TypeIndicator.GetType<T7>();
    public bool IsT8 => Type == TypeIndicator.GetType<T8>();
    public bool IsT9 => Type == TypeIndicator.GetType<T9>();
    public bool IsT10 => Type == TypeIndicator.GetType<T10>();
    public bool IsT11 => Type == TypeIndicator.GetType<T11>();
    public bool IsT12 => Type == TypeIndicator.GetType<T12>();
    public bool IsT13 => Type == TypeIndicator.GetType<T13>();
    public bool IsT14 => Type == TypeIndicator.GetType<T14>();
    public bool IsT15 => Type == TypeIndicator.GetType<T15>();
    public bool IsT16 => Type == TypeIndicator.GetType<T16>();
    public bool IsT17 => Type == TypeIndicator.GetType<T17>();
    public bool IsT18 => Type == TypeIndicator.GetType<T18>();
    public bool IsT19 => Type == TypeIndicator.GetType<T19>();
    public bool IsT20 => Type == TypeIndicator.GetType<T20>();
    public bool IsT21 => Type == TypeIndicator.GetType<T21>();
    public bool IsT22 => Type == TypeIndicator.GetType<T22>();
    public bool IsT23 => Type == TypeIndicator.GetType<T23>();
    public bool IsT24 => Type == TypeIndicator.GetType<T24>();
    public bool IsT25 => Type == TypeIndicator.GetType<T25>();
    public bool IsT26 => Type == TypeIndicator.GetType<T26>();
    public bool IsT27 => Type == TypeIndicator.GetType<T27>();
    public bool IsT28 => Type == TypeIndicator.GetType<T28>();
    public bool IsT29 => Type == TypeIndicator.GetType<T29>();
    public bool IsT30 => Type == TypeIndicator.GetType<T30>();
    public bool IsT31 => Type == TypeIndicator.GetType<T31>();
    public bool IsT32 => Type == TypeIndicator.GetType<T32>();
    public bool IsT33 => Type == TypeIndicator.GetType<T33>();
    public bool IsT34 => Type == TypeIndicator.GetType<T34>();

    public T1 AsT1 => new StringSPWNExpr<T1>(ValueAsString).AsValue();
    public T2 AsT2 => new StringSPWNExpr<T2>(ValueAsString).AsValue();
    public T3 AsT3 => new StringSPWNExpr<T3>(ValueAsString).AsValue();
    public T4 AsT4 => new StringSPWNExpr<T4>(ValueAsString).AsValue();
    public T5 AsT5 => new StringSPWNExpr<T5>(ValueAsString).AsValue();
    public T6 AsT6 => new StringSPWNExpr<T6>(ValueAsString).AsValue();
    public T7 AsT7 => new StringSPWNExpr<T7>(ValueAsString).AsValue();
    public T8 AsT8 => new StringSPWNExpr<T8>(ValueAsString).AsValue();
    public T9 AsT9 => new StringSPWNExpr<T9>(ValueAsString).AsValue();
    public T10 AsT10 => new StringSPWNExpr<T10>(ValueAsString).AsValue();
    public T11 AsT11 => new StringSPWNExpr<T11>(ValueAsString).AsValue();
    public T12 AsT12 => new StringSPWNExpr<T12>(ValueAsString).AsValue();
    public T13 AsT13 => new StringSPWNExpr<T13>(ValueAsString).AsValue();
    public T14 AsT14 => new StringSPWNExpr<T14>(ValueAsString).AsValue();
    public T15 AsT15 => new StringSPWNExpr<T15>(ValueAsString).AsValue();
    public T16 AsT16 => new StringSPWNExpr<T16>(ValueAsString).AsValue();
    public T17 AsT17 => new StringSPWNExpr<T17>(ValueAsString).AsValue();
    public T18 AsT18 => new StringSPWNExpr<T18>(ValueAsString).AsValue();
    public T19 AsT19 => new StringSPWNExpr<T19>(ValueAsString).AsValue();
    public T20 AsT20 => new StringSPWNExpr<T20>(ValueAsString).AsValue();
    public T21 AsT21 => new StringSPWNExpr<T21>(ValueAsString).AsValue();
    public T22 AsT22 => new StringSPWNExpr<T22>(ValueAsString).AsValue();
    public T23 AsT23 => new StringSPWNExpr<T23>(ValueAsString).AsValue();
    public T24 AsT24 => new StringSPWNExpr<T24>(ValueAsString).AsValue();
    public T25 AsT25 => new StringSPWNExpr<T25>(ValueAsString).AsValue();
    public T26 AsT26 => new StringSPWNExpr<T26>(ValueAsString).AsValue();
    public T27 AsT27 => new StringSPWNExpr<T27>(ValueAsString).AsValue();
    public T28 AsT28 => new StringSPWNExpr<T28>(ValueAsString).AsValue();
    public T29 AsT29 => new StringSPWNExpr<T29>(ValueAsString).AsValue();
    public T30 AsT30 => new StringSPWNExpr<T30>(ValueAsString).AsValue();
    public T31 AsT31 => new StringSPWNExpr<T31>(ValueAsString).AsValue();
    public T32 AsT32 => new StringSPWNExpr<T32>(ValueAsString).AsValue();
    public T33 AsT33 => new StringSPWNExpr<T33>(ValueAsString).AsValue();
    public T34 AsT34 => new StringSPWNExpr<T34>(ValueAsString).AsValue();

    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34>(T1 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34>(T2 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34>(T3 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34>(T4 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34>(T5 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34>(T6 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34>(T7 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34>(T8 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34>(T9 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34>(T10 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34>(T11 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34>(T12 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34>(T13 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34>(T14 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34>(T15 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34>(T16 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34>(T17 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34>(T18 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34>(T19 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34>(T20 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34>(T21 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34>(T22 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34>(T23 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34>(T24 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34>(T25 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34>(T26 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34>(T27 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34>(T28 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34>(T29 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34>(T30 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34>(T31 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34>(T32 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34>(T33 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34>(T34 Value) => new(Value);
}

// Note UnionTypes is NOT a Built-in type in SPWN
[SPWNType("@typeunion")]
public class UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35> : SPWNValueBase
    where T1 : SPWNValueBase
    where T2 : SPWNValueBase
    where T3 : SPWNValueBase
    where T4 : SPWNValueBase
    where T5 : SPWNValueBase
    where T6 : SPWNValueBase
    where T7 : SPWNValueBase
    where T8 : SPWNValueBase
    where T9 : SPWNValueBase
    where T10 : SPWNValueBase
    where T11 : SPWNValueBase
    where T12 : SPWNValueBase
    where T13 : SPWNValueBase
    where T14 : SPWNValueBase
    where T15 : SPWNValueBase
    where T16 : SPWNValueBase
    where T17 : SPWNValueBase
    where T18 : SPWNValueBase
    where T19 : SPWNValueBase
    where T20 : SPWNValueBase
    where T21 : SPWNValueBase
    where T22 : SPWNValueBase
    where T23 : SPWNValueBase
    where T24 : SPWNValueBase
    where T25 : SPWNValueBase
    where T26 : SPWNValueBase
    where T27 : SPWNValueBase
    where T28 : SPWNValueBase
    where T29 : SPWNValueBase
    where T30 : SPWNValueBase
    where T31 : SPWNValueBase
    where T32 : SPWNValueBase
    where T33 : SPWNValueBase
    where T34 : SPWNValueBase
    where T35 : SPWNValueBase
{
    public override string ValueAsString { get; protected set; }

    public UnionTypes(T1 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T2 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T3 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T4 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T5 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T6 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T7 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T8 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T9 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T10 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T11 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T12 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T13 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T14 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T15 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T16 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T17 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T18 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T19 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T20 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T21 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T22 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T23 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T24 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T25 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T26 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T27 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T28 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T29 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T30 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T31 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T32 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T33 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T34 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T35 Value) => ValueAsString = Value.ValueAsString;

    public bool IsT1 => Type == TypeIndicator.GetType<T1>();
    public bool IsT2 => Type == TypeIndicator.GetType<T2>();
    public bool IsT3 => Type == TypeIndicator.GetType<T3>();
    public bool IsT4 => Type == TypeIndicator.GetType<T4>();
    public bool IsT5 => Type == TypeIndicator.GetType<T5>();
    public bool IsT6 => Type == TypeIndicator.GetType<T6>();
    public bool IsT7 => Type == TypeIndicator.GetType<T7>();
    public bool IsT8 => Type == TypeIndicator.GetType<T8>();
    public bool IsT9 => Type == TypeIndicator.GetType<T9>();
    public bool IsT10 => Type == TypeIndicator.GetType<T10>();
    public bool IsT11 => Type == TypeIndicator.GetType<T11>();
    public bool IsT12 => Type == TypeIndicator.GetType<T12>();
    public bool IsT13 => Type == TypeIndicator.GetType<T13>();
    public bool IsT14 => Type == TypeIndicator.GetType<T14>();
    public bool IsT15 => Type == TypeIndicator.GetType<T15>();
    public bool IsT16 => Type == TypeIndicator.GetType<T16>();
    public bool IsT17 => Type == TypeIndicator.GetType<T17>();
    public bool IsT18 => Type == TypeIndicator.GetType<T18>();
    public bool IsT19 => Type == TypeIndicator.GetType<T19>();
    public bool IsT20 => Type == TypeIndicator.GetType<T20>();
    public bool IsT21 => Type == TypeIndicator.GetType<T21>();
    public bool IsT22 => Type == TypeIndicator.GetType<T22>();
    public bool IsT23 => Type == TypeIndicator.GetType<T23>();
    public bool IsT24 => Type == TypeIndicator.GetType<T24>();
    public bool IsT25 => Type == TypeIndicator.GetType<T25>();
    public bool IsT26 => Type == TypeIndicator.GetType<T26>();
    public bool IsT27 => Type == TypeIndicator.GetType<T27>();
    public bool IsT28 => Type == TypeIndicator.GetType<T28>();
    public bool IsT29 => Type == TypeIndicator.GetType<T29>();
    public bool IsT30 => Type == TypeIndicator.GetType<T30>();
    public bool IsT31 => Type == TypeIndicator.GetType<T31>();
    public bool IsT32 => Type == TypeIndicator.GetType<T32>();
    public bool IsT33 => Type == TypeIndicator.GetType<T33>();
    public bool IsT34 => Type == TypeIndicator.GetType<T34>();
    public bool IsT35 => Type == TypeIndicator.GetType<T35>();

    public T1 AsT1 => new StringSPWNExpr<T1>(ValueAsString).AsValue();
    public T2 AsT2 => new StringSPWNExpr<T2>(ValueAsString).AsValue();
    public T3 AsT3 => new StringSPWNExpr<T3>(ValueAsString).AsValue();
    public T4 AsT4 => new StringSPWNExpr<T4>(ValueAsString).AsValue();
    public T5 AsT5 => new StringSPWNExpr<T5>(ValueAsString).AsValue();
    public T6 AsT6 => new StringSPWNExpr<T6>(ValueAsString).AsValue();
    public T7 AsT7 => new StringSPWNExpr<T7>(ValueAsString).AsValue();
    public T8 AsT8 => new StringSPWNExpr<T8>(ValueAsString).AsValue();
    public T9 AsT9 => new StringSPWNExpr<T9>(ValueAsString).AsValue();
    public T10 AsT10 => new StringSPWNExpr<T10>(ValueAsString).AsValue();
    public T11 AsT11 => new StringSPWNExpr<T11>(ValueAsString).AsValue();
    public T12 AsT12 => new StringSPWNExpr<T12>(ValueAsString).AsValue();
    public T13 AsT13 => new StringSPWNExpr<T13>(ValueAsString).AsValue();
    public T14 AsT14 => new StringSPWNExpr<T14>(ValueAsString).AsValue();
    public T15 AsT15 => new StringSPWNExpr<T15>(ValueAsString).AsValue();
    public T16 AsT16 => new StringSPWNExpr<T16>(ValueAsString).AsValue();
    public T17 AsT17 => new StringSPWNExpr<T17>(ValueAsString).AsValue();
    public T18 AsT18 => new StringSPWNExpr<T18>(ValueAsString).AsValue();
    public T19 AsT19 => new StringSPWNExpr<T19>(ValueAsString).AsValue();
    public T20 AsT20 => new StringSPWNExpr<T20>(ValueAsString).AsValue();
    public T21 AsT21 => new StringSPWNExpr<T21>(ValueAsString).AsValue();
    public T22 AsT22 => new StringSPWNExpr<T22>(ValueAsString).AsValue();
    public T23 AsT23 => new StringSPWNExpr<T23>(ValueAsString).AsValue();
    public T24 AsT24 => new StringSPWNExpr<T24>(ValueAsString).AsValue();
    public T25 AsT25 => new StringSPWNExpr<T25>(ValueAsString).AsValue();
    public T26 AsT26 => new StringSPWNExpr<T26>(ValueAsString).AsValue();
    public T27 AsT27 => new StringSPWNExpr<T27>(ValueAsString).AsValue();
    public T28 AsT28 => new StringSPWNExpr<T28>(ValueAsString).AsValue();
    public T29 AsT29 => new StringSPWNExpr<T29>(ValueAsString).AsValue();
    public T30 AsT30 => new StringSPWNExpr<T30>(ValueAsString).AsValue();
    public T31 AsT31 => new StringSPWNExpr<T31>(ValueAsString).AsValue();
    public T32 AsT32 => new StringSPWNExpr<T32>(ValueAsString).AsValue();
    public T33 AsT33 => new StringSPWNExpr<T33>(ValueAsString).AsValue();
    public T34 AsT34 => new StringSPWNExpr<T34>(ValueAsString).AsValue();
    public T35 AsT35 => new StringSPWNExpr<T35>(ValueAsString).AsValue();

    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35>(T1 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35>(T2 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35>(T3 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35>(T4 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35>(T5 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35>(T6 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35>(T7 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35>(T8 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35>(T9 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35>(T10 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35>(T11 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35>(T12 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35>(T13 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35>(T14 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35>(T15 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35>(T16 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35>(T17 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35>(T18 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35>(T19 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35>(T20 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35>(T21 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35>(T22 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35>(T23 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35>(T24 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35>(T25 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35>(T26 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35>(T27 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35>(T28 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35>(T29 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35>(T30 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35>(T31 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35>(T32 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35>(T33 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35>(T34 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35>(T35 Value) => new(Value);
}

// Note UnionTypes is NOT a Built-in type in SPWN
[SPWNType("@typeunion")]
public class UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36> : SPWNValueBase
    where T1 : SPWNValueBase
    where T2 : SPWNValueBase
    where T3 : SPWNValueBase
    where T4 : SPWNValueBase
    where T5 : SPWNValueBase
    where T6 : SPWNValueBase
    where T7 : SPWNValueBase
    where T8 : SPWNValueBase
    where T9 : SPWNValueBase
    where T10 : SPWNValueBase
    where T11 : SPWNValueBase
    where T12 : SPWNValueBase
    where T13 : SPWNValueBase
    where T14 : SPWNValueBase
    where T15 : SPWNValueBase
    where T16 : SPWNValueBase
    where T17 : SPWNValueBase
    where T18 : SPWNValueBase
    where T19 : SPWNValueBase
    where T20 : SPWNValueBase
    where T21 : SPWNValueBase
    where T22 : SPWNValueBase
    where T23 : SPWNValueBase
    where T24 : SPWNValueBase
    where T25 : SPWNValueBase
    where T26 : SPWNValueBase
    where T27 : SPWNValueBase
    where T28 : SPWNValueBase
    where T29 : SPWNValueBase
    where T30 : SPWNValueBase
    where T31 : SPWNValueBase
    where T32 : SPWNValueBase
    where T33 : SPWNValueBase
    where T34 : SPWNValueBase
    where T35 : SPWNValueBase
    where T36 : SPWNValueBase
{
    public override string ValueAsString { get; protected set; }

    public UnionTypes(T1 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T2 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T3 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T4 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T5 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T6 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T7 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T8 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T9 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T10 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T11 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T12 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T13 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T14 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T15 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T16 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T17 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T18 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T19 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T20 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T21 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T22 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T23 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T24 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T25 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T26 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T27 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T28 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T29 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T30 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T31 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T32 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T33 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T34 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T35 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T36 Value) => ValueAsString = Value.ValueAsString;

    public bool IsT1 => Type == TypeIndicator.GetType<T1>();
    public bool IsT2 => Type == TypeIndicator.GetType<T2>();
    public bool IsT3 => Type == TypeIndicator.GetType<T3>();
    public bool IsT4 => Type == TypeIndicator.GetType<T4>();
    public bool IsT5 => Type == TypeIndicator.GetType<T5>();
    public bool IsT6 => Type == TypeIndicator.GetType<T6>();
    public bool IsT7 => Type == TypeIndicator.GetType<T7>();
    public bool IsT8 => Type == TypeIndicator.GetType<T8>();
    public bool IsT9 => Type == TypeIndicator.GetType<T9>();
    public bool IsT10 => Type == TypeIndicator.GetType<T10>();
    public bool IsT11 => Type == TypeIndicator.GetType<T11>();
    public bool IsT12 => Type == TypeIndicator.GetType<T12>();
    public bool IsT13 => Type == TypeIndicator.GetType<T13>();
    public bool IsT14 => Type == TypeIndicator.GetType<T14>();
    public bool IsT15 => Type == TypeIndicator.GetType<T15>();
    public bool IsT16 => Type == TypeIndicator.GetType<T16>();
    public bool IsT17 => Type == TypeIndicator.GetType<T17>();
    public bool IsT18 => Type == TypeIndicator.GetType<T18>();
    public bool IsT19 => Type == TypeIndicator.GetType<T19>();
    public bool IsT20 => Type == TypeIndicator.GetType<T20>();
    public bool IsT21 => Type == TypeIndicator.GetType<T21>();
    public bool IsT22 => Type == TypeIndicator.GetType<T22>();
    public bool IsT23 => Type == TypeIndicator.GetType<T23>();
    public bool IsT24 => Type == TypeIndicator.GetType<T24>();
    public bool IsT25 => Type == TypeIndicator.GetType<T25>();
    public bool IsT26 => Type == TypeIndicator.GetType<T26>();
    public bool IsT27 => Type == TypeIndicator.GetType<T27>();
    public bool IsT28 => Type == TypeIndicator.GetType<T28>();
    public bool IsT29 => Type == TypeIndicator.GetType<T29>();
    public bool IsT30 => Type == TypeIndicator.GetType<T30>();
    public bool IsT31 => Type == TypeIndicator.GetType<T31>();
    public bool IsT32 => Type == TypeIndicator.GetType<T32>();
    public bool IsT33 => Type == TypeIndicator.GetType<T33>();
    public bool IsT34 => Type == TypeIndicator.GetType<T34>();
    public bool IsT35 => Type == TypeIndicator.GetType<T35>();
    public bool IsT36 => Type == TypeIndicator.GetType<T36>();

    public T1 AsT1 => new StringSPWNExpr<T1>(ValueAsString).AsValue();
    public T2 AsT2 => new StringSPWNExpr<T2>(ValueAsString).AsValue();
    public T3 AsT3 => new StringSPWNExpr<T3>(ValueAsString).AsValue();
    public T4 AsT4 => new StringSPWNExpr<T4>(ValueAsString).AsValue();
    public T5 AsT5 => new StringSPWNExpr<T5>(ValueAsString).AsValue();
    public T6 AsT6 => new StringSPWNExpr<T6>(ValueAsString).AsValue();
    public T7 AsT7 => new StringSPWNExpr<T7>(ValueAsString).AsValue();
    public T8 AsT8 => new StringSPWNExpr<T8>(ValueAsString).AsValue();
    public T9 AsT9 => new StringSPWNExpr<T9>(ValueAsString).AsValue();
    public T10 AsT10 => new StringSPWNExpr<T10>(ValueAsString).AsValue();
    public T11 AsT11 => new StringSPWNExpr<T11>(ValueAsString).AsValue();
    public T12 AsT12 => new StringSPWNExpr<T12>(ValueAsString).AsValue();
    public T13 AsT13 => new StringSPWNExpr<T13>(ValueAsString).AsValue();
    public T14 AsT14 => new StringSPWNExpr<T14>(ValueAsString).AsValue();
    public T15 AsT15 => new StringSPWNExpr<T15>(ValueAsString).AsValue();
    public T16 AsT16 => new StringSPWNExpr<T16>(ValueAsString).AsValue();
    public T17 AsT17 => new StringSPWNExpr<T17>(ValueAsString).AsValue();
    public T18 AsT18 => new StringSPWNExpr<T18>(ValueAsString).AsValue();
    public T19 AsT19 => new StringSPWNExpr<T19>(ValueAsString).AsValue();
    public T20 AsT20 => new StringSPWNExpr<T20>(ValueAsString).AsValue();
    public T21 AsT21 => new StringSPWNExpr<T21>(ValueAsString).AsValue();
    public T22 AsT22 => new StringSPWNExpr<T22>(ValueAsString).AsValue();
    public T23 AsT23 => new StringSPWNExpr<T23>(ValueAsString).AsValue();
    public T24 AsT24 => new StringSPWNExpr<T24>(ValueAsString).AsValue();
    public T25 AsT25 => new StringSPWNExpr<T25>(ValueAsString).AsValue();
    public T26 AsT26 => new StringSPWNExpr<T26>(ValueAsString).AsValue();
    public T27 AsT27 => new StringSPWNExpr<T27>(ValueAsString).AsValue();
    public T28 AsT28 => new StringSPWNExpr<T28>(ValueAsString).AsValue();
    public T29 AsT29 => new StringSPWNExpr<T29>(ValueAsString).AsValue();
    public T30 AsT30 => new StringSPWNExpr<T30>(ValueAsString).AsValue();
    public T31 AsT31 => new StringSPWNExpr<T31>(ValueAsString).AsValue();
    public T32 AsT32 => new StringSPWNExpr<T32>(ValueAsString).AsValue();
    public T33 AsT33 => new StringSPWNExpr<T33>(ValueAsString).AsValue();
    public T34 AsT34 => new StringSPWNExpr<T34>(ValueAsString).AsValue();
    public T35 AsT35 => new StringSPWNExpr<T35>(ValueAsString).AsValue();
    public T36 AsT36 => new StringSPWNExpr<T36>(ValueAsString).AsValue();

    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36>(T1 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36>(T2 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36>(T3 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36>(T4 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36>(T5 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36>(T6 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36>(T7 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36>(T8 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36>(T9 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36>(T10 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36>(T11 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36>(T12 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36>(T13 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36>(T14 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36>(T15 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36>(T16 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36>(T17 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36>(T18 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36>(T19 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36>(T20 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36>(T21 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36>(T22 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36>(T23 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36>(T24 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36>(T25 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36>(T26 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36>(T27 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36>(T28 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36>(T29 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36>(T30 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36>(T31 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36>(T32 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36>(T33 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36>(T34 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36>(T35 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36>(T36 Value) => new(Value);
}

// Note UnionTypes is NOT a Built-in type in SPWN
[SPWNType("@typeunion")]
public class UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37> : SPWNValueBase
    where T1 : SPWNValueBase
    where T2 : SPWNValueBase
    where T3 : SPWNValueBase
    where T4 : SPWNValueBase
    where T5 : SPWNValueBase
    where T6 : SPWNValueBase
    where T7 : SPWNValueBase
    where T8 : SPWNValueBase
    where T9 : SPWNValueBase
    where T10 : SPWNValueBase
    where T11 : SPWNValueBase
    where T12 : SPWNValueBase
    where T13 : SPWNValueBase
    where T14 : SPWNValueBase
    where T15 : SPWNValueBase
    where T16 : SPWNValueBase
    where T17 : SPWNValueBase
    where T18 : SPWNValueBase
    where T19 : SPWNValueBase
    where T20 : SPWNValueBase
    where T21 : SPWNValueBase
    where T22 : SPWNValueBase
    where T23 : SPWNValueBase
    where T24 : SPWNValueBase
    where T25 : SPWNValueBase
    where T26 : SPWNValueBase
    where T27 : SPWNValueBase
    where T28 : SPWNValueBase
    where T29 : SPWNValueBase
    where T30 : SPWNValueBase
    where T31 : SPWNValueBase
    where T32 : SPWNValueBase
    where T33 : SPWNValueBase
    where T34 : SPWNValueBase
    where T35 : SPWNValueBase
    where T36 : SPWNValueBase
    where T37 : SPWNValueBase
{
    public override string ValueAsString { get; protected set; }

    public UnionTypes(T1 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T2 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T3 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T4 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T5 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T6 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T7 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T8 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T9 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T10 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T11 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T12 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T13 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T14 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T15 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T16 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T17 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T18 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T19 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T20 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T21 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T22 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T23 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T24 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T25 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T26 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T27 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T28 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T29 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T30 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T31 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T32 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T33 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T34 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T35 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T36 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T37 Value) => ValueAsString = Value.ValueAsString;

    public bool IsT1 => Type == TypeIndicator.GetType<T1>();
    public bool IsT2 => Type == TypeIndicator.GetType<T2>();
    public bool IsT3 => Type == TypeIndicator.GetType<T3>();
    public bool IsT4 => Type == TypeIndicator.GetType<T4>();
    public bool IsT5 => Type == TypeIndicator.GetType<T5>();
    public bool IsT6 => Type == TypeIndicator.GetType<T6>();
    public bool IsT7 => Type == TypeIndicator.GetType<T7>();
    public bool IsT8 => Type == TypeIndicator.GetType<T8>();
    public bool IsT9 => Type == TypeIndicator.GetType<T9>();
    public bool IsT10 => Type == TypeIndicator.GetType<T10>();
    public bool IsT11 => Type == TypeIndicator.GetType<T11>();
    public bool IsT12 => Type == TypeIndicator.GetType<T12>();
    public bool IsT13 => Type == TypeIndicator.GetType<T13>();
    public bool IsT14 => Type == TypeIndicator.GetType<T14>();
    public bool IsT15 => Type == TypeIndicator.GetType<T15>();
    public bool IsT16 => Type == TypeIndicator.GetType<T16>();
    public bool IsT17 => Type == TypeIndicator.GetType<T17>();
    public bool IsT18 => Type == TypeIndicator.GetType<T18>();
    public bool IsT19 => Type == TypeIndicator.GetType<T19>();
    public bool IsT20 => Type == TypeIndicator.GetType<T20>();
    public bool IsT21 => Type == TypeIndicator.GetType<T21>();
    public bool IsT22 => Type == TypeIndicator.GetType<T22>();
    public bool IsT23 => Type == TypeIndicator.GetType<T23>();
    public bool IsT24 => Type == TypeIndicator.GetType<T24>();
    public bool IsT25 => Type == TypeIndicator.GetType<T25>();
    public bool IsT26 => Type == TypeIndicator.GetType<T26>();
    public bool IsT27 => Type == TypeIndicator.GetType<T27>();
    public bool IsT28 => Type == TypeIndicator.GetType<T28>();
    public bool IsT29 => Type == TypeIndicator.GetType<T29>();
    public bool IsT30 => Type == TypeIndicator.GetType<T30>();
    public bool IsT31 => Type == TypeIndicator.GetType<T31>();
    public bool IsT32 => Type == TypeIndicator.GetType<T32>();
    public bool IsT33 => Type == TypeIndicator.GetType<T33>();
    public bool IsT34 => Type == TypeIndicator.GetType<T34>();
    public bool IsT35 => Type == TypeIndicator.GetType<T35>();
    public bool IsT36 => Type == TypeIndicator.GetType<T36>();
    public bool IsT37 => Type == TypeIndicator.GetType<T37>();

    public T1 AsT1 => new StringSPWNExpr<T1>(ValueAsString).AsValue();
    public T2 AsT2 => new StringSPWNExpr<T2>(ValueAsString).AsValue();
    public T3 AsT3 => new StringSPWNExpr<T3>(ValueAsString).AsValue();
    public T4 AsT4 => new StringSPWNExpr<T4>(ValueAsString).AsValue();
    public T5 AsT5 => new StringSPWNExpr<T5>(ValueAsString).AsValue();
    public T6 AsT6 => new StringSPWNExpr<T6>(ValueAsString).AsValue();
    public T7 AsT7 => new StringSPWNExpr<T7>(ValueAsString).AsValue();
    public T8 AsT8 => new StringSPWNExpr<T8>(ValueAsString).AsValue();
    public T9 AsT9 => new StringSPWNExpr<T9>(ValueAsString).AsValue();
    public T10 AsT10 => new StringSPWNExpr<T10>(ValueAsString).AsValue();
    public T11 AsT11 => new StringSPWNExpr<T11>(ValueAsString).AsValue();
    public T12 AsT12 => new StringSPWNExpr<T12>(ValueAsString).AsValue();
    public T13 AsT13 => new StringSPWNExpr<T13>(ValueAsString).AsValue();
    public T14 AsT14 => new StringSPWNExpr<T14>(ValueAsString).AsValue();
    public T15 AsT15 => new StringSPWNExpr<T15>(ValueAsString).AsValue();
    public T16 AsT16 => new StringSPWNExpr<T16>(ValueAsString).AsValue();
    public T17 AsT17 => new StringSPWNExpr<T17>(ValueAsString).AsValue();
    public T18 AsT18 => new StringSPWNExpr<T18>(ValueAsString).AsValue();
    public T19 AsT19 => new StringSPWNExpr<T19>(ValueAsString).AsValue();
    public T20 AsT20 => new StringSPWNExpr<T20>(ValueAsString).AsValue();
    public T21 AsT21 => new StringSPWNExpr<T21>(ValueAsString).AsValue();
    public T22 AsT22 => new StringSPWNExpr<T22>(ValueAsString).AsValue();
    public T23 AsT23 => new StringSPWNExpr<T23>(ValueAsString).AsValue();
    public T24 AsT24 => new StringSPWNExpr<T24>(ValueAsString).AsValue();
    public T25 AsT25 => new StringSPWNExpr<T25>(ValueAsString).AsValue();
    public T26 AsT26 => new StringSPWNExpr<T26>(ValueAsString).AsValue();
    public T27 AsT27 => new StringSPWNExpr<T27>(ValueAsString).AsValue();
    public T28 AsT28 => new StringSPWNExpr<T28>(ValueAsString).AsValue();
    public T29 AsT29 => new StringSPWNExpr<T29>(ValueAsString).AsValue();
    public T30 AsT30 => new StringSPWNExpr<T30>(ValueAsString).AsValue();
    public T31 AsT31 => new StringSPWNExpr<T31>(ValueAsString).AsValue();
    public T32 AsT32 => new StringSPWNExpr<T32>(ValueAsString).AsValue();
    public T33 AsT33 => new StringSPWNExpr<T33>(ValueAsString).AsValue();
    public T34 AsT34 => new StringSPWNExpr<T34>(ValueAsString).AsValue();
    public T35 AsT35 => new StringSPWNExpr<T35>(ValueAsString).AsValue();
    public T36 AsT36 => new StringSPWNExpr<T36>(ValueAsString).AsValue();
    public T37 AsT37 => new StringSPWNExpr<T37>(ValueAsString).AsValue();

    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37>(T1 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37>(T2 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37>(T3 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37>(T4 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37>(T5 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37>(T6 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37>(T7 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37>(T8 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37>(T9 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37>(T10 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37>(T11 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37>(T12 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37>(T13 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37>(T14 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37>(T15 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37>(T16 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37>(T17 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37>(T18 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37>(T19 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37>(T20 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37>(T21 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37>(T22 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37>(T23 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37>(T24 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37>(T25 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37>(T26 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37>(T27 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37>(T28 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37>(T29 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37>(T30 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37>(T31 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37>(T32 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37>(T33 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37>(T34 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37>(T35 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37>(T36 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37>(T37 Value) => new(Value);
}

// Note UnionTypes is NOT a Built-in type in SPWN
[SPWNType("@typeunion")]
public class UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38> : SPWNValueBase
    where T1 : SPWNValueBase
    where T2 : SPWNValueBase
    where T3 : SPWNValueBase
    where T4 : SPWNValueBase
    where T5 : SPWNValueBase
    where T6 : SPWNValueBase
    where T7 : SPWNValueBase
    where T8 : SPWNValueBase
    where T9 : SPWNValueBase
    where T10 : SPWNValueBase
    where T11 : SPWNValueBase
    where T12 : SPWNValueBase
    where T13 : SPWNValueBase
    where T14 : SPWNValueBase
    where T15 : SPWNValueBase
    where T16 : SPWNValueBase
    where T17 : SPWNValueBase
    where T18 : SPWNValueBase
    where T19 : SPWNValueBase
    where T20 : SPWNValueBase
    where T21 : SPWNValueBase
    where T22 : SPWNValueBase
    where T23 : SPWNValueBase
    where T24 : SPWNValueBase
    where T25 : SPWNValueBase
    where T26 : SPWNValueBase
    where T27 : SPWNValueBase
    where T28 : SPWNValueBase
    where T29 : SPWNValueBase
    where T30 : SPWNValueBase
    where T31 : SPWNValueBase
    where T32 : SPWNValueBase
    where T33 : SPWNValueBase
    where T34 : SPWNValueBase
    where T35 : SPWNValueBase
    where T36 : SPWNValueBase
    where T37 : SPWNValueBase
    where T38 : SPWNValueBase
{
    public override string ValueAsString { get; protected set; }

    public UnionTypes(T1 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T2 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T3 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T4 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T5 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T6 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T7 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T8 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T9 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T10 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T11 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T12 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T13 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T14 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T15 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T16 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T17 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T18 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T19 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T20 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T21 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T22 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T23 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T24 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T25 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T26 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T27 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T28 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T29 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T30 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T31 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T32 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T33 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T34 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T35 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T36 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T37 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T38 Value) => ValueAsString = Value.ValueAsString;

    public bool IsT1 => Type == TypeIndicator.GetType<T1>();
    public bool IsT2 => Type == TypeIndicator.GetType<T2>();
    public bool IsT3 => Type == TypeIndicator.GetType<T3>();
    public bool IsT4 => Type == TypeIndicator.GetType<T4>();
    public bool IsT5 => Type == TypeIndicator.GetType<T5>();
    public bool IsT6 => Type == TypeIndicator.GetType<T6>();
    public bool IsT7 => Type == TypeIndicator.GetType<T7>();
    public bool IsT8 => Type == TypeIndicator.GetType<T8>();
    public bool IsT9 => Type == TypeIndicator.GetType<T9>();
    public bool IsT10 => Type == TypeIndicator.GetType<T10>();
    public bool IsT11 => Type == TypeIndicator.GetType<T11>();
    public bool IsT12 => Type == TypeIndicator.GetType<T12>();
    public bool IsT13 => Type == TypeIndicator.GetType<T13>();
    public bool IsT14 => Type == TypeIndicator.GetType<T14>();
    public bool IsT15 => Type == TypeIndicator.GetType<T15>();
    public bool IsT16 => Type == TypeIndicator.GetType<T16>();
    public bool IsT17 => Type == TypeIndicator.GetType<T17>();
    public bool IsT18 => Type == TypeIndicator.GetType<T18>();
    public bool IsT19 => Type == TypeIndicator.GetType<T19>();
    public bool IsT20 => Type == TypeIndicator.GetType<T20>();
    public bool IsT21 => Type == TypeIndicator.GetType<T21>();
    public bool IsT22 => Type == TypeIndicator.GetType<T22>();
    public bool IsT23 => Type == TypeIndicator.GetType<T23>();
    public bool IsT24 => Type == TypeIndicator.GetType<T24>();
    public bool IsT25 => Type == TypeIndicator.GetType<T25>();
    public bool IsT26 => Type == TypeIndicator.GetType<T26>();
    public bool IsT27 => Type == TypeIndicator.GetType<T27>();
    public bool IsT28 => Type == TypeIndicator.GetType<T28>();
    public bool IsT29 => Type == TypeIndicator.GetType<T29>();
    public bool IsT30 => Type == TypeIndicator.GetType<T30>();
    public bool IsT31 => Type == TypeIndicator.GetType<T31>();
    public bool IsT32 => Type == TypeIndicator.GetType<T32>();
    public bool IsT33 => Type == TypeIndicator.GetType<T33>();
    public bool IsT34 => Type == TypeIndicator.GetType<T34>();
    public bool IsT35 => Type == TypeIndicator.GetType<T35>();
    public bool IsT36 => Type == TypeIndicator.GetType<T36>();
    public bool IsT37 => Type == TypeIndicator.GetType<T37>();
    public bool IsT38 => Type == TypeIndicator.GetType<T38>();

    public T1 AsT1 => new StringSPWNExpr<T1>(ValueAsString).AsValue();
    public T2 AsT2 => new StringSPWNExpr<T2>(ValueAsString).AsValue();
    public T3 AsT3 => new StringSPWNExpr<T3>(ValueAsString).AsValue();
    public T4 AsT4 => new StringSPWNExpr<T4>(ValueAsString).AsValue();
    public T5 AsT5 => new StringSPWNExpr<T5>(ValueAsString).AsValue();
    public T6 AsT6 => new StringSPWNExpr<T6>(ValueAsString).AsValue();
    public T7 AsT7 => new StringSPWNExpr<T7>(ValueAsString).AsValue();
    public T8 AsT8 => new StringSPWNExpr<T8>(ValueAsString).AsValue();
    public T9 AsT9 => new StringSPWNExpr<T9>(ValueAsString).AsValue();
    public T10 AsT10 => new StringSPWNExpr<T10>(ValueAsString).AsValue();
    public T11 AsT11 => new StringSPWNExpr<T11>(ValueAsString).AsValue();
    public T12 AsT12 => new StringSPWNExpr<T12>(ValueAsString).AsValue();
    public T13 AsT13 => new StringSPWNExpr<T13>(ValueAsString).AsValue();
    public T14 AsT14 => new StringSPWNExpr<T14>(ValueAsString).AsValue();
    public T15 AsT15 => new StringSPWNExpr<T15>(ValueAsString).AsValue();
    public T16 AsT16 => new StringSPWNExpr<T16>(ValueAsString).AsValue();
    public T17 AsT17 => new StringSPWNExpr<T17>(ValueAsString).AsValue();
    public T18 AsT18 => new StringSPWNExpr<T18>(ValueAsString).AsValue();
    public T19 AsT19 => new StringSPWNExpr<T19>(ValueAsString).AsValue();
    public T20 AsT20 => new StringSPWNExpr<T20>(ValueAsString).AsValue();
    public T21 AsT21 => new StringSPWNExpr<T21>(ValueAsString).AsValue();
    public T22 AsT22 => new StringSPWNExpr<T22>(ValueAsString).AsValue();
    public T23 AsT23 => new StringSPWNExpr<T23>(ValueAsString).AsValue();
    public T24 AsT24 => new StringSPWNExpr<T24>(ValueAsString).AsValue();
    public T25 AsT25 => new StringSPWNExpr<T25>(ValueAsString).AsValue();
    public T26 AsT26 => new StringSPWNExpr<T26>(ValueAsString).AsValue();
    public T27 AsT27 => new StringSPWNExpr<T27>(ValueAsString).AsValue();
    public T28 AsT28 => new StringSPWNExpr<T28>(ValueAsString).AsValue();
    public T29 AsT29 => new StringSPWNExpr<T29>(ValueAsString).AsValue();
    public T30 AsT30 => new StringSPWNExpr<T30>(ValueAsString).AsValue();
    public T31 AsT31 => new StringSPWNExpr<T31>(ValueAsString).AsValue();
    public T32 AsT32 => new StringSPWNExpr<T32>(ValueAsString).AsValue();
    public T33 AsT33 => new StringSPWNExpr<T33>(ValueAsString).AsValue();
    public T34 AsT34 => new StringSPWNExpr<T34>(ValueAsString).AsValue();
    public T35 AsT35 => new StringSPWNExpr<T35>(ValueAsString).AsValue();
    public T36 AsT36 => new StringSPWNExpr<T36>(ValueAsString).AsValue();
    public T37 AsT37 => new StringSPWNExpr<T37>(ValueAsString).AsValue();
    public T38 AsT38 => new StringSPWNExpr<T38>(ValueAsString).AsValue();

    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38>(T1 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38>(T2 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38>(T3 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38>(T4 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38>(T5 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38>(T6 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38>(T7 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38>(T8 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38>(T9 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38>(T10 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38>(T11 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38>(T12 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38>(T13 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38>(T14 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38>(T15 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38>(T16 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38>(T17 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38>(T18 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38>(T19 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38>(T20 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38>(T21 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38>(T22 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38>(T23 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38>(T24 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38>(T25 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38>(T26 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38>(T27 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38>(T28 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38>(T29 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38>(T30 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38>(T31 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38>(T32 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38>(T33 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38>(T34 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38>(T35 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38>(T36 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38>(T37 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38>(T38 Value) => new(Value);
}

// Note UnionTypes is NOT a Built-in type in SPWN
[SPWNType("@typeunion")]
public class UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39> : SPWNValueBase
    where T1 : SPWNValueBase
    where T2 : SPWNValueBase
    where T3 : SPWNValueBase
    where T4 : SPWNValueBase
    where T5 : SPWNValueBase
    where T6 : SPWNValueBase
    where T7 : SPWNValueBase
    where T8 : SPWNValueBase
    where T9 : SPWNValueBase
    where T10 : SPWNValueBase
    where T11 : SPWNValueBase
    where T12 : SPWNValueBase
    where T13 : SPWNValueBase
    where T14 : SPWNValueBase
    where T15 : SPWNValueBase
    where T16 : SPWNValueBase
    where T17 : SPWNValueBase
    where T18 : SPWNValueBase
    where T19 : SPWNValueBase
    where T20 : SPWNValueBase
    where T21 : SPWNValueBase
    where T22 : SPWNValueBase
    where T23 : SPWNValueBase
    where T24 : SPWNValueBase
    where T25 : SPWNValueBase
    where T26 : SPWNValueBase
    where T27 : SPWNValueBase
    where T28 : SPWNValueBase
    where T29 : SPWNValueBase
    where T30 : SPWNValueBase
    where T31 : SPWNValueBase
    where T32 : SPWNValueBase
    where T33 : SPWNValueBase
    where T34 : SPWNValueBase
    where T35 : SPWNValueBase
    where T36 : SPWNValueBase
    where T37 : SPWNValueBase
    where T38 : SPWNValueBase
    where T39 : SPWNValueBase
{
    public override string ValueAsString { get; protected set; }

    public UnionTypes(T1 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T2 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T3 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T4 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T5 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T6 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T7 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T8 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T9 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T10 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T11 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T12 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T13 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T14 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T15 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T16 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T17 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T18 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T19 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T20 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T21 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T22 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T23 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T24 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T25 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T26 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T27 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T28 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T29 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T30 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T31 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T32 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T33 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T34 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T35 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T36 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T37 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T38 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T39 Value) => ValueAsString = Value.ValueAsString;

    public bool IsT1 => Type == TypeIndicator.GetType<T1>();
    public bool IsT2 => Type == TypeIndicator.GetType<T2>();
    public bool IsT3 => Type == TypeIndicator.GetType<T3>();
    public bool IsT4 => Type == TypeIndicator.GetType<T4>();
    public bool IsT5 => Type == TypeIndicator.GetType<T5>();
    public bool IsT6 => Type == TypeIndicator.GetType<T6>();
    public bool IsT7 => Type == TypeIndicator.GetType<T7>();
    public bool IsT8 => Type == TypeIndicator.GetType<T8>();
    public bool IsT9 => Type == TypeIndicator.GetType<T9>();
    public bool IsT10 => Type == TypeIndicator.GetType<T10>();
    public bool IsT11 => Type == TypeIndicator.GetType<T11>();
    public bool IsT12 => Type == TypeIndicator.GetType<T12>();
    public bool IsT13 => Type == TypeIndicator.GetType<T13>();
    public bool IsT14 => Type == TypeIndicator.GetType<T14>();
    public bool IsT15 => Type == TypeIndicator.GetType<T15>();
    public bool IsT16 => Type == TypeIndicator.GetType<T16>();
    public bool IsT17 => Type == TypeIndicator.GetType<T17>();
    public bool IsT18 => Type == TypeIndicator.GetType<T18>();
    public bool IsT19 => Type == TypeIndicator.GetType<T19>();
    public bool IsT20 => Type == TypeIndicator.GetType<T20>();
    public bool IsT21 => Type == TypeIndicator.GetType<T21>();
    public bool IsT22 => Type == TypeIndicator.GetType<T22>();
    public bool IsT23 => Type == TypeIndicator.GetType<T23>();
    public bool IsT24 => Type == TypeIndicator.GetType<T24>();
    public bool IsT25 => Type == TypeIndicator.GetType<T25>();
    public bool IsT26 => Type == TypeIndicator.GetType<T26>();
    public bool IsT27 => Type == TypeIndicator.GetType<T27>();
    public bool IsT28 => Type == TypeIndicator.GetType<T28>();
    public bool IsT29 => Type == TypeIndicator.GetType<T29>();
    public bool IsT30 => Type == TypeIndicator.GetType<T30>();
    public bool IsT31 => Type == TypeIndicator.GetType<T31>();
    public bool IsT32 => Type == TypeIndicator.GetType<T32>();
    public bool IsT33 => Type == TypeIndicator.GetType<T33>();
    public bool IsT34 => Type == TypeIndicator.GetType<T34>();
    public bool IsT35 => Type == TypeIndicator.GetType<T35>();
    public bool IsT36 => Type == TypeIndicator.GetType<T36>();
    public bool IsT37 => Type == TypeIndicator.GetType<T37>();
    public bool IsT38 => Type == TypeIndicator.GetType<T38>();
    public bool IsT39 => Type == TypeIndicator.GetType<T39>();

    public T1 AsT1 => new StringSPWNExpr<T1>(ValueAsString).AsValue();
    public T2 AsT2 => new StringSPWNExpr<T2>(ValueAsString).AsValue();
    public T3 AsT3 => new StringSPWNExpr<T3>(ValueAsString).AsValue();
    public T4 AsT4 => new StringSPWNExpr<T4>(ValueAsString).AsValue();
    public T5 AsT5 => new StringSPWNExpr<T5>(ValueAsString).AsValue();
    public T6 AsT6 => new StringSPWNExpr<T6>(ValueAsString).AsValue();
    public T7 AsT7 => new StringSPWNExpr<T7>(ValueAsString).AsValue();
    public T8 AsT8 => new StringSPWNExpr<T8>(ValueAsString).AsValue();
    public T9 AsT9 => new StringSPWNExpr<T9>(ValueAsString).AsValue();
    public T10 AsT10 => new StringSPWNExpr<T10>(ValueAsString).AsValue();
    public T11 AsT11 => new StringSPWNExpr<T11>(ValueAsString).AsValue();
    public T12 AsT12 => new StringSPWNExpr<T12>(ValueAsString).AsValue();
    public T13 AsT13 => new StringSPWNExpr<T13>(ValueAsString).AsValue();
    public T14 AsT14 => new StringSPWNExpr<T14>(ValueAsString).AsValue();
    public T15 AsT15 => new StringSPWNExpr<T15>(ValueAsString).AsValue();
    public T16 AsT16 => new StringSPWNExpr<T16>(ValueAsString).AsValue();
    public T17 AsT17 => new StringSPWNExpr<T17>(ValueAsString).AsValue();
    public T18 AsT18 => new StringSPWNExpr<T18>(ValueAsString).AsValue();
    public T19 AsT19 => new StringSPWNExpr<T19>(ValueAsString).AsValue();
    public T20 AsT20 => new StringSPWNExpr<T20>(ValueAsString).AsValue();
    public T21 AsT21 => new StringSPWNExpr<T21>(ValueAsString).AsValue();
    public T22 AsT22 => new StringSPWNExpr<T22>(ValueAsString).AsValue();
    public T23 AsT23 => new StringSPWNExpr<T23>(ValueAsString).AsValue();
    public T24 AsT24 => new StringSPWNExpr<T24>(ValueAsString).AsValue();
    public T25 AsT25 => new StringSPWNExpr<T25>(ValueAsString).AsValue();
    public T26 AsT26 => new StringSPWNExpr<T26>(ValueAsString).AsValue();
    public T27 AsT27 => new StringSPWNExpr<T27>(ValueAsString).AsValue();
    public T28 AsT28 => new StringSPWNExpr<T28>(ValueAsString).AsValue();
    public T29 AsT29 => new StringSPWNExpr<T29>(ValueAsString).AsValue();
    public T30 AsT30 => new StringSPWNExpr<T30>(ValueAsString).AsValue();
    public T31 AsT31 => new StringSPWNExpr<T31>(ValueAsString).AsValue();
    public T32 AsT32 => new StringSPWNExpr<T32>(ValueAsString).AsValue();
    public T33 AsT33 => new StringSPWNExpr<T33>(ValueAsString).AsValue();
    public T34 AsT34 => new StringSPWNExpr<T34>(ValueAsString).AsValue();
    public T35 AsT35 => new StringSPWNExpr<T35>(ValueAsString).AsValue();
    public T36 AsT36 => new StringSPWNExpr<T36>(ValueAsString).AsValue();
    public T37 AsT37 => new StringSPWNExpr<T37>(ValueAsString).AsValue();
    public T38 AsT38 => new StringSPWNExpr<T38>(ValueAsString).AsValue();
    public T39 AsT39 => new StringSPWNExpr<T39>(ValueAsString).AsValue();

    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39>(T1 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39>(T2 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39>(T3 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39>(T4 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39>(T5 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39>(T6 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39>(T7 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39>(T8 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39>(T9 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39>(T10 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39>(T11 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39>(T12 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39>(T13 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39>(T14 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39>(T15 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39>(T16 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39>(T17 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39>(T18 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39>(T19 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39>(T20 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39>(T21 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39>(T22 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39>(T23 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39>(T24 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39>(T25 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39>(T26 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39>(T27 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39>(T28 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39>(T29 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39>(T30 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39>(T31 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39>(T32 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39>(T33 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39>(T34 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39>(T35 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39>(T36 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39>(T37 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39>(T38 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39>(T39 Value) => new(Value);
}

// Note UnionTypes is NOT a Built-in type in SPWN
[SPWNType("@typeunion")]
public class UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40> : SPWNValueBase
    where T1 : SPWNValueBase
    where T2 : SPWNValueBase
    where T3 : SPWNValueBase
    where T4 : SPWNValueBase
    where T5 : SPWNValueBase
    where T6 : SPWNValueBase
    where T7 : SPWNValueBase
    where T8 : SPWNValueBase
    where T9 : SPWNValueBase
    where T10 : SPWNValueBase
    where T11 : SPWNValueBase
    where T12 : SPWNValueBase
    where T13 : SPWNValueBase
    where T14 : SPWNValueBase
    where T15 : SPWNValueBase
    where T16 : SPWNValueBase
    where T17 : SPWNValueBase
    where T18 : SPWNValueBase
    where T19 : SPWNValueBase
    where T20 : SPWNValueBase
    where T21 : SPWNValueBase
    where T22 : SPWNValueBase
    where T23 : SPWNValueBase
    where T24 : SPWNValueBase
    where T25 : SPWNValueBase
    where T26 : SPWNValueBase
    where T27 : SPWNValueBase
    where T28 : SPWNValueBase
    where T29 : SPWNValueBase
    where T30 : SPWNValueBase
    where T31 : SPWNValueBase
    where T32 : SPWNValueBase
    where T33 : SPWNValueBase
    where T34 : SPWNValueBase
    where T35 : SPWNValueBase
    where T36 : SPWNValueBase
    where T37 : SPWNValueBase
    where T38 : SPWNValueBase
    where T39 : SPWNValueBase
    where T40 : SPWNValueBase
{
    public override string ValueAsString { get; protected set; }

    public UnionTypes(T1 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T2 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T3 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T4 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T5 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T6 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T7 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T8 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T9 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T10 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T11 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T12 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T13 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T14 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T15 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T16 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T17 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T18 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T19 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T20 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T21 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T22 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T23 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T24 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T25 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T26 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T27 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T28 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T29 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T30 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T31 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T32 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T33 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T34 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T35 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T36 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T37 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T38 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T39 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T40 Value) => ValueAsString = Value.ValueAsString;

    public bool IsT1 => Type == TypeIndicator.GetType<T1>();
    public bool IsT2 => Type == TypeIndicator.GetType<T2>();
    public bool IsT3 => Type == TypeIndicator.GetType<T3>();
    public bool IsT4 => Type == TypeIndicator.GetType<T4>();
    public bool IsT5 => Type == TypeIndicator.GetType<T5>();
    public bool IsT6 => Type == TypeIndicator.GetType<T6>();
    public bool IsT7 => Type == TypeIndicator.GetType<T7>();
    public bool IsT8 => Type == TypeIndicator.GetType<T8>();
    public bool IsT9 => Type == TypeIndicator.GetType<T9>();
    public bool IsT10 => Type == TypeIndicator.GetType<T10>();
    public bool IsT11 => Type == TypeIndicator.GetType<T11>();
    public bool IsT12 => Type == TypeIndicator.GetType<T12>();
    public bool IsT13 => Type == TypeIndicator.GetType<T13>();
    public bool IsT14 => Type == TypeIndicator.GetType<T14>();
    public bool IsT15 => Type == TypeIndicator.GetType<T15>();
    public bool IsT16 => Type == TypeIndicator.GetType<T16>();
    public bool IsT17 => Type == TypeIndicator.GetType<T17>();
    public bool IsT18 => Type == TypeIndicator.GetType<T18>();
    public bool IsT19 => Type == TypeIndicator.GetType<T19>();
    public bool IsT20 => Type == TypeIndicator.GetType<T20>();
    public bool IsT21 => Type == TypeIndicator.GetType<T21>();
    public bool IsT22 => Type == TypeIndicator.GetType<T22>();
    public bool IsT23 => Type == TypeIndicator.GetType<T23>();
    public bool IsT24 => Type == TypeIndicator.GetType<T24>();
    public bool IsT25 => Type == TypeIndicator.GetType<T25>();
    public bool IsT26 => Type == TypeIndicator.GetType<T26>();
    public bool IsT27 => Type == TypeIndicator.GetType<T27>();
    public bool IsT28 => Type == TypeIndicator.GetType<T28>();
    public bool IsT29 => Type == TypeIndicator.GetType<T29>();
    public bool IsT30 => Type == TypeIndicator.GetType<T30>();
    public bool IsT31 => Type == TypeIndicator.GetType<T31>();
    public bool IsT32 => Type == TypeIndicator.GetType<T32>();
    public bool IsT33 => Type == TypeIndicator.GetType<T33>();
    public bool IsT34 => Type == TypeIndicator.GetType<T34>();
    public bool IsT35 => Type == TypeIndicator.GetType<T35>();
    public bool IsT36 => Type == TypeIndicator.GetType<T36>();
    public bool IsT37 => Type == TypeIndicator.GetType<T37>();
    public bool IsT38 => Type == TypeIndicator.GetType<T38>();
    public bool IsT39 => Type == TypeIndicator.GetType<T39>();
    public bool IsT40 => Type == TypeIndicator.GetType<T40>();

    public T1 AsT1 => new StringSPWNExpr<T1>(ValueAsString).AsValue();
    public T2 AsT2 => new StringSPWNExpr<T2>(ValueAsString).AsValue();
    public T3 AsT3 => new StringSPWNExpr<T3>(ValueAsString).AsValue();
    public T4 AsT4 => new StringSPWNExpr<T4>(ValueAsString).AsValue();
    public T5 AsT5 => new StringSPWNExpr<T5>(ValueAsString).AsValue();
    public T6 AsT6 => new StringSPWNExpr<T6>(ValueAsString).AsValue();
    public T7 AsT7 => new StringSPWNExpr<T7>(ValueAsString).AsValue();
    public T8 AsT8 => new StringSPWNExpr<T8>(ValueAsString).AsValue();
    public T9 AsT9 => new StringSPWNExpr<T9>(ValueAsString).AsValue();
    public T10 AsT10 => new StringSPWNExpr<T10>(ValueAsString).AsValue();
    public T11 AsT11 => new StringSPWNExpr<T11>(ValueAsString).AsValue();
    public T12 AsT12 => new StringSPWNExpr<T12>(ValueAsString).AsValue();
    public T13 AsT13 => new StringSPWNExpr<T13>(ValueAsString).AsValue();
    public T14 AsT14 => new StringSPWNExpr<T14>(ValueAsString).AsValue();
    public T15 AsT15 => new StringSPWNExpr<T15>(ValueAsString).AsValue();
    public T16 AsT16 => new StringSPWNExpr<T16>(ValueAsString).AsValue();
    public T17 AsT17 => new StringSPWNExpr<T17>(ValueAsString).AsValue();
    public T18 AsT18 => new StringSPWNExpr<T18>(ValueAsString).AsValue();
    public T19 AsT19 => new StringSPWNExpr<T19>(ValueAsString).AsValue();
    public T20 AsT20 => new StringSPWNExpr<T20>(ValueAsString).AsValue();
    public T21 AsT21 => new StringSPWNExpr<T21>(ValueAsString).AsValue();
    public T22 AsT22 => new StringSPWNExpr<T22>(ValueAsString).AsValue();
    public T23 AsT23 => new StringSPWNExpr<T23>(ValueAsString).AsValue();
    public T24 AsT24 => new StringSPWNExpr<T24>(ValueAsString).AsValue();
    public T25 AsT25 => new StringSPWNExpr<T25>(ValueAsString).AsValue();
    public T26 AsT26 => new StringSPWNExpr<T26>(ValueAsString).AsValue();
    public T27 AsT27 => new StringSPWNExpr<T27>(ValueAsString).AsValue();
    public T28 AsT28 => new StringSPWNExpr<T28>(ValueAsString).AsValue();
    public T29 AsT29 => new StringSPWNExpr<T29>(ValueAsString).AsValue();
    public T30 AsT30 => new StringSPWNExpr<T30>(ValueAsString).AsValue();
    public T31 AsT31 => new StringSPWNExpr<T31>(ValueAsString).AsValue();
    public T32 AsT32 => new StringSPWNExpr<T32>(ValueAsString).AsValue();
    public T33 AsT33 => new StringSPWNExpr<T33>(ValueAsString).AsValue();
    public T34 AsT34 => new StringSPWNExpr<T34>(ValueAsString).AsValue();
    public T35 AsT35 => new StringSPWNExpr<T35>(ValueAsString).AsValue();
    public T36 AsT36 => new StringSPWNExpr<T36>(ValueAsString).AsValue();
    public T37 AsT37 => new StringSPWNExpr<T37>(ValueAsString).AsValue();
    public T38 AsT38 => new StringSPWNExpr<T38>(ValueAsString).AsValue();
    public T39 AsT39 => new StringSPWNExpr<T39>(ValueAsString).AsValue();
    public T40 AsT40 => new StringSPWNExpr<T40>(ValueAsString).AsValue();

    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40>(T1 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40>(T2 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40>(T3 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40>(T4 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40>(T5 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40>(T6 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40>(T7 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40>(T8 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40>(T9 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40>(T10 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40>(T11 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40>(T12 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40>(T13 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40>(T14 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40>(T15 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40>(T16 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40>(T17 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40>(T18 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40>(T19 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40>(T20 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40>(T21 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40>(T22 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40>(T23 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40>(T24 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40>(T25 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40>(T26 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40>(T27 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40>(T28 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40>(T29 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40>(T30 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40>(T31 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40>(T32 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40>(T33 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40>(T34 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40>(T35 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40>(T36 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40>(T37 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40>(T38 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40>(T39 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40>(T40 Value) => new(Value);
}

// Note UnionTypes is NOT a Built-in type in SPWN
[SPWNType("@typeunion")]
public class UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41> : SPWNValueBase
    where T1 : SPWNValueBase
    where T2 : SPWNValueBase
    where T3 : SPWNValueBase
    where T4 : SPWNValueBase
    where T5 : SPWNValueBase
    where T6 : SPWNValueBase
    where T7 : SPWNValueBase
    where T8 : SPWNValueBase
    where T9 : SPWNValueBase
    where T10 : SPWNValueBase
    where T11 : SPWNValueBase
    where T12 : SPWNValueBase
    where T13 : SPWNValueBase
    where T14 : SPWNValueBase
    where T15 : SPWNValueBase
    where T16 : SPWNValueBase
    where T17 : SPWNValueBase
    where T18 : SPWNValueBase
    where T19 : SPWNValueBase
    where T20 : SPWNValueBase
    where T21 : SPWNValueBase
    where T22 : SPWNValueBase
    where T23 : SPWNValueBase
    where T24 : SPWNValueBase
    where T25 : SPWNValueBase
    where T26 : SPWNValueBase
    where T27 : SPWNValueBase
    where T28 : SPWNValueBase
    where T29 : SPWNValueBase
    where T30 : SPWNValueBase
    where T31 : SPWNValueBase
    where T32 : SPWNValueBase
    where T33 : SPWNValueBase
    where T34 : SPWNValueBase
    where T35 : SPWNValueBase
    where T36 : SPWNValueBase
    where T37 : SPWNValueBase
    where T38 : SPWNValueBase
    where T39 : SPWNValueBase
    where T40 : SPWNValueBase
    where T41 : SPWNValueBase
{
    public override string ValueAsString { get; protected set; }

    public UnionTypes(T1 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T2 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T3 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T4 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T5 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T6 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T7 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T8 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T9 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T10 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T11 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T12 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T13 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T14 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T15 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T16 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T17 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T18 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T19 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T20 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T21 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T22 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T23 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T24 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T25 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T26 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T27 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T28 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T29 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T30 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T31 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T32 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T33 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T34 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T35 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T36 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T37 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T38 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T39 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T40 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T41 Value) => ValueAsString = Value.ValueAsString;

    public bool IsT1 => Type == TypeIndicator.GetType<T1>();
    public bool IsT2 => Type == TypeIndicator.GetType<T2>();
    public bool IsT3 => Type == TypeIndicator.GetType<T3>();
    public bool IsT4 => Type == TypeIndicator.GetType<T4>();
    public bool IsT5 => Type == TypeIndicator.GetType<T5>();
    public bool IsT6 => Type == TypeIndicator.GetType<T6>();
    public bool IsT7 => Type == TypeIndicator.GetType<T7>();
    public bool IsT8 => Type == TypeIndicator.GetType<T8>();
    public bool IsT9 => Type == TypeIndicator.GetType<T9>();
    public bool IsT10 => Type == TypeIndicator.GetType<T10>();
    public bool IsT11 => Type == TypeIndicator.GetType<T11>();
    public bool IsT12 => Type == TypeIndicator.GetType<T12>();
    public bool IsT13 => Type == TypeIndicator.GetType<T13>();
    public bool IsT14 => Type == TypeIndicator.GetType<T14>();
    public bool IsT15 => Type == TypeIndicator.GetType<T15>();
    public bool IsT16 => Type == TypeIndicator.GetType<T16>();
    public bool IsT17 => Type == TypeIndicator.GetType<T17>();
    public bool IsT18 => Type == TypeIndicator.GetType<T18>();
    public bool IsT19 => Type == TypeIndicator.GetType<T19>();
    public bool IsT20 => Type == TypeIndicator.GetType<T20>();
    public bool IsT21 => Type == TypeIndicator.GetType<T21>();
    public bool IsT22 => Type == TypeIndicator.GetType<T22>();
    public bool IsT23 => Type == TypeIndicator.GetType<T23>();
    public bool IsT24 => Type == TypeIndicator.GetType<T24>();
    public bool IsT25 => Type == TypeIndicator.GetType<T25>();
    public bool IsT26 => Type == TypeIndicator.GetType<T26>();
    public bool IsT27 => Type == TypeIndicator.GetType<T27>();
    public bool IsT28 => Type == TypeIndicator.GetType<T28>();
    public bool IsT29 => Type == TypeIndicator.GetType<T29>();
    public bool IsT30 => Type == TypeIndicator.GetType<T30>();
    public bool IsT31 => Type == TypeIndicator.GetType<T31>();
    public bool IsT32 => Type == TypeIndicator.GetType<T32>();
    public bool IsT33 => Type == TypeIndicator.GetType<T33>();
    public bool IsT34 => Type == TypeIndicator.GetType<T34>();
    public bool IsT35 => Type == TypeIndicator.GetType<T35>();
    public bool IsT36 => Type == TypeIndicator.GetType<T36>();
    public bool IsT37 => Type == TypeIndicator.GetType<T37>();
    public bool IsT38 => Type == TypeIndicator.GetType<T38>();
    public bool IsT39 => Type == TypeIndicator.GetType<T39>();
    public bool IsT40 => Type == TypeIndicator.GetType<T40>();
    public bool IsT41 => Type == TypeIndicator.GetType<T41>();

    public T1 AsT1 => new StringSPWNExpr<T1>(ValueAsString).AsValue();
    public T2 AsT2 => new StringSPWNExpr<T2>(ValueAsString).AsValue();
    public T3 AsT3 => new StringSPWNExpr<T3>(ValueAsString).AsValue();
    public T4 AsT4 => new StringSPWNExpr<T4>(ValueAsString).AsValue();
    public T5 AsT5 => new StringSPWNExpr<T5>(ValueAsString).AsValue();
    public T6 AsT6 => new StringSPWNExpr<T6>(ValueAsString).AsValue();
    public T7 AsT7 => new StringSPWNExpr<T7>(ValueAsString).AsValue();
    public T8 AsT8 => new StringSPWNExpr<T8>(ValueAsString).AsValue();
    public T9 AsT9 => new StringSPWNExpr<T9>(ValueAsString).AsValue();
    public T10 AsT10 => new StringSPWNExpr<T10>(ValueAsString).AsValue();
    public T11 AsT11 => new StringSPWNExpr<T11>(ValueAsString).AsValue();
    public T12 AsT12 => new StringSPWNExpr<T12>(ValueAsString).AsValue();
    public T13 AsT13 => new StringSPWNExpr<T13>(ValueAsString).AsValue();
    public T14 AsT14 => new StringSPWNExpr<T14>(ValueAsString).AsValue();
    public T15 AsT15 => new StringSPWNExpr<T15>(ValueAsString).AsValue();
    public T16 AsT16 => new StringSPWNExpr<T16>(ValueAsString).AsValue();
    public T17 AsT17 => new StringSPWNExpr<T17>(ValueAsString).AsValue();
    public T18 AsT18 => new StringSPWNExpr<T18>(ValueAsString).AsValue();
    public T19 AsT19 => new StringSPWNExpr<T19>(ValueAsString).AsValue();
    public T20 AsT20 => new StringSPWNExpr<T20>(ValueAsString).AsValue();
    public T21 AsT21 => new StringSPWNExpr<T21>(ValueAsString).AsValue();
    public T22 AsT22 => new StringSPWNExpr<T22>(ValueAsString).AsValue();
    public T23 AsT23 => new StringSPWNExpr<T23>(ValueAsString).AsValue();
    public T24 AsT24 => new StringSPWNExpr<T24>(ValueAsString).AsValue();
    public T25 AsT25 => new StringSPWNExpr<T25>(ValueAsString).AsValue();
    public T26 AsT26 => new StringSPWNExpr<T26>(ValueAsString).AsValue();
    public T27 AsT27 => new StringSPWNExpr<T27>(ValueAsString).AsValue();
    public T28 AsT28 => new StringSPWNExpr<T28>(ValueAsString).AsValue();
    public T29 AsT29 => new StringSPWNExpr<T29>(ValueAsString).AsValue();
    public T30 AsT30 => new StringSPWNExpr<T30>(ValueAsString).AsValue();
    public T31 AsT31 => new StringSPWNExpr<T31>(ValueAsString).AsValue();
    public T32 AsT32 => new StringSPWNExpr<T32>(ValueAsString).AsValue();
    public T33 AsT33 => new StringSPWNExpr<T33>(ValueAsString).AsValue();
    public T34 AsT34 => new StringSPWNExpr<T34>(ValueAsString).AsValue();
    public T35 AsT35 => new StringSPWNExpr<T35>(ValueAsString).AsValue();
    public T36 AsT36 => new StringSPWNExpr<T36>(ValueAsString).AsValue();
    public T37 AsT37 => new StringSPWNExpr<T37>(ValueAsString).AsValue();
    public T38 AsT38 => new StringSPWNExpr<T38>(ValueAsString).AsValue();
    public T39 AsT39 => new StringSPWNExpr<T39>(ValueAsString).AsValue();
    public T40 AsT40 => new StringSPWNExpr<T40>(ValueAsString).AsValue();
    public T41 AsT41 => new StringSPWNExpr<T41>(ValueAsString).AsValue();

    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41>(T1 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41>(T2 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41>(T3 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41>(T4 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41>(T5 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41>(T6 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41>(T7 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41>(T8 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41>(T9 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41>(T10 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41>(T11 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41>(T12 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41>(T13 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41>(T14 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41>(T15 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41>(T16 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41>(T17 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41>(T18 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41>(T19 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41>(T20 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41>(T21 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41>(T22 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41>(T23 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41>(T24 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41>(T25 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41>(T26 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41>(T27 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41>(T28 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41>(T29 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41>(T30 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41>(T31 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41>(T32 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41>(T33 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41>(T34 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41>(T35 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41>(T36 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41>(T37 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41>(T38 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41>(T39 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41>(T40 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41>(T41 Value) => new(Value);
}

// Note UnionTypes is NOT a Built-in type in SPWN
[SPWNType("@typeunion")]
public class UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42> : SPWNValueBase
    where T1 : SPWNValueBase
    where T2 : SPWNValueBase
    where T3 : SPWNValueBase
    where T4 : SPWNValueBase
    where T5 : SPWNValueBase
    where T6 : SPWNValueBase
    where T7 : SPWNValueBase
    where T8 : SPWNValueBase
    where T9 : SPWNValueBase
    where T10 : SPWNValueBase
    where T11 : SPWNValueBase
    where T12 : SPWNValueBase
    where T13 : SPWNValueBase
    where T14 : SPWNValueBase
    where T15 : SPWNValueBase
    where T16 : SPWNValueBase
    where T17 : SPWNValueBase
    where T18 : SPWNValueBase
    where T19 : SPWNValueBase
    where T20 : SPWNValueBase
    where T21 : SPWNValueBase
    where T22 : SPWNValueBase
    where T23 : SPWNValueBase
    where T24 : SPWNValueBase
    where T25 : SPWNValueBase
    where T26 : SPWNValueBase
    where T27 : SPWNValueBase
    where T28 : SPWNValueBase
    where T29 : SPWNValueBase
    where T30 : SPWNValueBase
    where T31 : SPWNValueBase
    where T32 : SPWNValueBase
    where T33 : SPWNValueBase
    where T34 : SPWNValueBase
    where T35 : SPWNValueBase
    where T36 : SPWNValueBase
    where T37 : SPWNValueBase
    where T38 : SPWNValueBase
    where T39 : SPWNValueBase
    where T40 : SPWNValueBase
    where T41 : SPWNValueBase
    where T42 : SPWNValueBase
{
    public override string ValueAsString { get; protected set; }

    public UnionTypes(T1 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T2 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T3 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T4 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T5 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T6 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T7 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T8 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T9 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T10 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T11 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T12 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T13 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T14 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T15 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T16 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T17 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T18 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T19 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T20 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T21 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T22 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T23 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T24 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T25 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T26 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T27 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T28 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T29 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T30 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T31 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T32 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T33 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T34 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T35 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T36 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T37 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T38 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T39 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T40 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T41 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T42 Value) => ValueAsString = Value.ValueAsString;

    public bool IsT1 => Type == TypeIndicator.GetType<T1>();
    public bool IsT2 => Type == TypeIndicator.GetType<T2>();
    public bool IsT3 => Type == TypeIndicator.GetType<T3>();
    public bool IsT4 => Type == TypeIndicator.GetType<T4>();
    public bool IsT5 => Type == TypeIndicator.GetType<T5>();
    public bool IsT6 => Type == TypeIndicator.GetType<T6>();
    public bool IsT7 => Type == TypeIndicator.GetType<T7>();
    public bool IsT8 => Type == TypeIndicator.GetType<T8>();
    public bool IsT9 => Type == TypeIndicator.GetType<T9>();
    public bool IsT10 => Type == TypeIndicator.GetType<T10>();
    public bool IsT11 => Type == TypeIndicator.GetType<T11>();
    public bool IsT12 => Type == TypeIndicator.GetType<T12>();
    public bool IsT13 => Type == TypeIndicator.GetType<T13>();
    public bool IsT14 => Type == TypeIndicator.GetType<T14>();
    public bool IsT15 => Type == TypeIndicator.GetType<T15>();
    public bool IsT16 => Type == TypeIndicator.GetType<T16>();
    public bool IsT17 => Type == TypeIndicator.GetType<T17>();
    public bool IsT18 => Type == TypeIndicator.GetType<T18>();
    public bool IsT19 => Type == TypeIndicator.GetType<T19>();
    public bool IsT20 => Type == TypeIndicator.GetType<T20>();
    public bool IsT21 => Type == TypeIndicator.GetType<T21>();
    public bool IsT22 => Type == TypeIndicator.GetType<T22>();
    public bool IsT23 => Type == TypeIndicator.GetType<T23>();
    public bool IsT24 => Type == TypeIndicator.GetType<T24>();
    public bool IsT25 => Type == TypeIndicator.GetType<T25>();
    public bool IsT26 => Type == TypeIndicator.GetType<T26>();
    public bool IsT27 => Type == TypeIndicator.GetType<T27>();
    public bool IsT28 => Type == TypeIndicator.GetType<T28>();
    public bool IsT29 => Type == TypeIndicator.GetType<T29>();
    public bool IsT30 => Type == TypeIndicator.GetType<T30>();
    public bool IsT31 => Type == TypeIndicator.GetType<T31>();
    public bool IsT32 => Type == TypeIndicator.GetType<T32>();
    public bool IsT33 => Type == TypeIndicator.GetType<T33>();
    public bool IsT34 => Type == TypeIndicator.GetType<T34>();
    public bool IsT35 => Type == TypeIndicator.GetType<T35>();
    public bool IsT36 => Type == TypeIndicator.GetType<T36>();
    public bool IsT37 => Type == TypeIndicator.GetType<T37>();
    public bool IsT38 => Type == TypeIndicator.GetType<T38>();
    public bool IsT39 => Type == TypeIndicator.GetType<T39>();
    public bool IsT40 => Type == TypeIndicator.GetType<T40>();
    public bool IsT41 => Type == TypeIndicator.GetType<T41>();
    public bool IsT42 => Type == TypeIndicator.GetType<T42>();

    public T1 AsT1 => new StringSPWNExpr<T1>(ValueAsString).AsValue();
    public T2 AsT2 => new StringSPWNExpr<T2>(ValueAsString).AsValue();
    public T3 AsT3 => new StringSPWNExpr<T3>(ValueAsString).AsValue();
    public T4 AsT4 => new StringSPWNExpr<T4>(ValueAsString).AsValue();
    public T5 AsT5 => new StringSPWNExpr<T5>(ValueAsString).AsValue();
    public T6 AsT6 => new StringSPWNExpr<T6>(ValueAsString).AsValue();
    public T7 AsT7 => new StringSPWNExpr<T7>(ValueAsString).AsValue();
    public T8 AsT8 => new StringSPWNExpr<T8>(ValueAsString).AsValue();
    public T9 AsT9 => new StringSPWNExpr<T9>(ValueAsString).AsValue();
    public T10 AsT10 => new StringSPWNExpr<T10>(ValueAsString).AsValue();
    public T11 AsT11 => new StringSPWNExpr<T11>(ValueAsString).AsValue();
    public T12 AsT12 => new StringSPWNExpr<T12>(ValueAsString).AsValue();
    public T13 AsT13 => new StringSPWNExpr<T13>(ValueAsString).AsValue();
    public T14 AsT14 => new StringSPWNExpr<T14>(ValueAsString).AsValue();
    public T15 AsT15 => new StringSPWNExpr<T15>(ValueAsString).AsValue();
    public T16 AsT16 => new StringSPWNExpr<T16>(ValueAsString).AsValue();
    public T17 AsT17 => new StringSPWNExpr<T17>(ValueAsString).AsValue();
    public T18 AsT18 => new StringSPWNExpr<T18>(ValueAsString).AsValue();
    public T19 AsT19 => new StringSPWNExpr<T19>(ValueAsString).AsValue();
    public T20 AsT20 => new StringSPWNExpr<T20>(ValueAsString).AsValue();
    public T21 AsT21 => new StringSPWNExpr<T21>(ValueAsString).AsValue();
    public T22 AsT22 => new StringSPWNExpr<T22>(ValueAsString).AsValue();
    public T23 AsT23 => new StringSPWNExpr<T23>(ValueAsString).AsValue();
    public T24 AsT24 => new StringSPWNExpr<T24>(ValueAsString).AsValue();
    public T25 AsT25 => new StringSPWNExpr<T25>(ValueAsString).AsValue();
    public T26 AsT26 => new StringSPWNExpr<T26>(ValueAsString).AsValue();
    public T27 AsT27 => new StringSPWNExpr<T27>(ValueAsString).AsValue();
    public T28 AsT28 => new StringSPWNExpr<T28>(ValueAsString).AsValue();
    public T29 AsT29 => new StringSPWNExpr<T29>(ValueAsString).AsValue();
    public T30 AsT30 => new StringSPWNExpr<T30>(ValueAsString).AsValue();
    public T31 AsT31 => new StringSPWNExpr<T31>(ValueAsString).AsValue();
    public T32 AsT32 => new StringSPWNExpr<T32>(ValueAsString).AsValue();
    public T33 AsT33 => new StringSPWNExpr<T33>(ValueAsString).AsValue();
    public T34 AsT34 => new StringSPWNExpr<T34>(ValueAsString).AsValue();
    public T35 AsT35 => new StringSPWNExpr<T35>(ValueAsString).AsValue();
    public T36 AsT36 => new StringSPWNExpr<T36>(ValueAsString).AsValue();
    public T37 AsT37 => new StringSPWNExpr<T37>(ValueAsString).AsValue();
    public T38 AsT38 => new StringSPWNExpr<T38>(ValueAsString).AsValue();
    public T39 AsT39 => new StringSPWNExpr<T39>(ValueAsString).AsValue();
    public T40 AsT40 => new StringSPWNExpr<T40>(ValueAsString).AsValue();
    public T41 AsT41 => new StringSPWNExpr<T41>(ValueAsString).AsValue();
    public T42 AsT42 => new StringSPWNExpr<T42>(ValueAsString).AsValue();

    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42>(T1 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42>(T2 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42>(T3 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42>(T4 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42>(T5 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42>(T6 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42>(T7 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42>(T8 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42>(T9 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42>(T10 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42>(T11 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42>(T12 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42>(T13 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42>(T14 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42>(T15 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42>(T16 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42>(T17 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42>(T18 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42>(T19 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42>(T20 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42>(T21 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42>(T22 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42>(T23 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42>(T24 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42>(T25 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42>(T26 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42>(T27 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42>(T28 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42>(T29 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42>(T30 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42>(T31 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42>(T32 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42>(T33 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42>(T34 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42>(T35 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42>(T36 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42>(T37 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42>(T38 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42>(T39 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42>(T40 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42>(T41 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42>(T42 Value) => new(Value);
}

// Note UnionTypes is NOT a Built-in type in SPWN
[SPWNType("@typeunion")]
public class UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43> : SPWNValueBase
    where T1 : SPWNValueBase
    where T2 : SPWNValueBase
    where T3 : SPWNValueBase
    where T4 : SPWNValueBase
    where T5 : SPWNValueBase
    where T6 : SPWNValueBase
    where T7 : SPWNValueBase
    where T8 : SPWNValueBase
    where T9 : SPWNValueBase
    where T10 : SPWNValueBase
    where T11 : SPWNValueBase
    where T12 : SPWNValueBase
    where T13 : SPWNValueBase
    where T14 : SPWNValueBase
    where T15 : SPWNValueBase
    where T16 : SPWNValueBase
    where T17 : SPWNValueBase
    where T18 : SPWNValueBase
    where T19 : SPWNValueBase
    where T20 : SPWNValueBase
    where T21 : SPWNValueBase
    where T22 : SPWNValueBase
    where T23 : SPWNValueBase
    where T24 : SPWNValueBase
    where T25 : SPWNValueBase
    where T26 : SPWNValueBase
    where T27 : SPWNValueBase
    where T28 : SPWNValueBase
    where T29 : SPWNValueBase
    where T30 : SPWNValueBase
    where T31 : SPWNValueBase
    where T32 : SPWNValueBase
    where T33 : SPWNValueBase
    where T34 : SPWNValueBase
    where T35 : SPWNValueBase
    where T36 : SPWNValueBase
    where T37 : SPWNValueBase
    where T38 : SPWNValueBase
    where T39 : SPWNValueBase
    where T40 : SPWNValueBase
    where T41 : SPWNValueBase
    where T42 : SPWNValueBase
    where T43 : SPWNValueBase
{
    public override string ValueAsString { get; protected set; }

    public UnionTypes(T1 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T2 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T3 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T4 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T5 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T6 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T7 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T8 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T9 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T10 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T11 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T12 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T13 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T14 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T15 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T16 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T17 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T18 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T19 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T20 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T21 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T22 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T23 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T24 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T25 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T26 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T27 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T28 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T29 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T30 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T31 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T32 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T33 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T34 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T35 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T36 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T37 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T38 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T39 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T40 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T41 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T42 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T43 Value) => ValueAsString = Value.ValueAsString;

    public bool IsT1 => Type == TypeIndicator.GetType<T1>();
    public bool IsT2 => Type == TypeIndicator.GetType<T2>();
    public bool IsT3 => Type == TypeIndicator.GetType<T3>();
    public bool IsT4 => Type == TypeIndicator.GetType<T4>();
    public bool IsT5 => Type == TypeIndicator.GetType<T5>();
    public bool IsT6 => Type == TypeIndicator.GetType<T6>();
    public bool IsT7 => Type == TypeIndicator.GetType<T7>();
    public bool IsT8 => Type == TypeIndicator.GetType<T8>();
    public bool IsT9 => Type == TypeIndicator.GetType<T9>();
    public bool IsT10 => Type == TypeIndicator.GetType<T10>();
    public bool IsT11 => Type == TypeIndicator.GetType<T11>();
    public bool IsT12 => Type == TypeIndicator.GetType<T12>();
    public bool IsT13 => Type == TypeIndicator.GetType<T13>();
    public bool IsT14 => Type == TypeIndicator.GetType<T14>();
    public bool IsT15 => Type == TypeIndicator.GetType<T15>();
    public bool IsT16 => Type == TypeIndicator.GetType<T16>();
    public bool IsT17 => Type == TypeIndicator.GetType<T17>();
    public bool IsT18 => Type == TypeIndicator.GetType<T18>();
    public bool IsT19 => Type == TypeIndicator.GetType<T19>();
    public bool IsT20 => Type == TypeIndicator.GetType<T20>();
    public bool IsT21 => Type == TypeIndicator.GetType<T21>();
    public bool IsT22 => Type == TypeIndicator.GetType<T22>();
    public bool IsT23 => Type == TypeIndicator.GetType<T23>();
    public bool IsT24 => Type == TypeIndicator.GetType<T24>();
    public bool IsT25 => Type == TypeIndicator.GetType<T25>();
    public bool IsT26 => Type == TypeIndicator.GetType<T26>();
    public bool IsT27 => Type == TypeIndicator.GetType<T27>();
    public bool IsT28 => Type == TypeIndicator.GetType<T28>();
    public bool IsT29 => Type == TypeIndicator.GetType<T29>();
    public bool IsT30 => Type == TypeIndicator.GetType<T30>();
    public bool IsT31 => Type == TypeIndicator.GetType<T31>();
    public bool IsT32 => Type == TypeIndicator.GetType<T32>();
    public bool IsT33 => Type == TypeIndicator.GetType<T33>();
    public bool IsT34 => Type == TypeIndicator.GetType<T34>();
    public bool IsT35 => Type == TypeIndicator.GetType<T35>();
    public bool IsT36 => Type == TypeIndicator.GetType<T36>();
    public bool IsT37 => Type == TypeIndicator.GetType<T37>();
    public bool IsT38 => Type == TypeIndicator.GetType<T38>();
    public bool IsT39 => Type == TypeIndicator.GetType<T39>();
    public bool IsT40 => Type == TypeIndicator.GetType<T40>();
    public bool IsT41 => Type == TypeIndicator.GetType<T41>();
    public bool IsT42 => Type == TypeIndicator.GetType<T42>();
    public bool IsT43 => Type == TypeIndicator.GetType<T43>();

    public T1 AsT1 => new StringSPWNExpr<T1>(ValueAsString).AsValue();
    public T2 AsT2 => new StringSPWNExpr<T2>(ValueAsString).AsValue();
    public T3 AsT3 => new StringSPWNExpr<T3>(ValueAsString).AsValue();
    public T4 AsT4 => new StringSPWNExpr<T4>(ValueAsString).AsValue();
    public T5 AsT5 => new StringSPWNExpr<T5>(ValueAsString).AsValue();
    public T6 AsT6 => new StringSPWNExpr<T6>(ValueAsString).AsValue();
    public T7 AsT7 => new StringSPWNExpr<T7>(ValueAsString).AsValue();
    public T8 AsT8 => new StringSPWNExpr<T8>(ValueAsString).AsValue();
    public T9 AsT9 => new StringSPWNExpr<T9>(ValueAsString).AsValue();
    public T10 AsT10 => new StringSPWNExpr<T10>(ValueAsString).AsValue();
    public T11 AsT11 => new StringSPWNExpr<T11>(ValueAsString).AsValue();
    public T12 AsT12 => new StringSPWNExpr<T12>(ValueAsString).AsValue();
    public T13 AsT13 => new StringSPWNExpr<T13>(ValueAsString).AsValue();
    public T14 AsT14 => new StringSPWNExpr<T14>(ValueAsString).AsValue();
    public T15 AsT15 => new StringSPWNExpr<T15>(ValueAsString).AsValue();
    public T16 AsT16 => new StringSPWNExpr<T16>(ValueAsString).AsValue();
    public T17 AsT17 => new StringSPWNExpr<T17>(ValueAsString).AsValue();
    public T18 AsT18 => new StringSPWNExpr<T18>(ValueAsString).AsValue();
    public T19 AsT19 => new StringSPWNExpr<T19>(ValueAsString).AsValue();
    public T20 AsT20 => new StringSPWNExpr<T20>(ValueAsString).AsValue();
    public T21 AsT21 => new StringSPWNExpr<T21>(ValueAsString).AsValue();
    public T22 AsT22 => new StringSPWNExpr<T22>(ValueAsString).AsValue();
    public T23 AsT23 => new StringSPWNExpr<T23>(ValueAsString).AsValue();
    public T24 AsT24 => new StringSPWNExpr<T24>(ValueAsString).AsValue();
    public T25 AsT25 => new StringSPWNExpr<T25>(ValueAsString).AsValue();
    public T26 AsT26 => new StringSPWNExpr<T26>(ValueAsString).AsValue();
    public T27 AsT27 => new StringSPWNExpr<T27>(ValueAsString).AsValue();
    public T28 AsT28 => new StringSPWNExpr<T28>(ValueAsString).AsValue();
    public T29 AsT29 => new StringSPWNExpr<T29>(ValueAsString).AsValue();
    public T30 AsT30 => new StringSPWNExpr<T30>(ValueAsString).AsValue();
    public T31 AsT31 => new StringSPWNExpr<T31>(ValueAsString).AsValue();
    public T32 AsT32 => new StringSPWNExpr<T32>(ValueAsString).AsValue();
    public T33 AsT33 => new StringSPWNExpr<T33>(ValueAsString).AsValue();
    public T34 AsT34 => new StringSPWNExpr<T34>(ValueAsString).AsValue();
    public T35 AsT35 => new StringSPWNExpr<T35>(ValueAsString).AsValue();
    public T36 AsT36 => new StringSPWNExpr<T36>(ValueAsString).AsValue();
    public T37 AsT37 => new StringSPWNExpr<T37>(ValueAsString).AsValue();
    public T38 AsT38 => new StringSPWNExpr<T38>(ValueAsString).AsValue();
    public T39 AsT39 => new StringSPWNExpr<T39>(ValueAsString).AsValue();
    public T40 AsT40 => new StringSPWNExpr<T40>(ValueAsString).AsValue();
    public T41 AsT41 => new StringSPWNExpr<T41>(ValueAsString).AsValue();
    public T42 AsT42 => new StringSPWNExpr<T42>(ValueAsString).AsValue();
    public T43 AsT43 => new StringSPWNExpr<T43>(ValueAsString).AsValue();

    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43>(T1 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43>(T2 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43>(T3 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43>(T4 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43>(T5 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43>(T6 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43>(T7 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43>(T8 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43>(T9 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43>(T10 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43>(T11 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43>(T12 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43>(T13 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43>(T14 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43>(T15 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43>(T16 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43>(T17 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43>(T18 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43>(T19 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43>(T20 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43>(T21 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43>(T22 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43>(T23 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43>(T24 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43>(T25 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43>(T26 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43>(T27 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43>(T28 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43>(T29 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43>(T30 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43>(T31 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43>(T32 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43>(T33 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43>(T34 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43>(T35 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43>(T36 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43>(T37 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43>(T38 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43>(T39 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43>(T40 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43>(T41 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43>(T42 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43>(T43 Value) => new(Value);
}

// Note UnionTypes is NOT a Built-in type in SPWN
[SPWNType("@typeunion")]
public class UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44> : SPWNValueBase
    where T1 : SPWNValueBase
    where T2 : SPWNValueBase
    where T3 : SPWNValueBase
    where T4 : SPWNValueBase
    where T5 : SPWNValueBase
    where T6 : SPWNValueBase
    where T7 : SPWNValueBase
    where T8 : SPWNValueBase
    where T9 : SPWNValueBase
    where T10 : SPWNValueBase
    where T11 : SPWNValueBase
    where T12 : SPWNValueBase
    where T13 : SPWNValueBase
    where T14 : SPWNValueBase
    where T15 : SPWNValueBase
    where T16 : SPWNValueBase
    where T17 : SPWNValueBase
    where T18 : SPWNValueBase
    where T19 : SPWNValueBase
    where T20 : SPWNValueBase
    where T21 : SPWNValueBase
    where T22 : SPWNValueBase
    where T23 : SPWNValueBase
    where T24 : SPWNValueBase
    where T25 : SPWNValueBase
    where T26 : SPWNValueBase
    where T27 : SPWNValueBase
    where T28 : SPWNValueBase
    where T29 : SPWNValueBase
    where T30 : SPWNValueBase
    where T31 : SPWNValueBase
    where T32 : SPWNValueBase
    where T33 : SPWNValueBase
    where T34 : SPWNValueBase
    where T35 : SPWNValueBase
    where T36 : SPWNValueBase
    where T37 : SPWNValueBase
    where T38 : SPWNValueBase
    where T39 : SPWNValueBase
    where T40 : SPWNValueBase
    where T41 : SPWNValueBase
    where T42 : SPWNValueBase
    where T43 : SPWNValueBase
    where T44 : SPWNValueBase
{
    public override string ValueAsString { get; protected set; }

    public UnionTypes(T1 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T2 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T3 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T4 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T5 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T6 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T7 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T8 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T9 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T10 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T11 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T12 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T13 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T14 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T15 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T16 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T17 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T18 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T19 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T20 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T21 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T22 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T23 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T24 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T25 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T26 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T27 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T28 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T29 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T30 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T31 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T32 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T33 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T34 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T35 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T36 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T37 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T38 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T39 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T40 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T41 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T42 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T43 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T44 Value) => ValueAsString = Value.ValueAsString;

    public bool IsT1 => Type == TypeIndicator.GetType<T1>();
    public bool IsT2 => Type == TypeIndicator.GetType<T2>();
    public bool IsT3 => Type == TypeIndicator.GetType<T3>();
    public bool IsT4 => Type == TypeIndicator.GetType<T4>();
    public bool IsT5 => Type == TypeIndicator.GetType<T5>();
    public bool IsT6 => Type == TypeIndicator.GetType<T6>();
    public bool IsT7 => Type == TypeIndicator.GetType<T7>();
    public bool IsT8 => Type == TypeIndicator.GetType<T8>();
    public bool IsT9 => Type == TypeIndicator.GetType<T9>();
    public bool IsT10 => Type == TypeIndicator.GetType<T10>();
    public bool IsT11 => Type == TypeIndicator.GetType<T11>();
    public bool IsT12 => Type == TypeIndicator.GetType<T12>();
    public bool IsT13 => Type == TypeIndicator.GetType<T13>();
    public bool IsT14 => Type == TypeIndicator.GetType<T14>();
    public bool IsT15 => Type == TypeIndicator.GetType<T15>();
    public bool IsT16 => Type == TypeIndicator.GetType<T16>();
    public bool IsT17 => Type == TypeIndicator.GetType<T17>();
    public bool IsT18 => Type == TypeIndicator.GetType<T18>();
    public bool IsT19 => Type == TypeIndicator.GetType<T19>();
    public bool IsT20 => Type == TypeIndicator.GetType<T20>();
    public bool IsT21 => Type == TypeIndicator.GetType<T21>();
    public bool IsT22 => Type == TypeIndicator.GetType<T22>();
    public bool IsT23 => Type == TypeIndicator.GetType<T23>();
    public bool IsT24 => Type == TypeIndicator.GetType<T24>();
    public bool IsT25 => Type == TypeIndicator.GetType<T25>();
    public bool IsT26 => Type == TypeIndicator.GetType<T26>();
    public bool IsT27 => Type == TypeIndicator.GetType<T27>();
    public bool IsT28 => Type == TypeIndicator.GetType<T28>();
    public bool IsT29 => Type == TypeIndicator.GetType<T29>();
    public bool IsT30 => Type == TypeIndicator.GetType<T30>();
    public bool IsT31 => Type == TypeIndicator.GetType<T31>();
    public bool IsT32 => Type == TypeIndicator.GetType<T32>();
    public bool IsT33 => Type == TypeIndicator.GetType<T33>();
    public bool IsT34 => Type == TypeIndicator.GetType<T34>();
    public bool IsT35 => Type == TypeIndicator.GetType<T35>();
    public bool IsT36 => Type == TypeIndicator.GetType<T36>();
    public bool IsT37 => Type == TypeIndicator.GetType<T37>();
    public bool IsT38 => Type == TypeIndicator.GetType<T38>();
    public bool IsT39 => Type == TypeIndicator.GetType<T39>();
    public bool IsT40 => Type == TypeIndicator.GetType<T40>();
    public bool IsT41 => Type == TypeIndicator.GetType<T41>();
    public bool IsT42 => Type == TypeIndicator.GetType<T42>();
    public bool IsT43 => Type == TypeIndicator.GetType<T43>();
    public bool IsT44 => Type == TypeIndicator.GetType<T44>();

    public T1 AsT1 => new StringSPWNExpr<T1>(ValueAsString).AsValue();
    public T2 AsT2 => new StringSPWNExpr<T2>(ValueAsString).AsValue();
    public T3 AsT3 => new StringSPWNExpr<T3>(ValueAsString).AsValue();
    public T4 AsT4 => new StringSPWNExpr<T4>(ValueAsString).AsValue();
    public T5 AsT5 => new StringSPWNExpr<T5>(ValueAsString).AsValue();
    public T6 AsT6 => new StringSPWNExpr<T6>(ValueAsString).AsValue();
    public T7 AsT7 => new StringSPWNExpr<T7>(ValueAsString).AsValue();
    public T8 AsT8 => new StringSPWNExpr<T8>(ValueAsString).AsValue();
    public T9 AsT9 => new StringSPWNExpr<T9>(ValueAsString).AsValue();
    public T10 AsT10 => new StringSPWNExpr<T10>(ValueAsString).AsValue();
    public T11 AsT11 => new StringSPWNExpr<T11>(ValueAsString).AsValue();
    public T12 AsT12 => new StringSPWNExpr<T12>(ValueAsString).AsValue();
    public T13 AsT13 => new StringSPWNExpr<T13>(ValueAsString).AsValue();
    public T14 AsT14 => new StringSPWNExpr<T14>(ValueAsString).AsValue();
    public T15 AsT15 => new StringSPWNExpr<T15>(ValueAsString).AsValue();
    public T16 AsT16 => new StringSPWNExpr<T16>(ValueAsString).AsValue();
    public T17 AsT17 => new StringSPWNExpr<T17>(ValueAsString).AsValue();
    public T18 AsT18 => new StringSPWNExpr<T18>(ValueAsString).AsValue();
    public T19 AsT19 => new StringSPWNExpr<T19>(ValueAsString).AsValue();
    public T20 AsT20 => new StringSPWNExpr<T20>(ValueAsString).AsValue();
    public T21 AsT21 => new StringSPWNExpr<T21>(ValueAsString).AsValue();
    public T22 AsT22 => new StringSPWNExpr<T22>(ValueAsString).AsValue();
    public T23 AsT23 => new StringSPWNExpr<T23>(ValueAsString).AsValue();
    public T24 AsT24 => new StringSPWNExpr<T24>(ValueAsString).AsValue();
    public T25 AsT25 => new StringSPWNExpr<T25>(ValueAsString).AsValue();
    public T26 AsT26 => new StringSPWNExpr<T26>(ValueAsString).AsValue();
    public T27 AsT27 => new StringSPWNExpr<T27>(ValueAsString).AsValue();
    public T28 AsT28 => new StringSPWNExpr<T28>(ValueAsString).AsValue();
    public T29 AsT29 => new StringSPWNExpr<T29>(ValueAsString).AsValue();
    public T30 AsT30 => new StringSPWNExpr<T30>(ValueAsString).AsValue();
    public T31 AsT31 => new StringSPWNExpr<T31>(ValueAsString).AsValue();
    public T32 AsT32 => new StringSPWNExpr<T32>(ValueAsString).AsValue();
    public T33 AsT33 => new StringSPWNExpr<T33>(ValueAsString).AsValue();
    public T34 AsT34 => new StringSPWNExpr<T34>(ValueAsString).AsValue();
    public T35 AsT35 => new StringSPWNExpr<T35>(ValueAsString).AsValue();
    public T36 AsT36 => new StringSPWNExpr<T36>(ValueAsString).AsValue();
    public T37 AsT37 => new StringSPWNExpr<T37>(ValueAsString).AsValue();
    public T38 AsT38 => new StringSPWNExpr<T38>(ValueAsString).AsValue();
    public T39 AsT39 => new StringSPWNExpr<T39>(ValueAsString).AsValue();
    public T40 AsT40 => new StringSPWNExpr<T40>(ValueAsString).AsValue();
    public T41 AsT41 => new StringSPWNExpr<T41>(ValueAsString).AsValue();
    public T42 AsT42 => new StringSPWNExpr<T42>(ValueAsString).AsValue();
    public T43 AsT43 => new StringSPWNExpr<T43>(ValueAsString).AsValue();
    public T44 AsT44 => new StringSPWNExpr<T44>(ValueAsString).AsValue();

    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44>(T1 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44>(T2 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44>(T3 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44>(T4 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44>(T5 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44>(T6 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44>(T7 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44>(T8 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44>(T9 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44>(T10 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44>(T11 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44>(T12 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44>(T13 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44>(T14 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44>(T15 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44>(T16 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44>(T17 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44>(T18 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44>(T19 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44>(T20 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44>(T21 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44>(T22 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44>(T23 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44>(T24 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44>(T25 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44>(T26 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44>(T27 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44>(T28 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44>(T29 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44>(T30 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44>(T31 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44>(T32 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44>(T33 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44>(T34 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44>(T35 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44>(T36 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44>(T37 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44>(T38 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44>(T39 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44>(T40 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44>(T41 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44>(T42 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44>(T43 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44>(T44 Value) => new(Value);
}

// Note UnionTypes is NOT a Built-in type in SPWN
[SPWNType("@typeunion")]
public class UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45> : SPWNValueBase
    where T1 : SPWNValueBase
    where T2 : SPWNValueBase
    where T3 : SPWNValueBase
    where T4 : SPWNValueBase
    where T5 : SPWNValueBase
    where T6 : SPWNValueBase
    where T7 : SPWNValueBase
    where T8 : SPWNValueBase
    where T9 : SPWNValueBase
    where T10 : SPWNValueBase
    where T11 : SPWNValueBase
    where T12 : SPWNValueBase
    where T13 : SPWNValueBase
    where T14 : SPWNValueBase
    where T15 : SPWNValueBase
    where T16 : SPWNValueBase
    where T17 : SPWNValueBase
    where T18 : SPWNValueBase
    where T19 : SPWNValueBase
    where T20 : SPWNValueBase
    where T21 : SPWNValueBase
    where T22 : SPWNValueBase
    where T23 : SPWNValueBase
    where T24 : SPWNValueBase
    where T25 : SPWNValueBase
    where T26 : SPWNValueBase
    where T27 : SPWNValueBase
    where T28 : SPWNValueBase
    where T29 : SPWNValueBase
    where T30 : SPWNValueBase
    where T31 : SPWNValueBase
    where T32 : SPWNValueBase
    where T33 : SPWNValueBase
    where T34 : SPWNValueBase
    where T35 : SPWNValueBase
    where T36 : SPWNValueBase
    where T37 : SPWNValueBase
    where T38 : SPWNValueBase
    where T39 : SPWNValueBase
    where T40 : SPWNValueBase
    where T41 : SPWNValueBase
    where T42 : SPWNValueBase
    where T43 : SPWNValueBase
    where T44 : SPWNValueBase
    where T45 : SPWNValueBase
{
    public override string ValueAsString { get; protected set; }

    public UnionTypes(T1 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T2 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T3 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T4 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T5 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T6 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T7 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T8 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T9 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T10 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T11 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T12 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T13 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T14 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T15 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T16 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T17 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T18 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T19 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T20 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T21 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T22 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T23 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T24 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T25 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T26 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T27 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T28 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T29 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T30 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T31 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T32 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T33 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T34 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T35 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T36 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T37 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T38 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T39 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T40 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T41 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T42 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T43 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T44 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T45 Value) => ValueAsString = Value.ValueAsString;

    public bool IsT1 => Type == TypeIndicator.GetType<T1>();
    public bool IsT2 => Type == TypeIndicator.GetType<T2>();
    public bool IsT3 => Type == TypeIndicator.GetType<T3>();
    public bool IsT4 => Type == TypeIndicator.GetType<T4>();
    public bool IsT5 => Type == TypeIndicator.GetType<T5>();
    public bool IsT6 => Type == TypeIndicator.GetType<T6>();
    public bool IsT7 => Type == TypeIndicator.GetType<T7>();
    public bool IsT8 => Type == TypeIndicator.GetType<T8>();
    public bool IsT9 => Type == TypeIndicator.GetType<T9>();
    public bool IsT10 => Type == TypeIndicator.GetType<T10>();
    public bool IsT11 => Type == TypeIndicator.GetType<T11>();
    public bool IsT12 => Type == TypeIndicator.GetType<T12>();
    public bool IsT13 => Type == TypeIndicator.GetType<T13>();
    public bool IsT14 => Type == TypeIndicator.GetType<T14>();
    public bool IsT15 => Type == TypeIndicator.GetType<T15>();
    public bool IsT16 => Type == TypeIndicator.GetType<T16>();
    public bool IsT17 => Type == TypeIndicator.GetType<T17>();
    public bool IsT18 => Type == TypeIndicator.GetType<T18>();
    public bool IsT19 => Type == TypeIndicator.GetType<T19>();
    public bool IsT20 => Type == TypeIndicator.GetType<T20>();
    public bool IsT21 => Type == TypeIndicator.GetType<T21>();
    public bool IsT22 => Type == TypeIndicator.GetType<T22>();
    public bool IsT23 => Type == TypeIndicator.GetType<T23>();
    public bool IsT24 => Type == TypeIndicator.GetType<T24>();
    public bool IsT25 => Type == TypeIndicator.GetType<T25>();
    public bool IsT26 => Type == TypeIndicator.GetType<T26>();
    public bool IsT27 => Type == TypeIndicator.GetType<T27>();
    public bool IsT28 => Type == TypeIndicator.GetType<T28>();
    public bool IsT29 => Type == TypeIndicator.GetType<T29>();
    public bool IsT30 => Type == TypeIndicator.GetType<T30>();
    public bool IsT31 => Type == TypeIndicator.GetType<T31>();
    public bool IsT32 => Type == TypeIndicator.GetType<T32>();
    public bool IsT33 => Type == TypeIndicator.GetType<T33>();
    public bool IsT34 => Type == TypeIndicator.GetType<T34>();
    public bool IsT35 => Type == TypeIndicator.GetType<T35>();
    public bool IsT36 => Type == TypeIndicator.GetType<T36>();
    public bool IsT37 => Type == TypeIndicator.GetType<T37>();
    public bool IsT38 => Type == TypeIndicator.GetType<T38>();
    public bool IsT39 => Type == TypeIndicator.GetType<T39>();
    public bool IsT40 => Type == TypeIndicator.GetType<T40>();
    public bool IsT41 => Type == TypeIndicator.GetType<T41>();
    public bool IsT42 => Type == TypeIndicator.GetType<T42>();
    public bool IsT43 => Type == TypeIndicator.GetType<T43>();
    public bool IsT44 => Type == TypeIndicator.GetType<T44>();
    public bool IsT45 => Type == TypeIndicator.GetType<T45>();

    public T1 AsT1 => new StringSPWNExpr<T1>(ValueAsString).AsValue();
    public T2 AsT2 => new StringSPWNExpr<T2>(ValueAsString).AsValue();
    public T3 AsT3 => new StringSPWNExpr<T3>(ValueAsString).AsValue();
    public T4 AsT4 => new StringSPWNExpr<T4>(ValueAsString).AsValue();
    public T5 AsT5 => new StringSPWNExpr<T5>(ValueAsString).AsValue();
    public T6 AsT6 => new StringSPWNExpr<T6>(ValueAsString).AsValue();
    public T7 AsT7 => new StringSPWNExpr<T7>(ValueAsString).AsValue();
    public T8 AsT8 => new StringSPWNExpr<T8>(ValueAsString).AsValue();
    public T9 AsT9 => new StringSPWNExpr<T9>(ValueAsString).AsValue();
    public T10 AsT10 => new StringSPWNExpr<T10>(ValueAsString).AsValue();
    public T11 AsT11 => new StringSPWNExpr<T11>(ValueAsString).AsValue();
    public T12 AsT12 => new StringSPWNExpr<T12>(ValueAsString).AsValue();
    public T13 AsT13 => new StringSPWNExpr<T13>(ValueAsString).AsValue();
    public T14 AsT14 => new StringSPWNExpr<T14>(ValueAsString).AsValue();
    public T15 AsT15 => new StringSPWNExpr<T15>(ValueAsString).AsValue();
    public T16 AsT16 => new StringSPWNExpr<T16>(ValueAsString).AsValue();
    public T17 AsT17 => new StringSPWNExpr<T17>(ValueAsString).AsValue();
    public T18 AsT18 => new StringSPWNExpr<T18>(ValueAsString).AsValue();
    public T19 AsT19 => new StringSPWNExpr<T19>(ValueAsString).AsValue();
    public T20 AsT20 => new StringSPWNExpr<T20>(ValueAsString).AsValue();
    public T21 AsT21 => new StringSPWNExpr<T21>(ValueAsString).AsValue();
    public T22 AsT22 => new StringSPWNExpr<T22>(ValueAsString).AsValue();
    public T23 AsT23 => new StringSPWNExpr<T23>(ValueAsString).AsValue();
    public T24 AsT24 => new StringSPWNExpr<T24>(ValueAsString).AsValue();
    public T25 AsT25 => new StringSPWNExpr<T25>(ValueAsString).AsValue();
    public T26 AsT26 => new StringSPWNExpr<T26>(ValueAsString).AsValue();
    public T27 AsT27 => new StringSPWNExpr<T27>(ValueAsString).AsValue();
    public T28 AsT28 => new StringSPWNExpr<T28>(ValueAsString).AsValue();
    public T29 AsT29 => new StringSPWNExpr<T29>(ValueAsString).AsValue();
    public T30 AsT30 => new StringSPWNExpr<T30>(ValueAsString).AsValue();
    public T31 AsT31 => new StringSPWNExpr<T31>(ValueAsString).AsValue();
    public T32 AsT32 => new StringSPWNExpr<T32>(ValueAsString).AsValue();
    public T33 AsT33 => new StringSPWNExpr<T33>(ValueAsString).AsValue();
    public T34 AsT34 => new StringSPWNExpr<T34>(ValueAsString).AsValue();
    public T35 AsT35 => new StringSPWNExpr<T35>(ValueAsString).AsValue();
    public T36 AsT36 => new StringSPWNExpr<T36>(ValueAsString).AsValue();
    public T37 AsT37 => new StringSPWNExpr<T37>(ValueAsString).AsValue();
    public T38 AsT38 => new StringSPWNExpr<T38>(ValueAsString).AsValue();
    public T39 AsT39 => new StringSPWNExpr<T39>(ValueAsString).AsValue();
    public T40 AsT40 => new StringSPWNExpr<T40>(ValueAsString).AsValue();
    public T41 AsT41 => new StringSPWNExpr<T41>(ValueAsString).AsValue();
    public T42 AsT42 => new StringSPWNExpr<T42>(ValueAsString).AsValue();
    public T43 AsT43 => new StringSPWNExpr<T43>(ValueAsString).AsValue();
    public T44 AsT44 => new StringSPWNExpr<T44>(ValueAsString).AsValue();
    public T45 AsT45 => new StringSPWNExpr<T45>(ValueAsString).AsValue();

    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45>(T1 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45>(T2 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45>(T3 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45>(T4 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45>(T5 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45>(T6 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45>(T7 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45>(T8 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45>(T9 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45>(T10 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45>(T11 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45>(T12 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45>(T13 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45>(T14 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45>(T15 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45>(T16 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45>(T17 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45>(T18 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45>(T19 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45>(T20 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45>(T21 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45>(T22 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45>(T23 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45>(T24 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45>(T25 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45>(T26 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45>(T27 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45>(T28 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45>(T29 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45>(T30 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45>(T31 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45>(T32 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45>(T33 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45>(T34 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45>(T35 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45>(T36 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45>(T37 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45>(T38 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45>(T39 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45>(T40 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45>(T41 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45>(T42 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45>(T43 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45>(T44 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45>(T45 Value) => new(Value);
}

// Note UnionTypes is NOT a Built-in type in SPWN
[SPWNType("@typeunion")]
public class UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46> : SPWNValueBase
    where T1 : SPWNValueBase
    where T2 : SPWNValueBase
    where T3 : SPWNValueBase
    where T4 : SPWNValueBase
    where T5 : SPWNValueBase
    where T6 : SPWNValueBase
    where T7 : SPWNValueBase
    where T8 : SPWNValueBase
    where T9 : SPWNValueBase
    where T10 : SPWNValueBase
    where T11 : SPWNValueBase
    where T12 : SPWNValueBase
    where T13 : SPWNValueBase
    where T14 : SPWNValueBase
    where T15 : SPWNValueBase
    where T16 : SPWNValueBase
    where T17 : SPWNValueBase
    where T18 : SPWNValueBase
    where T19 : SPWNValueBase
    where T20 : SPWNValueBase
    where T21 : SPWNValueBase
    where T22 : SPWNValueBase
    where T23 : SPWNValueBase
    where T24 : SPWNValueBase
    where T25 : SPWNValueBase
    where T26 : SPWNValueBase
    where T27 : SPWNValueBase
    where T28 : SPWNValueBase
    where T29 : SPWNValueBase
    where T30 : SPWNValueBase
    where T31 : SPWNValueBase
    where T32 : SPWNValueBase
    where T33 : SPWNValueBase
    where T34 : SPWNValueBase
    where T35 : SPWNValueBase
    where T36 : SPWNValueBase
    where T37 : SPWNValueBase
    where T38 : SPWNValueBase
    where T39 : SPWNValueBase
    where T40 : SPWNValueBase
    where T41 : SPWNValueBase
    where T42 : SPWNValueBase
    where T43 : SPWNValueBase
    where T44 : SPWNValueBase
    where T45 : SPWNValueBase
    where T46 : SPWNValueBase
{
    public override string ValueAsString { get; protected set; }

    public UnionTypes(T1 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T2 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T3 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T4 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T5 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T6 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T7 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T8 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T9 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T10 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T11 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T12 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T13 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T14 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T15 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T16 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T17 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T18 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T19 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T20 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T21 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T22 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T23 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T24 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T25 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T26 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T27 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T28 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T29 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T30 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T31 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T32 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T33 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T34 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T35 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T36 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T37 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T38 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T39 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T40 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T41 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T42 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T43 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T44 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T45 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T46 Value) => ValueAsString = Value.ValueAsString;

    public bool IsT1 => Type == TypeIndicator.GetType<T1>();
    public bool IsT2 => Type == TypeIndicator.GetType<T2>();
    public bool IsT3 => Type == TypeIndicator.GetType<T3>();
    public bool IsT4 => Type == TypeIndicator.GetType<T4>();
    public bool IsT5 => Type == TypeIndicator.GetType<T5>();
    public bool IsT6 => Type == TypeIndicator.GetType<T6>();
    public bool IsT7 => Type == TypeIndicator.GetType<T7>();
    public bool IsT8 => Type == TypeIndicator.GetType<T8>();
    public bool IsT9 => Type == TypeIndicator.GetType<T9>();
    public bool IsT10 => Type == TypeIndicator.GetType<T10>();
    public bool IsT11 => Type == TypeIndicator.GetType<T11>();
    public bool IsT12 => Type == TypeIndicator.GetType<T12>();
    public bool IsT13 => Type == TypeIndicator.GetType<T13>();
    public bool IsT14 => Type == TypeIndicator.GetType<T14>();
    public bool IsT15 => Type == TypeIndicator.GetType<T15>();
    public bool IsT16 => Type == TypeIndicator.GetType<T16>();
    public bool IsT17 => Type == TypeIndicator.GetType<T17>();
    public bool IsT18 => Type == TypeIndicator.GetType<T18>();
    public bool IsT19 => Type == TypeIndicator.GetType<T19>();
    public bool IsT20 => Type == TypeIndicator.GetType<T20>();
    public bool IsT21 => Type == TypeIndicator.GetType<T21>();
    public bool IsT22 => Type == TypeIndicator.GetType<T22>();
    public bool IsT23 => Type == TypeIndicator.GetType<T23>();
    public bool IsT24 => Type == TypeIndicator.GetType<T24>();
    public bool IsT25 => Type == TypeIndicator.GetType<T25>();
    public bool IsT26 => Type == TypeIndicator.GetType<T26>();
    public bool IsT27 => Type == TypeIndicator.GetType<T27>();
    public bool IsT28 => Type == TypeIndicator.GetType<T28>();
    public bool IsT29 => Type == TypeIndicator.GetType<T29>();
    public bool IsT30 => Type == TypeIndicator.GetType<T30>();
    public bool IsT31 => Type == TypeIndicator.GetType<T31>();
    public bool IsT32 => Type == TypeIndicator.GetType<T32>();
    public bool IsT33 => Type == TypeIndicator.GetType<T33>();
    public bool IsT34 => Type == TypeIndicator.GetType<T34>();
    public bool IsT35 => Type == TypeIndicator.GetType<T35>();
    public bool IsT36 => Type == TypeIndicator.GetType<T36>();
    public bool IsT37 => Type == TypeIndicator.GetType<T37>();
    public bool IsT38 => Type == TypeIndicator.GetType<T38>();
    public bool IsT39 => Type == TypeIndicator.GetType<T39>();
    public bool IsT40 => Type == TypeIndicator.GetType<T40>();
    public bool IsT41 => Type == TypeIndicator.GetType<T41>();
    public bool IsT42 => Type == TypeIndicator.GetType<T42>();
    public bool IsT43 => Type == TypeIndicator.GetType<T43>();
    public bool IsT44 => Type == TypeIndicator.GetType<T44>();
    public bool IsT45 => Type == TypeIndicator.GetType<T45>();
    public bool IsT46 => Type == TypeIndicator.GetType<T46>();

    public T1 AsT1 => new StringSPWNExpr<T1>(ValueAsString).AsValue();
    public T2 AsT2 => new StringSPWNExpr<T2>(ValueAsString).AsValue();
    public T3 AsT3 => new StringSPWNExpr<T3>(ValueAsString).AsValue();
    public T4 AsT4 => new StringSPWNExpr<T4>(ValueAsString).AsValue();
    public T5 AsT5 => new StringSPWNExpr<T5>(ValueAsString).AsValue();
    public T6 AsT6 => new StringSPWNExpr<T6>(ValueAsString).AsValue();
    public T7 AsT7 => new StringSPWNExpr<T7>(ValueAsString).AsValue();
    public T8 AsT8 => new StringSPWNExpr<T8>(ValueAsString).AsValue();
    public T9 AsT9 => new StringSPWNExpr<T9>(ValueAsString).AsValue();
    public T10 AsT10 => new StringSPWNExpr<T10>(ValueAsString).AsValue();
    public T11 AsT11 => new StringSPWNExpr<T11>(ValueAsString).AsValue();
    public T12 AsT12 => new StringSPWNExpr<T12>(ValueAsString).AsValue();
    public T13 AsT13 => new StringSPWNExpr<T13>(ValueAsString).AsValue();
    public T14 AsT14 => new StringSPWNExpr<T14>(ValueAsString).AsValue();
    public T15 AsT15 => new StringSPWNExpr<T15>(ValueAsString).AsValue();
    public T16 AsT16 => new StringSPWNExpr<T16>(ValueAsString).AsValue();
    public T17 AsT17 => new StringSPWNExpr<T17>(ValueAsString).AsValue();
    public T18 AsT18 => new StringSPWNExpr<T18>(ValueAsString).AsValue();
    public T19 AsT19 => new StringSPWNExpr<T19>(ValueAsString).AsValue();
    public T20 AsT20 => new StringSPWNExpr<T20>(ValueAsString).AsValue();
    public T21 AsT21 => new StringSPWNExpr<T21>(ValueAsString).AsValue();
    public T22 AsT22 => new StringSPWNExpr<T22>(ValueAsString).AsValue();
    public T23 AsT23 => new StringSPWNExpr<T23>(ValueAsString).AsValue();
    public T24 AsT24 => new StringSPWNExpr<T24>(ValueAsString).AsValue();
    public T25 AsT25 => new StringSPWNExpr<T25>(ValueAsString).AsValue();
    public T26 AsT26 => new StringSPWNExpr<T26>(ValueAsString).AsValue();
    public T27 AsT27 => new StringSPWNExpr<T27>(ValueAsString).AsValue();
    public T28 AsT28 => new StringSPWNExpr<T28>(ValueAsString).AsValue();
    public T29 AsT29 => new StringSPWNExpr<T29>(ValueAsString).AsValue();
    public T30 AsT30 => new StringSPWNExpr<T30>(ValueAsString).AsValue();
    public T31 AsT31 => new StringSPWNExpr<T31>(ValueAsString).AsValue();
    public T32 AsT32 => new StringSPWNExpr<T32>(ValueAsString).AsValue();
    public T33 AsT33 => new StringSPWNExpr<T33>(ValueAsString).AsValue();
    public T34 AsT34 => new StringSPWNExpr<T34>(ValueAsString).AsValue();
    public T35 AsT35 => new StringSPWNExpr<T35>(ValueAsString).AsValue();
    public T36 AsT36 => new StringSPWNExpr<T36>(ValueAsString).AsValue();
    public T37 AsT37 => new StringSPWNExpr<T37>(ValueAsString).AsValue();
    public T38 AsT38 => new StringSPWNExpr<T38>(ValueAsString).AsValue();
    public T39 AsT39 => new StringSPWNExpr<T39>(ValueAsString).AsValue();
    public T40 AsT40 => new StringSPWNExpr<T40>(ValueAsString).AsValue();
    public T41 AsT41 => new StringSPWNExpr<T41>(ValueAsString).AsValue();
    public T42 AsT42 => new StringSPWNExpr<T42>(ValueAsString).AsValue();
    public T43 AsT43 => new StringSPWNExpr<T43>(ValueAsString).AsValue();
    public T44 AsT44 => new StringSPWNExpr<T44>(ValueAsString).AsValue();
    public T45 AsT45 => new StringSPWNExpr<T45>(ValueAsString).AsValue();
    public T46 AsT46 => new StringSPWNExpr<T46>(ValueAsString).AsValue();

    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46>(T1 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46>(T2 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46>(T3 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46>(T4 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46>(T5 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46>(T6 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46>(T7 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46>(T8 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46>(T9 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46>(T10 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46>(T11 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46>(T12 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46>(T13 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46>(T14 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46>(T15 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46>(T16 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46>(T17 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46>(T18 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46>(T19 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46>(T20 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46>(T21 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46>(T22 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46>(T23 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46>(T24 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46>(T25 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46>(T26 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46>(T27 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46>(T28 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46>(T29 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46>(T30 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46>(T31 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46>(T32 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46>(T33 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46>(T34 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46>(T35 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46>(T36 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46>(T37 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46>(T38 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46>(T39 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46>(T40 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46>(T41 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46>(T42 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46>(T43 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46>(T44 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46>(T45 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46>(T46 Value) => new(Value);
}

// Note UnionTypes is NOT a Built-in type in SPWN
[SPWNType("@typeunion")]
public class UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47> : SPWNValueBase
    where T1 : SPWNValueBase
    where T2 : SPWNValueBase
    where T3 : SPWNValueBase
    where T4 : SPWNValueBase
    where T5 : SPWNValueBase
    where T6 : SPWNValueBase
    where T7 : SPWNValueBase
    where T8 : SPWNValueBase
    where T9 : SPWNValueBase
    where T10 : SPWNValueBase
    where T11 : SPWNValueBase
    where T12 : SPWNValueBase
    where T13 : SPWNValueBase
    where T14 : SPWNValueBase
    where T15 : SPWNValueBase
    where T16 : SPWNValueBase
    where T17 : SPWNValueBase
    where T18 : SPWNValueBase
    where T19 : SPWNValueBase
    where T20 : SPWNValueBase
    where T21 : SPWNValueBase
    where T22 : SPWNValueBase
    where T23 : SPWNValueBase
    where T24 : SPWNValueBase
    where T25 : SPWNValueBase
    where T26 : SPWNValueBase
    where T27 : SPWNValueBase
    where T28 : SPWNValueBase
    where T29 : SPWNValueBase
    where T30 : SPWNValueBase
    where T31 : SPWNValueBase
    where T32 : SPWNValueBase
    where T33 : SPWNValueBase
    where T34 : SPWNValueBase
    where T35 : SPWNValueBase
    where T36 : SPWNValueBase
    where T37 : SPWNValueBase
    where T38 : SPWNValueBase
    where T39 : SPWNValueBase
    where T40 : SPWNValueBase
    where T41 : SPWNValueBase
    where T42 : SPWNValueBase
    where T43 : SPWNValueBase
    where T44 : SPWNValueBase
    where T45 : SPWNValueBase
    where T46 : SPWNValueBase
    where T47 : SPWNValueBase
{
    public override string ValueAsString { get; protected set; }

    public UnionTypes(T1 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T2 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T3 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T4 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T5 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T6 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T7 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T8 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T9 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T10 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T11 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T12 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T13 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T14 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T15 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T16 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T17 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T18 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T19 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T20 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T21 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T22 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T23 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T24 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T25 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T26 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T27 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T28 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T29 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T30 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T31 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T32 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T33 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T34 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T35 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T36 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T37 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T38 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T39 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T40 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T41 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T42 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T43 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T44 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T45 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T46 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T47 Value) => ValueAsString = Value.ValueAsString;

    public bool IsT1 => Type == TypeIndicator.GetType<T1>();
    public bool IsT2 => Type == TypeIndicator.GetType<T2>();
    public bool IsT3 => Type == TypeIndicator.GetType<T3>();
    public bool IsT4 => Type == TypeIndicator.GetType<T4>();
    public bool IsT5 => Type == TypeIndicator.GetType<T5>();
    public bool IsT6 => Type == TypeIndicator.GetType<T6>();
    public bool IsT7 => Type == TypeIndicator.GetType<T7>();
    public bool IsT8 => Type == TypeIndicator.GetType<T8>();
    public bool IsT9 => Type == TypeIndicator.GetType<T9>();
    public bool IsT10 => Type == TypeIndicator.GetType<T10>();
    public bool IsT11 => Type == TypeIndicator.GetType<T11>();
    public bool IsT12 => Type == TypeIndicator.GetType<T12>();
    public bool IsT13 => Type == TypeIndicator.GetType<T13>();
    public bool IsT14 => Type == TypeIndicator.GetType<T14>();
    public bool IsT15 => Type == TypeIndicator.GetType<T15>();
    public bool IsT16 => Type == TypeIndicator.GetType<T16>();
    public bool IsT17 => Type == TypeIndicator.GetType<T17>();
    public bool IsT18 => Type == TypeIndicator.GetType<T18>();
    public bool IsT19 => Type == TypeIndicator.GetType<T19>();
    public bool IsT20 => Type == TypeIndicator.GetType<T20>();
    public bool IsT21 => Type == TypeIndicator.GetType<T21>();
    public bool IsT22 => Type == TypeIndicator.GetType<T22>();
    public bool IsT23 => Type == TypeIndicator.GetType<T23>();
    public bool IsT24 => Type == TypeIndicator.GetType<T24>();
    public bool IsT25 => Type == TypeIndicator.GetType<T25>();
    public bool IsT26 => Type == TypeIndicator.GetType<T26>();
    public bool IsT27 => Type == TypeIndicator.GetType<T27>();
    public bool IsT28 => Type == TypeIndicator.GetType<T28>();
    public bool IsT29 => Type == TypeIndicator.GetType<T29>();
    public bool IsT30 => Type == TypeIndicator.GetType<T30>();
    public bool IsT31 => Type == TypeIndicator.GetType<T31>();
    public bool IsT32 => Type == TypeIndicator.GetType<T32>();
    public bool IsT33 => Type == TypeIndicator.GetType<T33>();
    public bool IsT34 => Type == TypeIndicator.GetType<T34>();
    public bool IsT35 => Type == TypeIndicator.GetType<T35>();
    public bool IsT36 => Type == TypeIndicator.GetType<T36>();
    public bool IsT37 => Type == TypeIndicator.GetType<T37>();
    public bool IsT38 => Type == TypeIndicator.GetType<T38>();
    public bool IsT39 => Type == TypeIndicator.GetType<T39>();
    public bool IsT40 => Type == TypeIndicator.GetType<T40>();
    public bool IsT41 => Type == TypeIndicator.GetType<T41>();
    public bool IsT42 => Type == TypeIndicator.GetType<T42>();
    public bool IsT43 => Type == TypeIndicator.GetType<T43>();
    public bool IsT44 => Type == TypeIndicator.GetType<T44>();
    public bool IsT45 => Type == TypeIndicator.GetType<T45>();
    public bool IsT46 => Type == TypeIndicator.GetType<T46>();
    public bool IsT47 => Type == TypeIndicator.GetType<T47>();

    public T1 AsT1 => new StringSPWNExpr<T1>(ValueAsString).AsValue();
    public T2 AsT2 => new StringSPWNExpr<T2>(ValueAsString).AsValue();
    public T3 AsT3 => new StringSPWNExpr<T3>(ValueAsString).AsValue();
    public T4 AsT4 => new StringSPWNExpr<T4>(ValueAsString).AsValue();
    public T5 AsT5 => new StringSPWNExpr<T5>(ValueAsString).AsValue();
    public T6 AsT6 => new StringSPWNExpr<T6>(ValueAsString).AsValue();
    public T7 AsT7 => new StringSPWNExpr<T7>(ValueAsString).AsValue();
    public T8 AsT8 => new StringSPWNExpr<T8>(ValueAsString).AsValue();
    public T9 AsT9 => new StringSPWNExpr<T9>(ValueAsString).AsValue();
    public T10 AsT10 => new StringSPWNExpr<T10>(ValueAsString).AsValue();
    public T11 AsT11 => new StringSPWNExpr<T11>(ValueAsString).AsValue();
    public T12 AsT12 => new StringSPWNExpr<T12>(ValueAsString).AsValue();
    public T13 AsT13 => new StringSPWNExpr<T13>(ValueAsString).AsValue();
    public T14 AsT14 => new StringSPWNExpr<T14>(ValueAsString).AsValue();
    public T15 AsT15 => new StringSPWNExpr<T15>(ValueAsString).AsValue();
    public T16 AsT16 => new StringSPWNExpr<T16>(ValueAsString).AsValue();
    public T17 AsT17 => new StringSPWNExpr<T17>(ValueAsString).AsValue();
    public T18 AsT18 => new StringSPWNExpr<T18>(ValueAsString).AsValue();
    public T19 AsT19 => new StringSPWNExpr<T19>(ValueAsString).AsValue();
    public T20 AsT20 => new StringSPWNExpr<T20>(ValueAsString).AsValue();
    public T21 AsT21 => new StringSPWNExpr<T21>(ValueAsString).AsValue();
    public T22 AsT22 => new StringSPWNExpr<T22>(ValueAsString).AsValue();
    public T23 AsT23 => new StringSPWNExpr<T23>(ValueAsString).AsValue();
    public T24 AsT24 => new StringSPWNExpr<T24>(ValueAsString).AsValue();
    public T25 AsT25 => new StringSPWNExpr<T25>(ValueAsString).AsValue();
    public T26 AsT26 => new StringSPWNExpr<T26>(ValueAsString).AsValue();
    public T27 AsT27 => new StringSPWNExpr<T27>(ValueAsString).AsValue();
    public T28 AsT28 => new StringSPWNExpr<T28>(ValueAsString).AsValue();
    public T29 AsT29 => new StringSPWNExpr<T29>(ValueAsString).AsValue();
    public T30 AsT30 => new StringSPWNExpr<T30>(ValueAsString).AsValue();
    public T31 AsT31 => new StringSPWNExpr<T31>(ValueAsString).AsValue();
    public T32 AsT32 => new StringSPWNExpr<T32>(ValueAsString).AsValue();
    public T33 AsT33 => new StringSPWNExpr<T33>(ValueAsString).AsValue();
    public T34 AsT34 => new StringSPWNExpr<T34>(ValueAsString).AsValue();
    public T35 AsT35 => new StringSPWNExpr<T35>(ValueAsString).AsValue();
    public T36 AsT36 => new StringSPWNExpr<T36>(ValueAsString).AsValue();
    public T37 AsT37 => new StringSPWNExpr<T37>(ValueAsString).AsValue();
    public T38 AsT38 => new StringSPWNExpr<T38>(ValueAsString).AsValue();
    public T39 AsT39 => new StringSPWNExpr<T39>(ValueAsString).AsValue();
    public T40 AsT40 => new StringSPWNExpr<T40>(ValueAsString).AsValue();
    public T41 AsT41 => new StringSPWNExpr<T41>(ValueAsString).AsValue();
    public T42 AsT42 => new StringSPWNExpr<T42>(ValueAsString).AsValue();
    public T43 AsT43 => new StringSPWNExpr<T43>(ValueAsString).AsValue();
    public T44 AsT44 => new StringSPWNExpr<T44>(ValueAsString).AsValue();
    public T45 AsT45 => new StringSPWNExpr<T45>(ValueAsString).AsValue();
    public T46 AsT46 => new StringSPWNExpr<T46>(ValueAsString).AsValue();
    public T47 AsT47 => new StringSPWNExpr<T47>(ValueAsString).AsValue();

    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47>(T1 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47>(T2 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47>(T3 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47>(T4 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47>(T5 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47>(T6 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47>(T7 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47>(T8 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47>(T9 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47>(T10 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47>(T11 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47>(T12 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47>(T13 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47>(T14 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47>(T15 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47>(T16 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47>(T17 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47>(T18 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47>(T19 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47>(T20 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47>(T21 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47>(T22 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47>(T23 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47>(T24 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47>(T25 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47>(T26 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47>(T27 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47>(T28 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47>(T29 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47>(T30 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47>(T31 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47>(T32 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47>(T33 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47>(T34 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47>(T35 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47>(T36 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47>(T37 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47>(T38 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47>(T39 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47>(T40 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47>(T41 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47>(T42 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47>(T43 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47>(T44 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47>(T45 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47>(T46 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47>(T47 Value) => new(Value);
}

// Note UnionTypes is NOT a Built-in type in SPWN
[SPWNType("@typeunion")]
public class UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48> : SPWNValueBase
    where T1 : SPWNValueBase
    where T2 : SPWNValueBase
    where T3 : SPWNValueBase
    where T4 : SPWNValueBase
    where T5 : SPWNValueBase
    where T6 : SPWNValueBase
    where T7 : SPWNValueBase
    where T8 : SPWNValueBase
    where T9 : SPWNValueBase
    where T10 : SPWNValueBase
    where T11 : SPWNValueBase
    where T12 : SPWNValueBase
    where T13 : SPWNValueBase
    where T14 : SPWNValueBase
    where T15 : SPWNValueBase
    where T16 : SPWNValueBase
    where T17 : SPWNValueBase
    where T18 : SPWNValueBase
    where T19 : SPWNValueBase
    where T20 : SPWNValueBase
    where T21 : SPWNValueBase
    where T22 : SPWNValueBase
    where T23 : SPWNValueBase
    where T24 : SPWNValueBase
    where T25 : SPWNValueBase
    where T26 : SPWNValueBase
    where T27 : SPWNValueBase
    where T28 : SPWNValueBase
    where T29 : SPWNValueBase
    where T30 : SPWNValueBase
    where T31 : SPWNValueBase
    where T32 : SPWNValueBase
    where T33 : SPWNValueBase
    where T34 : SPWNValueBase
    where T35 : SPWNValueBase
    where T36 : SPWNValueBase
    where T37 : SPWNValueBase
    where T38 : SPWNValueBase
    where T39 : SPWNValueBase
    where T40 : SPWNValueBase
    where T41 : SPWNValueBase
    where T42 : SPWNValueBase
    where T43 : SPWNValueBase
    where T44 : SPWNValueBase
    where T45 : SPWNValueBase
    where T46 : SPWNValueBase
    where T47 : SPWNValueBase
    where T48 : SPWNValueBase
{
    public override string ValueAsString { get; protected set; }

    public UnionTypes(T1 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T2 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T3 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T4 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T5 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T6 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T7 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T8 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T9 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T10 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T11 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T12 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T13 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T14 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T15 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T16 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T17 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T18 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T19 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T20 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T21 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T22 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T23 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T24 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T25 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T26 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T27 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T28 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T29 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T30 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T31 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T32 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T33 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T34 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T35 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T36 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T37 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T38 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T39 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T40 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T41 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T42 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T43 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T44 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T45 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T46 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T47 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T48 Value) => ValueAsString = Value.ValueAsString;

    public bool IsT1 => Type == TypeIndicator.GetType<T1>();
    public bool IsT2 => Type == TypeIndicator.GetType<T2>();
    public bool IsT3 => Type == TypeIndicator.GetType<T3>();
    public bool IsT4 => Type == TypeIndicator.GetType<T4>();
    public bool IsT5 => Type == TypeIndicator.GetType<T5>();
    public bool IsT6 => Type == TypeIndicator.GetType<T6>();
    public bool IsT7 => Type == TypeIndicator.GetType<T7>();
    public bool IsT8 => Type == TypeIndicator.GetType<T8>();
    public bool IsT9 => Type == TypeIndicator.GetType<T9>();
    public bool IsT10 => Type == TypeIndicator.GetType<T10>();
    public bool IsT11 => Type == TypeIndicator.GetType<T11>();
    public bool IsT12 => Type == TypeIndicator.GetType<T12>();
    public bool IsT13 => Type == TypeIndicator.GetType<T13>();
    public bool IsT14 => Type == TypeIndicator.GetType<T14>();
    public bool IsT15 => Type == TypeIndicator.GetType<T15>();
    public bool IsT16 => Type == TypeIndicator.GetType<T16>();
    public bool IsT17 => Type == TypeIndicator.GetType<T17>();
    public bool IsT18 => Type == TypeIndicator.GetType<T18>();
    public bool IsT19 => Type == TypeIndicator.GetType<T19>();
    public bool IsT20 => Type == TypeIndicator.GetType<T20>();
    public bool IsT21 => Type == TypeIndicator.GetType<T21>();
    public bool IsT22 => Type == TypeIndicator.GetType<T22>();
    public bool IsT23 => Type == TypeIndicator.GetType<T23>();
    public bool IsT24 => Type == TypeIndicator.GetType<T24>();
    public bool IsT25 => Type == TypeIndicator.GetType<T25>();
    public bool IsT26 => Type == TypeIndicator.GetType<T26>();
    public bool IsT27 => Type == TypeIndicator.GetType<T27>();
    public bool IsT28 => Type == TypeIndicator.GetType<T28>();
    public bool IsT29 => Type == TypeIndicator.GetType<T29>();
    public bool IsT30 => Type == TypeIndicator.GetType<T30>();
    public bool IsT31 => Type == TypeIndicator.GetType<T31>();
    public bool IsT32 => Type == TypeIndicator.GetType<T32>();
    public bool IsT33 => Type == TypeIndicator.GetType<T33>();
    public bool IsT34 => Type == TypeIndicator.GetType<T34>();
    public bool IsT35 => Type == TypeIndicator.GetType<T35>();
    public bool IsT36 => Type == TypeIndicator.GetType<T36>();
    public bool IsT37 => Type == TypeIndicator.GetType<T37>();
    public bool IsT38 => Type == TypeIndicator.GetType<T38>();
    public bool IsT39 => Type == TypeIndicator.GetType<T39>();
    public bool IsT40 => Type == TypeIndicator.GetType<T40>();
    public bool IsT41 => Type == TypeIndicator.GetType<T41>();
    public bool IsT42 => Type == TypeIndicator.GetType<T42>();
    public bool IsT43 => Type == TypeIndicator.GetType<T43>();
    public bool IsT44 => Type == TypeIndicator.GetType<T44>();
    public bool IsT45 => Type == TypeIndicator.GetType<T45>();
    public bool IsT46 => Type == TypeIndicator.GetType<T46>();
    public bool IsT47 => Type == TypeIndicator.GetType<T47>();
    public bool IsT48 => Type == TypeIndicator.GetType<T48>();

    public T1 AsT1 => new StringSPWNExpr<T1>(ValueAsString).AsValue();
    public T2 AsT2 => new StringSPWNExpr<T2>(ValueAsString).AsValue();
    public T3 AsT3 => new StringSPWNExpr<T3>(ValueAsString).AsValue();
    public T4 AsT4 => new StringSPWNExpr<T4>(ValueAsString).AsValue();
    public T5 AsT5 => new StringSPWNExpr<T5>(ValueAsString).AsValue();
    public T6 AsT6 => new StringSPWNExpr<T6>(ValueAsString).AsValue();
    public T7 AsT7 => new StringSPWNExpr<T7>(ValueAsString).AsValue();
    public T8 AsT8 => new StringSPWNExpr<T8>(ValueAsString).AsValue();
    public T9 AsT9 => new StringSPWNExpr<T9>(ValueAsString).AsValue();
    public T10 AsT10 => new StringSPWNExpr<T10>(ValueAsString).AsValue();
    public T11 AsT11 => new StringSPWNExpr<T11>(ValueAsString).AsValue();
    public T12 AsT12 => new StringSPWNExpr<T12>(ValueAsString).AsValue();
    public T13 AsT13 => new StringSPWNExpr<T13>(ValueAsString).AsValue();
    public T14 AsT14 => new StringSPWNExpr<T14>(ValueAsString).AsValue();
    public T15 AsT15 => new StringSPWNExpr<T15>(ValueAsString).AsValue();
    public T16 AsT16 => new StringSPWNExpr<T16>(ValueAsString).AsValue();
    public T17 AsT17 => new StringSPWNExpr<T17>(ValueAsString).AsValue();
    public T18 AsT18 => new StringSPWNExpr<T18>(ValueAsString).AsValue();
    public T19 AsT19 => new StringSPWNExpr<T19>(ValueAsString).AsValue();
    public T20 AsT20 => new StringSPWNExpr<T20>(ValueAsString).AsValue();
    public T21 AsT21 => new StringSPWNExpr<T21>(ValueAsString).AsValue();
    public T22 AsT22 => new StringSPWNExpr<T22>(ValueAsString).AsValue();
    public T23 AsT23 => new StringSPWNExpr<T23>(ValueAsString).AsValue();
    public T24 AsT24 => new StringSPWNExpr<T24>(ValueAsString).AsValue();
    public T25 AsT25 => new StringSPWNExpr<T25>(ValueAsString).AsValue();
    public T26 AsT26 => new StringSPWNExpr<T26>(ValueAsString).AsValue();
    public T27 AsT27 => new StringSPWNExpr<T27>(ValueAsString).AsValue();
    public T28 AsT28 => new StringSPWNExpr<T28>(ValueAsString).AsValue();
    public T29 AsT29 => new StringSPWNExpr<T29>(ValueAsString).AsValue();
    public T30 AsT30 => new StringSPWNExpr<T30>(ValueAsString).AsValue();
    public T31 AsT31 => new StringSPWNExpr<T31>(ValueAsString).AsValue();
    public T32 AsT32 => new StringSPWNExpr<T32>(ValueAsString).AsValue();
    public T33 AsT33 => new StringSPWNExpr<T33>(ValueAsString).AsValue();
    public T34 AsT34 => new StringSPWNExpr<T34>(ValueAsString).AsValue();
    public T35 AsT35 => new StringSPWNExpr<T35>(ValueAsString).AsValue();
    public T36 AsT36 => new StringSPWNExpr<T36>(ValueAsString).AsValue();
    public T37 AsT37 => new StringSPWNExpr<T37>(ValueAsString).AsValue();
    public T38 AsT38 => new StringSPWNExpr<T38>(ValueAsString).AsValue();
    public T39 AsT39 => new StringSPWNExpr<T39>(ValueAsString).AsValue();
    public T40 AsT40 => new StringSPWNExpr<T40>(ValueAsString).AsValue();
    public T41 AsT41 => new StringSPWNExpr<T41>(ValueAsString).AsValue();
    public T42 AsT42 => new StringSPWNExpr<T42>(ValueAsString).AsValue();
    public T43 AsT43 => new StringSPWNExpr<T43>(ValueAsString).AsValue();
    public T44 AsT44 => new StringSPWNExpr<T44>(ValueAsString).AsValue();
    public T45 AsT45 => new StringSPWNExpr<T45>(ValueAsString).AsValue();
    public T46 AsT46 => new StringSPWNExpr<T46>(ValueAsString).AsValue();
    public T47 AsT47 => new StringSPWNExpr<T47>(ValueAsString).AsValue();
    public T48 AsT48 => new StringSPWNExpr<T48>(ValueAsString).AsValue();

    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48>(T1 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48>(T2 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48>(T3 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48>(T4 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48>(T5 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48>(T6 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48>(T7 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48>(T8 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48>(T9 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48>(T10 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48>(T11 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48>(T12 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48>(T13 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48>(T14 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48>(T15 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48>(T16 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48>(T17 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48>(T18 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48>(T19 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48>(T20 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48>(T21 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48>(T22 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48>(T23 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48>(T24 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48>(T25 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48>(T26 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48>(T27 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48>(T28 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48>(T29 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48>(T30 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48>(T31 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48>(T32 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48>(T33 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48>(T34 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48>(T35 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48>(T36 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48>(T37 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48>(T38 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48>(T39 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48>(T40 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48>(T41 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48>(T42 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48>(T43 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48>(T44 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48>(T45 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48>(T46 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48>(T47 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48>(T48 Value) => new(Value);
}

// Note UnionTypes is NOT a Built-in type in SPWN
[SPWNType("@typeunion")]
public class UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49> : SPWNValueBase
    where T1 : SPWNValueBase
    where T2 : SPWNValueBase
    where T3 : SPWNValueBase
    where T4 : SPWNValueBase
    where T5 : SPWNValueBase
    where T6 : SPWNValueBase
    where T7 : SPWNValueBase
    where T8 : SPWNValueBase
    where T9 : SPWNValueBase
    where T10 : SPWNValueBase
    where T11 : SPWNValueBase
    where T12 : SPWNValueBase
    where T13 : SPWNValueBase
    where T14 : SPWNValueBase
    where T15 : SPWNValueBase
    where T16 : SPWNValueBase
    where T17 : SPWNValueBase
    where T18 : SPWNValueBase
    where T19 : SPWNValueBase
    where T20 : SPWNValueBase
    where T21 : SPWNValueBase
    where T22 : SPWNValueBase
    where T23 : SPWNValueBase
    where T24 : SPWNValueBase
    where T25 : SPWNValueBase
    where T26 : SPWNValueBase
    where T27 : SPWNValueBase
    where T28 : SPWNValueBase
    where T29 : SPWNValueBase
    where T30 : SPWNValueBase
    where T31 : SPWNValueBase
    where T32 : SPWNValueBase
    where T33 : SPWNValueBase
    where T34 : SPWNValueBase
    where T35 : SPWNValueBase
    where T36 : SPWNValueBase
    where T37 : SPWNValueBase
    where T38 : SPWNValueBase
    where T39 : SPWNValueBase
    where T40 : SPWNValueBase
    where T41 : SPWNValueBase
    where T42 : SPWNValueBase
    where T43 : SPWNValueBase
    where T44 : SPWNValueBase
    where T45 : SPWNValueBase
    where T46 : SPWNValueBase
    where T47 : SPWNValueBase
    where T48 : SPWNValueBase
    where T49 : SPWNValueBase
{
    public override string ValueAsString { get; protected set; }

    public UnionTypes(T1 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T2 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T3 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T4 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T5 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T6 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T7 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T8 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T9 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T10 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T11 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T12 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T13 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T14 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T15 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T16 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T17 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T18 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T19 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T20 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T21 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T22 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T23 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T24 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T25 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T26 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T27 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T28 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T29 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T30 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T31 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T32 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T33 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T34 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T35 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T36 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T37 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T38 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T39 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T40 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T41 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T42 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T43 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T44 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T45 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T46 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T47 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T48 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T49 Value) => ValueAsString = Value.ValueAsString;

    public bool IsT1 => Type == TypeIndicator.GetType<T1>();
    public bool IsT2 => Type == TypeIndicator.GetType<T2>();
    public bool IsT3 => Type == TypeIndicator.GetType<T3>();
    public bool IsT4 => Type == TypeIndicator.GetType<T4>();
    public bool IsT5 => Type == TypeIndicator.GetType<T5>();
    public bool IsT6 => Type == TypeIndicator.GetType<T6>();
    public bool IsT7 => Type == TypeIndicator.GetType<T7>();
    public bool IsT8 => Type == TypeIndicator.GetType<T8>();
    public bool IsT9 => Type == TypeIndicator.GetType<T9>();
    public bool IsT10 => Type == TypeIndicator.GetType<T10>();
    public bool IsT11 => Type == TypeIndicator.GetType<T11>();
    public bool IsT12 => Type == TypeIndicator.GetType<T12>();
    public bool IsT13 => Type == TypeIndicator.GetType<T13>();
    public bool IsT14 => Type == TypeIndicator.GetType<T14>();
    public bool IsT15 => Type == TypeIndicator.GetType<T15>();
    public bool IsT16 => Type == TypeIndicator.GetType<T16>();
    public bool IsT17 => Type == TypeIndicator.GetType<T17>();
    public bool IsT18 => Type == TypeIndicator.GetType<T18>();
    public bool IsT19 => Type == TypeIndicator.GetType<T19>();
    public bool IsT20 => Type == TypeIndicator.GetType<T20>();
    public bool IsT21 => Type == TypeIndicator.GetType<T21>();
    public bool IsT22 => Type == TypeIndicator.GetType<T22>();
    public bool IsT23 => Type == TypeIndicator.GetType<T23>();
    public bool IsT24 => Type == TypeIndicator.GetType<T24>();
    public bool IsT25 => Type == TypeIndicator.GetType<T25>();
    public bool IsT26 => Type == TypeIndicator.GetType<T26>();
    public bool IsT27 => Type == TypeIndicator.GetType<T27>();
    public bool IsT28 => Type == TypeIndicator.GetType<T28>();
    public bool IsT29 => Type == TypeIndicator.GetType<T29>();
    public bool IsT30 => Type == TypeIndicator.GetType<T30>();
    public bool IsT31 => Type == TypeIndicator.GetType<T31>();
    public bool IsT32 => Type == TypeIndicator.GetType<T32>();
    public bool IsT33 => Type == TypeIndicator.GetType<T33>();
    public bool IsT34 => Type == TypeIndicator.GetType<T34>();
    public bool IsT35 => Type == TypeIndicator.GetType<T35>();
    public bool IsT36 => Type == TypeIndicator.GetType<T36>();
    public bool IsT37 => Type == TypeIndicator.GetType<T37>();
    public bool IsT38 => Type == TypeIndicator.GetType<T38>();
    public bool IsT39 => Type == TypeIndicator.GetType<T39>();
    public bool IsT40 => Type == TypeIndicator.GetType<T40>();
    public bool IsT41 => Type == TypeIndicator.GetType<T41>();
    public bool IsT42 => Type == TypeIndicator.GetType<T42>();
    public bool IsT43 => Type == TypeIndicator.GetType<T43>();
    public bool IsT44 => Type == TypeIndicator.GetType<T44>();
    public bool IsT45 => Type == TypeIndicator.GetType<T45>();
    public bool IsT46 => Type == TypeIndicator.GetType<T46>();
    public bool IsT47 => Type == TypeIndicator.GetType<T47>();
    public bool IsT48 => Type == TypeIndicator.GetType<T48>();
    public bool IsT49 => Type == TypeIndicator.GetType<T49>();

    public T1 AsT1 => new StringSPWNExpr<T1>(ValueAsString).AsValue();
    public T2 AsT2 => new StringSPWNExpr<T2>(ValueAsString).AsValue();
    public T3 AsT3 => new StringSPWNExpr<T3>(ValueAsString).AsValue();
    public T4 AsT4 => new StringSPWNExpr<T4>(ValueAsString).AsValue();
    public T5 AsT5 => new StringSPWNExpr<T5>(ValueAsString).AsValue();
    public T6 AsT6 => new StringSPWNExpr<T6>(ValueAsString).AsValue();
    public T7 AsT7 => new StringSPWNExpr<T7>(ValueAsString).AsValue();
    public T8 AsT8 => new StringSPWNExpr<T8>(ValueAsString).AsValue();
    public T9 AsT9 => new StringSPWNExpr<T9>(ValueAsString).AsValue();
    public T10 AsT10 => new StringSPWNExpr<T10>(ValueAsString).AsValue();
    public T11 AsT11 => new StringSPWNExpr<T11>(ValueAsString).AsValue();
    public T12 AsT12 => new StringSPWNExpr<T12>(ValueAsString).AsValue();
    public T13 AsT13 => new StringSPWNExpr<T13>(ValueAsString).AsValue();
    public T14 AsT14 => new StringSPWNExpr<T14>(ValueAsString).AsValue();
    public T15 AsT15 => new StringSPWNExpr<T15>(ValueAsString).AsValue();
    public T16 AsT16 => new StringSPWNExpr<T16>(ValueAsString).AsValue();
    public T17 AsT17 => new StringSPWNExpr<T17>(ValueAsString).AsValue();
    public T18 AsT18 => new StringSPWNExpr<T18>(ValueAsString).AsValue();
    public T19 AsT19 => new StringSPWNExpr<T19>(ValueAsString).AsValue();
    public T20 AsT20 => new StringSPWNExpr<T20>(ValueAsString).AsValue();
    public T21 AsT21 => new StringSPWNExpr<T21>(ValueAsString).AsValue();
    public T22 AsT22 => new StringSPWNExpr<T22>(ValueAsString).AsValue();
    public T23 AsT23 => new StringSPWNExpr<T23>(ValueAsString).AsValue();
    public T24 AsT24 => new StringSPWNExpr<T24>(ValueAsString).AsValue();
    public T25 AsT25 => new StringSPWNExpr<T25>(ValueAsString).AsValue();
    public T26 AsT26 => new StringSPWNExpr<T26>(ValueAsString).AsValue();
    public T27 AsT27 => new StringSPWNExpr<T27>(ValueAsString).AsValue();
    public T28 AsT28 => new StringSPWNExpr<T28>(ValueAsString).AsValue();
    public T29 AsT29 => new StringSPWNExpr<T29>(ValueAsString).AsValue();
    public T30 AsT30 => new StringSPWNExpr<T30>(ValueAsString).AsValue();
    public T31 AsT31 => new StringSPWNExpr<T31>(ValueAsString).AsValue();
    public T32 AsT32 => new StringSPWNExpr<T32>(ValueAsString).AsValue();
    public T33 AsT33 => new StringSPWNExpr<T33>(ValueAsString).AsValue();
    public T34 AsT34 => new StringSPWNExpr<T34>(ValueAsString).AsValue();
    public T35 AsT35 => new StringSPWNExpr<T35>(ValueAsString).AsValue();
    public T36 AsT36 => new StringSPWNExpr<T36>(ValueAsString).AsValue();
    public T37 AsT37 => new StringSPWNExpr<T37>(ValueAsString).AsValue();
    public T38 AsT38 => new StringSPWNExpr<T38>(ValueAsString).AsValue();
    public T39 AsT39 => new StringSPWNExpr<T39>(ValueAsString).AsValue();
    public T40 AsT40 => new StringSPWNExpr<T40>(ValueAsString).AsValue();
    public T41 AsT41 => new StringSPWNExpr<T41>(ValueAsString).AsValue();
    public T42 AsT42 => new StringSPWNExpr<T42>(ValueAsString).AsValue();
    public T43 AsT43 => new StringSPWNExpr<T43>(ValueAsString).AsValue();
    public T44 AsT44 => new StringSPWNExpr<T44>(ValueAsString).AsValue();
    public T45 AsT45 => new StringSPWNExpr<T45>(ValueAsString).AsValue();
    public T46 AsT46 => new StringSPWNExpr<T46>(ValueAsString).AsValue();
    public T47 AsT47 => new StringSPWNExpr<T47>(ValueAsString).AsValue();
    public T48 AsT48 => new StringSPWNExpr<T48>(ValueAsString).AsValue();
    public T49 AsT49 => new StringSPWNExpr<T49>(ValueAsString).AsValue();

    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49>(T1 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49>(T2 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49>(T3 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49>(T4 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49>(T5 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49>(T6 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49>(T7 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49>(T8 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49>(T9 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49>(T10 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49>(T11 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49>(T12 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49>(T13 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49>(T14 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49>(T15 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49>(T16 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49>(T17 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49>(T18 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49>(T19 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49>(T20 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49>(T21 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49>(T22 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49>(T23 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49>(T24 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49>(T25 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49>(T26 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49>(T27 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49>(T28 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49>(T29 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49>(T30 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49>(T31 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49>(T32 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49>(T33 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49>(T34 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49>(T35 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49>(T36 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49>(T37 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49>(T38 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49>(T39 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49>(T40 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49>(T41 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49>(T42 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49>(T43 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49>(T44 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49>(T45 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49>(T46 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49>(T47 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49>(T48 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49>(T49 Value) => new(Value);
}

// Note UnionTypes is NOT a Built-in type in SPWN
[SPWNType("@typeunion")]
public class UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50> : SPWNValueBase
    where T1 : SPWNValueBase
    where T2 : SPWNValueBase
    where T3 : SPWNValueBase
    where T4 : SPWNValueBase
    where T5 : SPWNValueBase
    where T6 : SPWNValueBase
    where T7 : SPWNValueBase
    where T8 : SPWNValueBase
    where T9 : SPWNValueBase
    where T10 : SPWNValueBase
    where T11 : SPWNValueBase
    where T12 : SPWNValueBase
    where T13 : SPWNValueBase
    where T14 : SPWNValueBase
    where T15 : SPWNValueBase
    where T16 : SPWNValueBase
    where T17 : SPWNValueBase
    where T18 : SPWNValueBase
    where T19 : SPWNValueBase
    where T20 : SPWNValueBase
    where T21 : SPWNValueBase
    where T22 : SPWNValueBase
    where T23 : SPWNValueBase
    where T24 : SPWNValueBase
    where T25 : SPWNValueBase
    where T26 : SPWNValueBase
    where T27 : SPWNValueBase
    where T28 : SPWNValueBase
    where T29 : SPWNValueBase
    where T30 : SPWNValueBase
    where T31 : SPWNValueBase
    where T32 : SPWNValueBase
    where T33 : SPWNValueBase
    where T34 : SPWNValueBase
    where T35 : SPWNValueBase
    where T36 : SPWNValueBase
    where T37 : SPWNValueBase
    where T38 : SPWNValueBase
    where T39 : SPWNValueBase
    where T40 : SPWNValueBase
    where T41 : SPWNValueBase
    where T42 : SPWNValueBase
    where T43 : SPWNValueBase
    where T44 : SPWNValueBase
    where T45 : SPWNValueBase
    where T46 : SPWNValueBase
    where T47 : SPWNValueBase
    where T48 : SPWNValueBase
    where T49 : SPWNValueBase
    where T50 : SPWNValueBase
{
    public override string ValueAsString { get; protected set; }

    public UnionTypes(T1 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T2 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T3 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T4 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T5 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T6 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T7 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T8 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T9 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T10 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T11 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T12 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T13 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T14 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T15 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T16 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T17 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T18 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T19 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T20 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T21 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T22 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T23 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T24 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T25 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T26 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T27 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T28 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T29 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T30 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T31 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T32 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T33 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T34 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T35 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T36 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T37 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T38 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T39 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T40 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T41 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T42 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T43 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T44 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T45 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T46 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T47 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T48 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T49 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T50 Value) => ValueAsString = Value.ValueAsString;

    public bool IsT1 => Type == TypeIndicator.GetType<T1>();
    public bool IsT2 => Type == TypeIndicator.GetType<T2>();
    public bool IsT3 => Type == TypeIndicator.GetType<T3>();
    public bool IsT4 => Type == TypeIndicator.GetType<T4>();
    public bool IsT5 => Type == TypeIndicator.GetType<T5>();
    public bool IsT6 => Type == TypeIndicator.GetType<T6>();
    public bool IsT7 => Type == TypeIndicator.GetType<T7>();
    public bool IsT8 => Type == TypeIndicator.GetType<T8>();
    public bool IsT9 => Type == TypeIndicator.GetType<T9>();
    public bool IsT10 => Type == TypeIndicator.GetType<T10>();
    public bool IsT11 => Type == TypeIndicator.GetType<T11>();
    public bool IsT12 => Type == TypeIndicator.GetType<T12>();
    public bool IsT13 => Type == TypeIndicator.GetType<T13>();
    public bool IsT14 => Type == TypeIndicator.GetType<T14>();
    public bool IsT15 => Type == TypeIndicator.GetType<T15>();
    public bool IsT16 => Type == TypeIndicator.GetType<T16>();
    public bool IsT17 => Type == TypeIndicator.GetType<T17>();
    public bool IsT18 => Type == TypeIndicator.GetType<T18>();
    public bool IsT19 => Type == TypeIndicator.GetType<T19>();
    public bool IsT20 => Type == TypeIndicator.GetType<T20>();
    public bool IsT21 => Type == TypeIndicator.GetType<T21>();
    public bool IsT22 => Type == TypeIndicator.GetType<T22>();
    public bool IsT23 => Type == TypeIndicator.GetType<T23>();
    public bool IsT24 => Type == TypeIndicator.GetType<T24>();
    public bool IsT25 => Type == TypeIndicator.GetType<T25>();
    public bool IsT26 => Type == TypeIndicator.GetType<T26>();
    public bool IsT27 => Type == TypeIndicator.GetType<T27>();
    public bool IsT28 => Type == TypeIndicator.GetType<T28>();
    public bool IsT29 => Type == TypeIndicator.GetType<T29>();
    public bool IsT30 => Type == TypeIndicator.GetType<T30>();
    public bool IsT31 => Type == TypeIndicator.GetType<T31>();
    public bool IsT32 => Type == TypeIndicator.GetType<T32>();
    public bool IsT33 => Type == TypeIndicator.GetType<T33>();
    public bool IsT34 => Type == TypeIndicator.GetType<T34>();
    public bool IsT35 => Type == TypeIndicator.GetType<T35>();
    public bool IsT36 => Type == TypeIndicator.GetType<T36>();
    public bool IsT37 => Type == TypeIndicator.GetType<T37>();
    public bool IsT38 => Type == TypeIndicator.GetType<T38>();
    public bool IsT39 => Type == TypeIndicator.GetType<T39>();
    public bool IsT40 => Type == TypeIndicator.GetType<T40>();
    public bool IsT41 => Type == TypeIndicator.GetType<T41>();
    public bool IsT42 => Type == TypeIndicator.GetType<T42>();
    public bool IsT43 => Type == TypeIndicator.GetType<T43>();
    public bool IsT44 => Type == TypeIndicator.GetType<T44>();
    public bool IsT45 => Type == TypeIndicator.GetType<T45>();
    public bool IsT46 => Type == TypeIndicator.GetType<T46>();
    public bool IsT47 => Type == TypeIndicator.GetType<T47>();
    public bool IsT48 => Type == TypeIndicator.GetType<T48>();
    public bool IsT49 => Type == TypeIndicator.GetType<T49>();
    public bool IsT50 => Type == TypeIndicator.GetType<T50>();

    public T1 AsT1 => new StringSPWNExpr<T1>(ValueAsString).AsValue();
    public T2 AsT2 => new StringSPWNExpr<T2>(ValueAsString).AsValue();
    public T3 AsT3 => new StringSPWNExpr<T3>(ValueAsString).AsValue();
    public T4 AsT4 => new StringSPWNExpr<T4>(ValueAsString).AsValue();
    public T5 AsT5 => new StringSPWNExpr<T5>(ValueAsString).AsValue();
    public T6 AsT6 => new StringSPWNExpr<T6>(ValueAsString).AsValue();
    public T7 AsT7 => new StringSPWNExpr<T7>(ValueAsString).AsValue();
    public T8 AsT8 => new StringSPWNExpr<T8>(ValueAsString).AsValue();
    public T9 AsT9 => new StringSPWNExpr<T9>(ValueAsString).AsValue();
    public T10 AsT10 => new StringSPWNExpr<T10>(ValueAsString).AsValue();
    public T11 AsT11 => new StringSPWNExpr<T11>(ValueAsString).AsValue();
    public T12 AsT12 => new StringSPWNExpr<T12>(ValueAsString).AsValue();
    public T13 AsT13 => new StringSPWNExpr<T13>(ValueAsString).AsValue();
    public T14 AsT14 => new StringSPWNExpr<T14>(ValueAsString).AsValue();
    public T15 AsT15 => new StringSPWNExpr<T15>(ValueAsString).AsValue();
    public T16 AsT16 => new StringSPWNExpr<T16>(ValueAsString).AsValue();
    public T17 AsT17 => new StringSPWNExpr<T17>(ValueAsString).AsValue();
    public T18 AsT18 => new StringSPWNExpr<T18>(ValueAsString).AsValue();
    public T19 AsT19 => new StringSPWNExpr<T19>(ValueAsString).AsValue();
    public T20 AsT20 => new StringSPWNExpr<T20>(ValueAsString).AsValue();
    public T21 AsT21 => new StringSPWNExpr<T21>(ValueAsString).AsValue();
    public T22 AsT22 => new StringSPWNExpr<T22>(ValueAsString).AsValue();
    public T23 AsT23 => new StringSPWNExpr<T23>(ValueAsString).AsValue();
    public T24 AsT24 => new StringSPWNExpr<T24>(ValueAsString).AsValue();
    public T25 AsT25 => new StringSPWNExpr<T25>(ValueAsString).AsValue();
    public T26 AsT26 => new StringSPWNExpr<T26>(ValueAsString).AsValue();
    public T27 AsT27 => new StringSPWNExpr<T27>(ValueAsString).AsValue();
    public T28 AsT28 => new StringSPWNExpr<T28>(ValueAsString).AsValue();
    public T29 AsT29 => new StringSPWNExpr<T29>(ValueAsString).AsValue();
    public T30 AsT30 => new StringSPWNExpr<T30>(ValueAsString).AsValue();
    public T31 AsT31 => new StringSPWNExpr<T31>(ValueAsString).AsValue();
    public T32 AsT32 => new StringSPWNExpr<T32>(ValueAsString).AsValue();
    public T33 AsT33 => new StringSPWNExpr<T33>(ValueAsString).AsValue();
    public T34 AsT34 => new StringSPWNExpr<T34>(ValueAsString).AsValue();
    public T35 AsT35 => new StringSPWNExpr<T35>(ValueAsString).AsValue();
    public T36 AsT36 => new StringSPWNExpr<T36>(ValueAsString).AsValue();
    public T37 AsT37 => new StringSPWNExpr<T37>(ValueAsString).AsValue();
    public T38 AsT38 => new StringSPWNExpr<T38>(ValueAsString).AsValue();
    public T39 AsT39 => new StringSPWNExpr<T39>(ValueAsString).AsValue();
    public T40 AsT40 => new StringSPWNExpr<T40>(ValueAsString).AsValue();
    public T41 AsT41 => new StringSPWNExpr<T41>(ValueAsString).AsValue();
    public T42 AsT42 => new StringSPWNExpr<T42>(ValueAsString).AsValue();
    public T43 AsT43 => new StringSPWNExpr<T43>(ValueAsString).AsValue();
    public T44 AsT44 => new StringSPWNExpr<T44>(ValueAsString).AsValue();
    public T45 AsT45 => new StringSPWNExpr<T45>(ValueAsString).AsValue();
    public T46 AsT46 => new StringSPWNExpr<T46>(ValueAsString).AsValue();
    public T47 AsT47 => new StringSPWNExpr<T47>(ValueAsString).AsValue();
    public T48 AsT48 => new StringSPWNExpr<T48>(ValueAsString).AsValue();
    public T49 AsT49 => new StringSPWNExpr<T49>(ValueAsString).AsValue();
    public T50 AsT50 => new StringSPWNExpr<T50>(ValueAsString).AsValue();

    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50>(T1 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50>(T2 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50>(T3 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50>(T4 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50>(T5 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50>(T6 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50>(T7 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50>(T8 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50>(T9 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50>(T10 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50>(T11 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50>(T12 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50>(T13 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50>(T14 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50>(T15 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50>(T16 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50>(T17 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50>(T18 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50>(T19 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50>(T20 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50>(T21 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50>(T22 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50>(T23 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50>(T24 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50>(T25 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50>(T26 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50>(T27 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50>(T28 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50>(T29 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50>(T30 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50>(T31 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50>(T32 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50>(T33 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50>(T34 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50>(T35 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50>(T36 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50>(T37 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50>(T38 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50>(T39 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50>(T40 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50>(T41 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50>(T42 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50>(T43 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50>(T44 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50>(T45 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50>(T46 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50>(T47 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50>(T48 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50>(T49 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50>(T50 Value) => new(Value);
}

// Note UnionTypes is NOT a Built-in type in SPWN
[SPWNType("@typeunion")]
public class UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51> : SPWNValueBase
    where T1 : SPWNValueBase
    where T2 : SPWNValueBase
    where T3 : SPWNValueBase
    where T4 : SPWNValueBase
    where T5 : SPWNValueBase
    where T6 : SPWNValueBase
    where T7 : SPWNValueBase
    where T8 : SPWNValueBase
    where T9 : SPWNValueBase
    where T10 : SPWNValueBase
    where T11 : SPWNValueBase
    where T12 : SPWNValueBase
    where T13 : SPWNValueBase
    where T14 : SPWNValueBase
    where T15 : SPWNValueBase
    where T16 : SPWNValueBase
    where T17 : SPWNValueBase
    where T18 : SPWNValueBase
    where T19 : SPWNValueBase
    where T20 : SPWNValueBase
    where T21 : SPWNValueBase
    where T22 : SPWNValueBase
    where T23 : SPWNValueBase
    where T24 : SPWNValueBase
    where T25 : SPWNValueBase
    where T26 : SPWNValueBase
    where T27 : SPWNValueBase
    where T28 : SPWNValueBase
    where T29 : SPWNValueBase
    where T30 : SPWNValueBase
    where T31 : SPWNValueBase
    where T32 : SPWNValueBase
    where T33 : SPWNValueBase
    where T34 : SPWNValueBase
    where T35 : SPWNValueBase
    where T36 : SPWNValueBase
    where T37 : SPWNValueBase
    where T38 : SPWNValueBase
    where T39 : SPWNValueBase
    where T40 : SPWNValueBase
    where T41 : SPWNValueBase
    where T42 : SPWNValueBase
    where T43 : SPWNValueBase
    where T44 : SPWNValueBase
    where T45 : SPWNValueBase
    where T46 : SPWNValueBase
    where T47 : SPWNValueBase
    where T48 : SPWNValueBase
    where T49 : SPWNValueBase
    where T50 : SPWNValueBase
    where T51 : SPWNValueBase
{
    public override string ValueAsString { get; protected set; }

    public UnionTypes(T1 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T2 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T3 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T4 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T5 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T6 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T7 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T8 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T9 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T10 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T11 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T12 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T13 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T14 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T15 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T16 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T17 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T18 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T19 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T20 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T21 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T22 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T23 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T24 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T25 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T26 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T27 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T28 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T29 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T30 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T31 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T32 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T33 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T34 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T35 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T36 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T37 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T38 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T39 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T40 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T41 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T42 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T43 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T44 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T45 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T46 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T47 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T48 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T49 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T50 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T51 Value) => ValueAsString = Value.ValueAsString;

    public bool IsT1 => Type == TypeIndicator.GetType<T1>();
    public bool IsT2 => Type == TypeIndicator.GetType<T2>();
    public bool IsT3 => Type == TypeIndicator.GetType<T3>();
    public bool IsT4 => Type == TypeIndicator.GetType<T4>();
    public bool IsT5 => Type == TypeIndicator.GetType<T5>();
    public bool IsT6 => Type == TypeIndicator.GetType<T6>();
    public bool IsT7 => Type == TypeIndicator.GetType<T7>();
    public bool IsT8 => Type == TypeIndicator.GetType<T8>();
    public bool IsT9 => Type == TypeIndicator.GetType<T9>();
    public bool IsT10 => Type == TypeIndicator.GetType<T10>();
    public bool IsT11 => Type == TypeIndicator.GetType<T11>();
    public bool IsT12 => Type == TypeIndicator.GetType<T12>();
    public bool IsT13 => Type == TypeIndicator.GetType<T13>();
    public bool IsT14 => Type == TypeIndicator.GetType<T14>();
    public bool IsT15 => Type == TypeIndicator.GetType<T15>();
    public bool IsT16 => Type == TypeIndicator.GetType<T16>();
    public bool IsT17 => Type == TypeIndicator.GetType<T17>();
    public bool IsT18 => Type == TypeIndicator.GetType<T18>();
    public bool IsT19 => Type == TypeIndicator.GetType<T19>();
    public bool IsT20 => Type == TypeIndicator.GetType<T20>();
    public bool IsT21 => Type == TypeIndicator.GetType<T21>();
    public bool IsT22 => Type == TypeIndicator.GetType<T22>();
    public bool IsT23 => Type == TypeIndicator.GetType<T23>();
    public bool IsT24 => Type == TypeIndicator.GetType<T24>();
    public bool IsT25 => Type == TypeIndicator.GetType<T25>();
    public bool IsT26 => Type == TypeIndicator.GetType<T26>();
    public bool IsT27 => Type == TypeIndicator.GetType<T27>();
    public bool IsT28 => Type == TypeIndicator.GetType<T28>();
    public bool IsT29 => Type == TypeIndicator.GetType<T29>();
    public bool IsT30 => Type == TypeIndicator.GetType<T30>();
    public bool IsT31 => Type == TypeIndicator.GetType<T31>();
    public bool IsT32 => Type == TypeIndicator.GetType<T32>();
    public bool IsT33 => Type == TypeIndicator.GetType<T33>();
    public bool IsT34 => Type == TypeIndicator.GetType<T34>();
    public bool IsT35 => Type == TypeIndicator.GetType<T35>();
    public bool IsT36 => Type == TypeIndicator.GetType<T36>();
    public bool IsT37 => Type == TypeIndicator.GetType<T37>();
    public bool IsT38 => Type == TypeIndicator.GetType<T38>();
    public bool IsT39 => Type == TypeIndicator.GetType<T39>();
    public bool IsT40 => Type == TypeIndicator.GetType<T40>();
    public bool IsT41 => Type == TypeIndicator.GetType<T41>();
    public bool IsT42 => Type == TypeIndicator.GetType<T42>();
    public bool IsT43 => Type == TypeIndicator.GetType<T43>();
    public bool IsT44 => Type == TypeIndicator.GetType<T44>();
    public bool IsT45 => Type == TypeIndicator.GetType<T45>();
    public bool IsT46 => Type == TypeIndicator.GetType<T46>();
    public bool IsT47 => Type == TypeIndicator.GetType<T47>();
    public bool IsT48 => Type == TypeIndicator.GetType<T48>();
    public bool IsT49 => Type == TypeIndicator.GetType<T49>();
    public bool IsT50 => Type == TypeIndicator.GetType<T50>();
    public bool IsT51 => Type == TypeIndicator.GetType<T51>();

    public T1 AsT1 => new StringSPWNExpr<T1>(ValueAsString).AsValue();
    public T2 AsT2 => new StringSPWNExpr<T2>(ValueAsString).AsValue();
    public T3 AsT3 => new StringSPWNExpr<T3>(ValueAsString).AsValue();
    public T4 AsT4 => new StringSPWNExpr<T4>(ValueAsString).AsValue();
    public T5 AsT5 => new StringSPWNExpr<T5>(ValueAsString).AsValue();
    public T6 AsT6 => new StringSPWNExpr<T6>(ValueAsString).AsValue();
    public T7 AsT7 => new StringSPWNExpr<T7>(ValueAsString).AsValue();
    public T8 AsT8 => new StringSPWNExpr<T8>(ValueAsString).AsValue();
    public T9 AsT9 => new StringSPWNExpr<T9>(ValueAsString).AsValue();
    public T10 AsT10 => new StringSPWNExpr<T10>(ValueAsString).AsValue();
    public T11 AsT11 => new StringSPWNExpr<T11>(ValueAsString).AsValue();
    public T12 AsT12 => new StringSPWNExpr<T12>(ValueAsString).AsValue();
    public T13 AsT13 => new StringSPWNExpr<T13>(ValueAsString).AsValue();
    public T14 AsT14 => new StringSPWNExpr<T14>(ValueAsString).AsValue();
    public T15 AsT15 => new StringSPWNExpr<T15>(ValueAsString).AsValue();
    public T16 AsT16 => new StringSPWNExpr<T16>(ValueAsString).AsValue();
    public T17 AsT17 => new StringSPWNExpr<T17>(ValueAsString).AsValue();
    public T18 AsT18 => new StringSPWNExpr<T18>(ValueAsString).AsValue();
    public T19 AsT19 => new StringSPWNExpr<T19>(ValueAsString).AsValue();
    public T20 AsT20 => new StringSPWNExpr<T20>(ValueAsString).AsValue();
    public T21 AsT21 => new StringSPWNExpr<T21>(ValueAsString).AsValue();
    public T22 AsT22 => new StringSPWNExpr<T22>(ValueAsString).AsValue();
    public T23 AsT23 => new StringSPWNExpr<T23>(ValueAsString).AsValue();
    public T24 AsT24 => new StringSPWNExpr<T24>(ValueAsString).AsValue();
    public T25 AsT25 => new StringSPWNExpr<T25>(ValueAsString).AsValue();
    public T26 AsT26 => new StringSPWNExpr<T26>(ValueAsString).AsValue();
    public T27 AsT27 => new StringSPWNExpr<T27>(ValueAsString).AsValue();
    public T28 AsT28 => new StringSPWNExpr<T28>(ValueAsString).AsValue();
    public T29 AsT29 => new StringSPWNExpr<T29>(ValueAsString).AsValue();
    public T30 AsT30 => new StringSPWNExpr<T30>(ValueAsString).AsValue();
    public T31 AsT31 => new StringSPWNExpr<T31>(ValueAsString).AsValue();
    public T32 AsT32 => new StringSPWNExpr<T32>(ValueAsString).AsValue();
    public T33 AsT33 => new StringSPWNExpr<T33>(ValueAsString).AsValue();
    public T34 AsT34 => new StringSPWNExpr<T34>(ValueAsString).AsValue();
    public T35 AsT35 => new StringSPWNExpr<T35>(ValueAsString).AsValue();
    public T36 AsT36 => new StringSPWNExpr<T36>(ValueAsString).AsValue();
    public T37 AsT37 => new StringSPWNExpr<T37>(ValueAsString).AsValue();
    public T38 AsT38 => new StringSPWNExpr<T38>(ValueAsString).AsValue();
    public T39 AsT39 => new StringSPWNExpr<T39>(ValueAsString).AsValue();
    public T40 AsT40 => new StringSPWNExpr<T40>(ValueAsString).AsValue();
    public T41 AsT41 => new StringSPWNExpr<T41>(ValueAsString).AsValue();
    public T42 AsT42 => new StringSPWNExpr<T42>(ValueAsString).AsValue();
    public T43 AsT43 => new StringSPWNExpr<T43>(ValueAsString).AsValue();
    public T44 AsT44 => new StringSPWNExpr<T44>(ValueAsString).AsValue();
    public T45 AsT45 => new StringSPWNExpr<T45>(ValueAsString).AsValue();
    public T46 AsT46 => new StringSPWNExpr<T46>(ValueAsString).AsValue();
    public T47 AsT47 => new StringSPWNExpr<T47>(ValueAsString).AsValue();
    public T48 AsT48 => new StringSPWNExpr<T48>(ValueAsString).AsValue();
    public T49 AsT49 => new StringSPWNExpr<T49>(ValueAsString).AsValue();
    public T50 AsT50 => new StringSPWNExpr<T50>(ValueAsString).AsValue();
    public T51 AsT51 => new StringSPWNExpr<T51>(ValueAsString).AsValue();

    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51>(T1 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51>(T2 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51>(T3 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51>(T4 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51>(T5 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51>(T6 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51>(T7 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51>(T8 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51>(T9 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51>(T10 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51>(T11 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51>(T12 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51>(T13 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51>(T14 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51>(T15 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51>(T16 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51>(T17 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51>(T18 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51>(T19 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51>(T20 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51>(T21 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51>(T22 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51>(T23 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51>(T24 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51>(T25 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51>(T26 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51>(T27 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51>(T28 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51>(T29 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51>(T30 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51>(T31 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51>(T32 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51>(T33 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51>(T34 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51>(T35 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51>(T36 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51>(T37 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51>(T38 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51>(T39 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51>(T40 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51>(T41 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51>(T42 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51>(T43 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51>(T44 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51>(T45 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51>(T46 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51>(T47 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51>(T48 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51>(T49 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51>(T50 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51>(T51 Value) => new(Value);
}

// Note UnionTypes is NOT a Built-in type in SPWN
[SPWNType("@typeunion")]
public class UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52> : SPWNValueBase
    where T1 : SPWNValueBase
    where T2 : SPWNValueBase
    where T3 : SPWNValueBase
    where T4 : SPWNValueBase
    where T5 : SPWNValueBase
    where T6 : SPWNValueBase
    where T7 : SPWNValueBase
    where T8 : SPWNValueBase
    where T9 : SPWNValueBase
    where T10 : SPWNValueBase
    where T11 : SPWNValueBase
    where T12 : SPWNValueBase
    where T13 : SPWNValueBase
    where T14 : SPWNValueBase
    where T15 : SPWNValueBase
    where T16 : SPWNValueBase
    where T17 : SPWNValueBase
    where T18 : SPWNValueBase
    where T19 : SPWNValueBase
    where T20 : SPWNValueBase
    where T21 : SPWNValueBase
    where T22 : SPWNValueBase
    where T23 : SPWNValueBase
    where T24 : SPWNValueBase
    where T25 : SPWNValueBase
    where T26 : SPWNValueBase
    where T27 : SPWNValueBase
    where T28 : SPWNValueBase
    where T29 : SPWNValueBase
    where T30 : SPWNValueBase
    where T31 : SPWNValueBase
    where T32 : SPWNValueBase
    where T33 : SPWNValueBase
    where T34 : SPWNValueBase
    where T35 : SPWNValueBase
    where T36 : SPWNValueBase
    where T37 : SPWNValueBase
    where T38 : SPWNValueBase
    where T39 : SPWNValueBase
    where T40 : SPWNValueBase
    where T41 : SPWNValueBase
    where T42 : SPWNValueBase
    where T43 : SPWNValueBase
    where T44 : SPWNValueBase
    where T45 : SPWNValueBase
    where T46 : SPWNValueBase
    where T47 : SPWNValueBase
    where T48 : SPWNValueBase
    where T49 : SPWNValueBase
    where T50 : SPWNValueBase
    where T51 : SPWNValueBase
    where T52 : SPWNValueBase
{
    public override string ValueAsString { get; protected set; }

    public UnionTypes(T1 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T2 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T3 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T4 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T5 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T6 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T7 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T8 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T9 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T10 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T11 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T12 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T13 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T14 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T15 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T16 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T17 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T18 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T19 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T20 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T21 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T22 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T23 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T24 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T25 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T26 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T27 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T28 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T29 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T30 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T31 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T32 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T33 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T34 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T35 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T36 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T37 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T38 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T39 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T40 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T41 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T42 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T43 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T44 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T45 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T46 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T47 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T48 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T49 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T50 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T51 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T52 Value) => ValueAsString = Value.ValueAsString;

    public bool IsT1 => Type == TypeIndicator.GetType<T1>();
    public bool IsT2 => Type == TypeIndicator.GetType<T2>();
    public bool IsT3 => Type == TypeIndicator.GetType<T3>();
    public bool IsT4 => Type == TypeIndicator.GetType<T4>();
    public bool IsT5 => Type == TypeIndicator.GetType<T5>();
    public bool IsT6 => Type == TypeIndicator.GetType<T6>();
    public bool IsT7 => Type == TypeIndicator.GetType<T7>();
    public bool IsT8 => Type == TypeIndicator.GetType<T8>();
    public bool IsT9 => Type == TypeIndicator.GetType<T9>();
    public bool IsT10 => Type == TypeIndicator.GetType<T10>();
    public bool IsT11 => Type == TypeIndicator.GetType<T11>();
    public bool IsT12 => Type == TypeIndicator.GetType<T12>();
    public bool IsT13 => Type == TypeIndicator.GetType<T13>();
    public bool IsT14 => Type == TypeIndicator.GetType<T14>();
    public bool IsT15 => Type == TypeIndicator.GetType<T15>();
    public bool IsT16 => Type == TypeIndicator.GetType<T16>();
    public bool IsT17 => Type == TypeIndicator.GetType<T17>();
    public bool IsT18 => Type == TypeIndicator.GetType<T18>();
    public bool IsT19 => Type == TypeIndicator.GetType<T19>();
    public bool IsT20 => Type == TypeIndicator.GetType<T20>();
    public bool IsT21 => Type == TypeIndicator.GetType<T21>();
    public bool IsT22 => Type == TypeIndicator.GetType<T22>();
    public bool IsT23 => Type == TypeIndicator.GetType<T23>();
    public bool IsT24 => Type == TypeIndicator.GetType<T24>();
    public bool IsT25 => Type == TypeIndicator.GetType<T25>();
    public bool IsT26 => Type == TypeIndicator.GetType<T26>();
    public bool IsT27 => Type == TypeIndicator.GetType<T27>();
    public bool IsT28 => Type == TypeIndicator.GetType<T28>();
    public bool IsT29 => Type == TypeIndicator.GetType<T29>();
    public bool IsT30 => Type == TypeIndicator.GetType<T30>();
    public bool IsT31 => Type == TypeIndicator.GetType<T31>();
    public bool IsT32 => Type == TypeIndicator.GetType<T32>();
    public bool IsT33 => Type == TypeIndicator.GetType<T33>();
    public bool IsT34 => Type == TypeIndicator.GetType<T34>();
    public bool IsT35 => Type == TypeIndicator.GetType<T35>();
    public bool IsT36 => Type == TypeIndicator.GetType<T36>();
    public bool IsT37 => Type == TypeIndicator.GetType<T37>();
    public bool IsT38 => Type == TypeIndicator.GetType<T38>();
    public bool IsT39 => Type == TypeIndicator.GetType<T39>();
    public bool IsT40 => Type == TypeIndicator.GetType<T40>();
    public bool IsT41 => Type == TypeIndicator.GetType<T41>();
    public bool IsT42 => Type == TypeIndicator.GetType<T42>();
    public bool IsT43 => Type == TypeIndicator.GetType<T43>();
    public bool IsT44 => Type == TypeIndicator.GetType<T44>();
    public bool IsT45 => Type == TypeIndicator.GetType<T45>();
    public bool IsT46 => Type == TypeIndicator.GetType<T46>();
    public bool IsT47 => Type == TypeIndicator.GetType<T47>();
    public bool IsT48 => Type == TypeIndicator.GetType<T48>();
    public bool IsT49 => Type == TypeIndicator.GetType<T49>();
    public bool IsT50 => Type == TypeIndicator.GetType<T50>();
    public bool IsT51 => Type == TypeIndicator.GetType<T51>();
    public bool IsT52 => Type == TypeIndicator.GetType<T52>();

    public T1 AsT1 => new StringSPWNExpr<T1>(ValueAsString).AsValue();
    public T2 AsT2 => new StringSPWNExpr<T2>(ValueAsString).AsValue();
    public T3 AsT3 => new StringSPWNExpr<T3>(ValueAsString).AsValue();
    public T4 AsT4 => new StringSPWNExpr<T4>(ValueAsString).AsValue();
    public T5 AsT5 => new StringSPWNExpr<T5>(ValueAsString).AsValue();
    public T6 AsT6 => new StringSPWNExpr<T6>(ValueAsString).AsValue();
    public T7 AsT7 => new StringSPWNExpr<T7>(ValueAsString).AsValue();
    public T8 AsT8 => new StringSPWNExpr<T8>(ValueAsString).AsValue();
    public T9 AsT9 => new StringSPWNExpr<T9>(ValueAsString).AsValue();
    public T10 AsT10 => new StringSPWNExpr<T10>(ValueAsString).AsValue();
    public T11 AsT11 => new StringSPWNExpr<T11>(ValueAsString).AsValue();
    public T12 AsT12 => new StringSPWNExpr<T12>(ValueAsString).AsValue();
    public T13 AsT13 => new StringSPWNExpr<T13>(ValueAsString).AsValue();
    public T14 AsT14 => new StringSPWNExpr<T14>(ValueAsString).AsValue();
    public T15 AsT15 => new StringSPWNExpr<T15>(ValueAsString).AsValue();
    public T16 AsT16 => new StringSPWNExpr<T16>(ValueAsString).AsValue();
    public T17 AsT17 => new StringSPWNExpr<T17>(ValueAsString).AsValue();
    public T18 AsT18 => new StringSPWNExpr<T18>(ValueAsString).AsValue();
    public T19 AsT19 => new StringSPWNExpr<T19>(ValueAsString).AsValue();
    public T20 AsT20 => new StringSPWNExpr<T20>(ValueAsString).AsValue();
    public T21 AsT21 => new StringSPWNExpr<T21>(ValueAsString).AsValue();
    public T22 AsT22 => new StringSPWNExpr<T22>(ValueAsString).AsValue();
    public T23 AsT23 => new StringSPWNExpr<T23>(ValueAsString).AsValue();
    public T24 AsT24 => new StringSPWNExpr<T24>(ValueAsString).AsValue();
    public T25 AsT25 => new StringSPWNExpr<T25>(ValueAsString).AsValue();
    public T26 AsT26 => new StringSPWNExpr<T26>(ValueAsString).AsValue();
    public T27 AsT27 => new StringSPWNExpr<T27>(ValueAsString).AsValue();
    public T28 AsT28 => new StringSPWNExpr<T28>(ValueAsString).AsValue();
    public T29 AsT29 => new StringSPWNExpr<T29>(ValueAsString).AsValue();
    public T30 AsT30 => new StringSPWNExpr<T30>(ValueAsString).AsValue();
    public T31 AsT31 => new StringSPWNExpr<T31>(ValueAsString).AsValue();
    public T32 AsT32 => new StringSPWNExpr<T32>(ValueAsString).AsValue();
    public T33 AsT33 => new StringSPWNExpr<T33>(ValueAsString).AsValue();
    public T34 AsT34 => new StringSPWNExpr<T34>(ValueAsString).AsValue();
    public T35 AsT35 => new StringSPWNExpr<T35>(ValueAsString).AsValue();
    public T36 AsT36 => new StringSPWNExpr<T36>(ValueAsString).AsValue();
    public T37 AsT37 => new StringSPWNExpr<T37>(ValueAsString).AsValue();
    public T38 AsT38 => new StringSPWNExpr<T38>(ValueAsString).AsValue();
    public T39 AsT39 => new StringSPWNExpr<T39>(ValueAsString).AsValue();
    public T40 AsT40 => new StringSPWNExpr<T40>(ValueAsString).AsValue();
    public T41 AsT41 => new StringSPWNExpr<T41>(ValueAsString).AsValue();
    public T42 AsT42 => new StringSPWNExpr<T42>(ValueAsString).AsValue();
    public T43 AsT43 => new StringSPWNExpr<T43>(ValueAsString).AsValue();
    public T44 AsT44 => new StringSPWNExpr<T44>(ValueAsString).AsValue();
    public T45 AsT45 => new StringSPWNExpr<T45>(ValueAsString).AsValue();
    public T46 AsT46 => new StringSPWNExpr<T46>(ValueAsString).AsValue();
    public T47 AsT47 => new StringSPWNExpr<T47>(ValueAsString).AsValue();
    public T48 AsT48 => new StringSPWNExpr<T48>(ValueAsString).AsValue();
    public T49 AsT49 => new StringSPWNExpr<T49>(ValueAsString).AsValue();
    public T50 AsT50 => new StringSPWNExpr<T50>(ValueAsString).AsValue();
    public T51 AsT51 => new StringSPWNExpr<T51>(ValueAsString).AsValue();
    public T52 AsT52 => new StringSPWNExpr<T52>(ValueAsString).AsValue();

    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52>(T1 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52>(T2 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52>(T3 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52>(T4 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52>(T5 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52>(T6 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52>(T7 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52>(T8 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52>(T9 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52>(T10 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52>(T11 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52>(T12 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52>(T13 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52>(T14 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52>(T15 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52>(T16 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52>(T17 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52>(T18 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52>(T19 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52>(T20 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52>(T21 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52>(T22 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52>(T23 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52>(T24 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52>(T25 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52>(T26 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52>(T27 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52>(T28 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52>(T29 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52>(T30 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52>(T31 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52>(T32 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52>(T33 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52>(T34 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52>(T35 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52>(T36 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52>(T37 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52>(T38 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52>(T39 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52>(T40 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52>(T41 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52>(T42 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52>(T43 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52>(T44 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52>(T45 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52>(T46 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52>(T47 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52>(T48 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52>(T49 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52>(T50 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52>(T51 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52>(T52 Value) => new(Value);
}

// Note UnionTypes is NOT a Built-in type in SPWN
[SPWNType("@typeunion")]
public class UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53> : SPWNValueBase
    where T1 : SPWNValueBase
    where T2 : SPWNValueBase
    where T3 : SPWNValueBase
    where T4 : SPWNValueBase
    where T5 : SPWNValueBase
    where T6 : SPWNValueBase
    where T7 : SPWNValueBase
    where T8 : SPWNValueBase
    where T9 : SPWNValueBase
    where T10 : SPWNValueBase
    where T11 : SPWNValueBase
    where T12 : SPWNValueBase
    where T13 : SPWNValueBase
    where T14 : SPWNValueBase
    where T15 : SPWNValueBase
    where T16 : SPWNValueBase
    where T17 : SPWNValueBase
    where T18 : SPWNValueBase
    where T19 : SPWNValueBase
    where T20 : SPWNValueBase
    where T21 : SPWNValueBase
    where T22 : SPWNValueBase
    where T23 : SPWNValueBase
    where T24 : SPWNValueBase
    where T25 : SPWNValueBase
    where T26 : SPWNValueBase
    where T27 : SPWNValueBase
    where T28 : SPWNValueBase
    where T29 : SPWNValueBase
    where T30 : SPWNValueBase
    where T31 : SPWNValueBase
    where T32 : SPWNValueBase
    where T33 : SPWNValueBase
    where T34 : SPWNValueBase
    where T35 : SPWNValueBase
    where T36 : SPWNValueBase
    where T37 : SPWNValueBase
    where T38 : SPWNValueBase
    where T39 : SPWNValueBase
    where T40 : SPWNValueBase
    where T41 : SPWNValueBase
    where T42 : SPWNValueBase
    where T43 : SPWNValueBase
    where T44 : SPWNValueBase
    where T45 : SPWNValueBase
    where T46 : SPWNValueBase
    where T47 : SPWNValueBase
    where T48 : SPWNValueBase
    where T49 : SPWNValueBase
    where T50 : SPWNValueBase
    where T51 : SPWNValueBase
    where T52 : SPWNValueBase
    where T53 : SPWNValueBase
{
    public override string ValueAsString { get; protected set; }

    public UnionTypes(T1 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T2 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T3 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T4 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T5 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T6 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T7 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T8 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T9 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T10 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T11 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T12 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T13 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T14 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T15 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T16 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T17 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T18 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T19 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T20 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T21 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T22 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T23 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T24 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T25 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T26 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T27 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T28 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T29 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T30 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T31 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T32 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T33 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T34 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T35 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T36 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T37 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T38 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T39 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T40 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T41 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T42 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T43 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T44 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T45 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T46 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T47 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T48 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T49 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T50 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T51 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T52 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T53 Value) => ValueAsString = Value.ValueAsString;

    public bool IsT1 => Type == TypeIndicator.GetType<T1>();
    public bool IsT2 => Type == TypeIndicator.GetType<T2>();
    public bool IsT3 => Type == TypeIndicator.GetType<T3>();
    public bool IsT4 => Type == TypeIndicator.GetType<T4>();
    public bool IsT5 => Type == TypeIndicator.GetType<T5>();
    public bool IsT6 => Type == TypeIndicator.GetType<T6>();
    public bool IsT7 => Type == TypeIndicator.GetType<T7>();
    public bool IsT8 => Type == TypeIndicator.GetType<T8>();
    public bool IsT9 => Type == TypeIndicator.GetType<T9>();
    public bool IsT10 => Type == TypeIndicator.GetType<T10>();
    public bool IsT11 => Type == TypeIndicator.GetType<T11>();
    public bool IsT12 => Type == TypeIndicator.GetType<T12>();
    public bool IsT13 => Type == TypeIndicator.GetType<T13>();
    public bool IsT14 => Type == TypeIndicator.GetType<T14>();
    public bool IsT15 => Type == TypeIndicator.GetType<T15>();
    public bool IsT16 => Type == TypeIndicator.GetType<T16>();
    public bool IsT17 => Type == TypeIndicator.GetType<T17>();
    public bool IsT18 => Type == TypeIndicator.GetType<T18>();
    public bool IsT19 => Type == TypeIndicator.GetType<T19>();
    public bool IsT20 => Type == TypeIndicator.GetType<T20>();
    public bool IsT21 => Type == TypeIndicator.GetType<T21>();
    public bool IsT22 => Type == TypeIndicator.GetType<T22>();
    public bool IsT23 => Type == TypeIndicator.GetType<T23>();
    public bool IsT24 => Type == TypeIndicator.GetType<T24>();
    public bool IsT25 => Type == TypeIndicator.GetType<T25>();
    public bool IsT26 => Type == TypeIndicator.GetType<T26>();
    public bool IsT27 => Type == TypeIndicator.GetType<T27>();
    public bool IsT28 => Type == TypeIndicator.GetType<T28>();
    public bool IsT29 => Type == TypeIndicator.GetType<T29>();
    public bool IsT30 => Type == TypeIndicator.GetType<T30>();
    public bool IsT31 => Type == TypeIndicator.GetType<T31>();
    public bool IsT32 => Type == TypeIndicator.GetType<T32>();
    public bool IsT33 => Type == TypeIndicator.GetType<T33>();
    public bool IsT34 => Type == TypeIndicator.GetType<T34>();
    public bool IsT35 => Type == TypeIndicator.GetType<T35>();
    public bool IsT36 => Type == TypeIndicator.GetType<T36>();
    public bool IsT37 => Type == TypeIndicator.GetType<T37>();
    public bool IsT38 => Type == TypeIndicator.GetType<T38>();
    public bool IsT39 => Type == TypeIndicator.GetType<T39>();
    public bool IsT40 => Type == TypeIndicator.GetType<T40>();
    public bool IsT41 => Type == TypeIndicator.GetType<T41>();
    public bool IsT42 => Type == TypeIndicator.GetType<T42>();
    public bool IsT43 => Type == TypeIndicator.GetType<T43>();
    public bool IsT44 => Type == TypeIndicator.GetType<T44>();
    public bool IsT45 => Type == TypeIndicator.GetType<T45>();
    public bool IsT46 => Type == TypeIndicator.GetType<T46>();
    public bool IsT47 => Type == TypeIndicator.GetType<T47>();
    public bool IsT48 => Type == TypeIndicator.GetType<T48>();
    public bool IsT49 => Type == TypeIndicator.GetType<T49>();
    public bool IsT50 => Type == TypeIndicator.GetType<T50>();
    public bool IsT51 => Type == TypeIndicator.GetType<T51>();
    public bool IsT52 => Type == TypeIndicator.GetType<T52>();
    public bool IsT53 => Type == TypeIndicator.GetType<T53>();

    public T1 AsT1 => new StringSPWNExpr<T1>(ValueAsString).AsValue();
    public T2 AsT2 => new StringSPWNExpr<T2>(ValueAsString).AsValue();
    public T3 AsT3 => new StringSPWNExpr<T3>(ValueAsString).AsValue();
    public T4 AsT4 => new StringSPWNExpr<T4>(ValueAsString).AsValue();
    public T5 AsT5 => new StringSPWNExpr<T5>(ValueAsString).AsValue();
    public T6 AsT6 => new StringSPWNExpr<T6>(ValueAsString).AsValue();
    public T7 AsT7 => new StringSPWNExpr<T7>(ValueAsString).AsValue();
    public T8 AsT8 => new StringSPWNExpr<T8>(ValueAsString).AsValue();
    public T9 AsT9 => new StringSPWNExpr<T9>(ValueAsString).AsValue();
    public T10 AsT10 => new StringSPWNExpr<T10>(ValueAsString).AsValue();
    public T11 AsT11 => new StringSPWNExpr<T11>(ValueAsString).AsValue();
    public T12 AsT12 => new StringSPWNExpr<T12>(ValueAsString).AsValue();
    public T13 AsT13 => new StringSPWNExpr<T13>(ValueAsString).AsValue();
    public T14 AsT14 => new StringSPWNExpr<T14>(ValueAsString).AsValue();
    public T15 AsT15 => new StringSPWNExpr<T15>(ValueAsString).AsValue();
    public T16 AsT16 => new StringSPWNExpr<T16>(ValueAsString).AsValue();
    public T17 AsT17 => new StringSPWNExpr<T17>(ValueAsString).AsValue();
    public T18 AsT18 => new StringSPWNExpr<T18>(ValueAsString).AsValue();
    public T19 AsT19 => new StringSPWNExpr<T19>(ValueAsString).AsValue();
    public T20 AsT20 => new StringSPWNExpr<T20>(ValueAsString).AsValue();
    public T21 AsT21 => new StringSPWNExpr<T21>(ValueAsString).AsValue();
    public T22 AsT22 => new StringSPWNExpr<T22>(ValueAsString).AsValue();
    public T23 AsT23 => new StringSPWNExpr<T23>(ValueAsString).AsValue();
    public T24 AsT24 => new StringSPWNExpr<T24>(ValueAsString).AsValue();
    public T25 AsT25 => new StringSPWNExpr<T25>(ValueAsString).AsValue();
    public T26 AsT26 => new StringSPWNExpr<T26>(ValueAsString).AsValue();
    public T27 AsT27 => new StringSPWNExpr<T27>(ValueAsString).AsValue();
    public T28 AsT28 => new StringSPWNExpr<T28>(ValueAsString).AsValue();
    public T29 AsT29 => new StringSPWNExpr<T29>(ValueAsString).AsValue();
    public T30 AsT30 => new StringSPWNExpr<T30>(ValueAsString).AsValue();
    public T31 AsT31 => new StringSPWNExpr<T31>(ValueAsString).AsValue();
    public T32 AsT32 => new StringSPWNExpr<T32>(ValueAsString).AsValue();
    public T33 AsT33 => new StringSPWNExpr<T33>(ValueAsString).AsValue();
    public T34 AsT34 => new StringSPWNExpr<T34>(ValueAsString).AsValue();
    public T35 AsT35 => new StringSPWNExpr<T35>(ValueAsString).AsValue();
    public T36 AsT36 => new StringSPWNExpr<T36>(ValueAsString).AsValue();
    public T37 AsT37 => new StringSPWNExpr<T37>(ValueAsString).AsValue();
    public T38 AsT38 => new StringSPWNExpr<T38>(ValueAsString).AsValue();
    public T39 AsT39 => new StringSPWNExpr<T39>(ValueAsString).AsValue();
    public T40 AsT40 => new StringSPWNExpr<T40>(ValueAsString).AsValue();
    public T41 AsT41 => new StringSPWNExpr<T41>(ValueAsString).AsValue();
    public T42 AsT42 => new StringSPWNExpr<T42>(ValueAsString).AsValue();
    public T43 AsT43 => new StringSPWNExpr<T43>(ValueAsString).AsValue();
    public T44 AsT44 => new StringSPWNExpr<T44>(ValueAsString).AsValue();
    public T45 AsT45 => new StringSPWNExpr<T45>(ValueAsString).AsValue();
    public T46 AsT46 => new StringSPWNExpr<T46>(ValueAsString).AsValue();
    public T47 AsT47 => new StringSPWNExpr<T47>(ValueAsString).AsValue();
    public T48 AsT48 => new StringSPWNExpr<T48>(ValueAsString).AsValue();
    public T49 AsT49 => new StringSPWNExpr<T49>(ValueAsString).AsValue();
    public T50 AsT50 => new StringSPWNExpr<T50>(ValueAsString).AsValue();
    public T51 AsT51 => new StringSPWNExpr<T51>(ValueAsString).AsValue();
    public T52 AsT52 => new StringSPWNExpr<T52>(ValueAsString).AsValue();
    public T53 AsT53 => new StringSPWNExpr<T53>(ValueAsString).AsValue();

    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53>(T1 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53>(T2 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53>(T3 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53>(T4 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53>(T5 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53>(T6 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53>(T7 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53>(T8 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53>(T9 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53>(T10 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53>(T11 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53>(T12 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53>(T13 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53>(T14 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53>(T15 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53>(T16 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53>(T17 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53>(T18 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53>(T19 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53>(T20 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53>(T21 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53>(T22 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53>(T23 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53>(T24 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53>(T25 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53>(T26 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53>(T27 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53>(T28 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53>(T29 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53>(T30 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53>(T31 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53>(T32 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53>(T33 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53>(T34 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53>(T35 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53>(T36 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53>(T37 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53>(T38 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53>(T39 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53>(T40 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53>(T41 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53>(T42 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53>(T43 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53>(T44 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53>(T45 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53>(T46 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53>(T47 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53>(T48 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53>(T49 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53>(T50 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53>(T51 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53>(T52 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53>(T53 Value) => new(Value);
}

// Note UnionTypes is NOT a Built-in type in SPWN
[SPWNType("@typeunion")]
public class UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54> : SPWNValueBase
    where T1 : SPWNValueBase
    where T2 : SPWNValueBase
    where T3 : SPWNValueBase
    where T4 : SPWNValueBase
    where T5 : SPWNValueBase
    where T6 : SPWNValueBase
    where T7 : SPWNValueBase
    where T8 : SPWNValueBase
    where T9 : SPWNValueBase
    where T10 : SPWNValueBase
    where T11 : SPWNValueBase
    where T12 : SPWNValueBase
    where T13 : SPWNValueBase
    where T14 : SPWNValueBase
    where T15 : SPWNValueBase
    where T16 : SPWNValueBase
    where T17 : SPWNValueBase
    where T18 : SPWNValueBase
    where T19 : SPWNValueBase
    where T20 : SPWNValueBase
    where T21 : SPWNValueBase
    where T22 : SPWNValueBase
    where T23 : SPWNValueBase
    where T24 : SPWNValueBase
    where T25 : SPWNValueBase
    where T26 : SPWNValueBase
    where T27 : SPWNValueBase
    where T28 : SPWNValueBase
    where T29 : SPWNValueBase
    where T30 : SPWNValueBase
    where T31 : SPWNValueBase
    where T32 : SPWNValueBase
    where T33 : SPWNValueBase
    where T34 : SPWNValueBase
    where T35 : SPWNValueBase
    where T36 : SPWNValueBase
    where T37 : SPWNValueBase
    where T38 : SPWNValueBase
    where T39 : SPWNValueBase
    where T40 : SPWNValueBase
    where T41 : SPWNValueBase
    where T42 : SPWNValueBase
    where T43 : SPWNValueBase
    where T44 : SPWNValueBase
    where T45 : SPWNValueBase
    where T46 : SPWNValueBase
    where T47 : SPWNValueBase
    where T48 : SPWNValueBase
    where T49 : SPWNValueBase
    where T50 : SPWNValueBase
    where T51 : SPWNValueBase
    where T52 : SPWNValueBase
    where T53 : SPWNValueBase
    where T54 : SPWNValueBase
{
    public override string ValueAsString { get; protected set; }

    public UnionTypes(T1 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T2 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T3 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T4 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T5 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T6 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T7 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T8 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T9 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T10 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T11 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T12 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T13 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T14 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T15 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T16 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T17 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T18 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T19 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T20 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T21 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T22 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T23 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T24 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T25 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T26 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T27 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T28 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T29 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T30 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T31 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T32 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T33 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T34 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T35 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T36 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T37 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T38 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T39 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T40 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T41 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T42 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T43 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T44 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T45 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T46 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T47 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T48 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T49 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T50 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T51 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T52 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T53 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T54 Value) => ValueAsString = Value.ValueAsString;

    public bool IsT1 => Type == TypeIndicator.GetType<T1>();
    public bool IsT2 => Type == TypeIndicator.GetType<T2>();
    public bool IsT3 => Type == TypeIndicator.GetType<T3>();
    public bool IsT4 => Type == TypeIndicator.GetType<T4>();
    public bool IsT5 => Type == TypeIndicator.GetType<T5>();
    public bool IsT6 => Type == TypeIndicator.GetType<T6>();
    public bool IsT7 => Type == TypeIndicator.GetType<T7>();
    public bool IsT8 => Type == TypeIndicator.GetType<T8>();
    public bool IsT9 => Type == TypeIndicator.GetType<T9>();
    public bool IsT10 => Type == TypeIndicator.GetType<T10>();
    public bool IsT11 => Type == TypeIndicator.GetType<T11>();
    public bool IsT12 => Type == TypeIndicator.GetType<T12>();
    public bool IsT13 => Type == TypeIndicator.GetType<T13>();
    public bool IsT14 => Type == TypeIndicator.GetType<T14>();
    public bool IsT15 => Type == TypeIndicator.GetType<T15>();
    public bool IsT16 => Type == TypeIndicator.GetType<T16>();
    public bool IsT17 => Type == TypeIndicator.GetType<T17>();
    public bool IsT18 => Type == TypeIndicator.GetType<T18>();
    public bool IsT19 => Type == TypeIndicator.GetType<T19>();
    public bool IsT20 => Type == TypeIndicator.GetType<T20>();
    public bool IsT21 => Type == TypeIndicator.GetType<T21>();
    public bool IsT22 => Type == TypeIndicator.GetType<T22>();
    public bool IsT23 => Type == TypeIndicator.GetType<T23>();
    public bool IsT24 => Type == TypeIndicator.GetType<T24>();
    public bool IsT25 => Type == TypeIndicator.GetType<T25>();
    public bool IsT26 => Type == TypeIndicator.GetType<T26>();
    public bool IsT27 => Type == TypeIndicator.GetType<T27>();
    public bool IsT28 => Type == TypeIndicator.GetType<T28>();
    public bool IsT29 => Type == TypeIndicator.GetType<T29>();
    public bool IsT30 => Type == TypeIndicator.GetType<T30>();
    public bool IsT31 => Type == TypeIndicator.GetType<T31>();
    public bool IsT32 => Type == TypeIndicator.GetType<T32>();
    public bool IsT33 => Type == TypeIndicator.GetType<T33>();
    public bool IsT34 => Type == TypeIndicator.GetType<T34>();
    public bool IsT35 => Type == TypeIndicator.GetType<T35>();
    public bool IsT36 => Type == TypeIndicator.GetType<T36>();
    public bool IsT37 => Type == TypeIndicator.GetType<T37>();
    public bool IsT38 => Type == TypeIndicator.GetType<T38>();
    public bool IsT39 => Type == TypeIndicator.GetType<T39>();
    public bool IsT40 => Type == TypeIndicator.GetType<T40>();
    public bool IsT41 => Type == TypeIndicator.GetType<T41>();
    public bool IsT42 => Type == TypeIndicator.GetType<T42>();
    public bool IsT43 => Type == TypeIndicator.GetType<T43>();
    public bool IsT44 => Type == TypeIndicator.GetType<T44>();
    public bool IsT45 => Type == TypeIndicator.GetType<T45>();
    public bool IsT46 => Type == TypeIndicator.GetType<T46>();
    public bool IsT47 => Type == TypeIndicator.GetType<T47>();
    public bool IsT48 => Type == TypeIndicator.GetType<T48>();
    public bool IsT49 => Type == TypeIndicator.GetType<T49>();
    public bool IsT50 => Type == TypeIndicator.GetType<T50>();
    public bool IsT51 => Type == TypeIndicator.GetType<T51>();
    public bool IsT52 => Type == TypeIndicator.GetType<T52>();
    public bool IsT53 => Type == TypeIndicator.GetType<T53>();
    public bool IsT54 => Type == TypeIndicator.GetType<T54>();

    public T1 AsT1 => new StringSPWNExpr<T1>(ValueAsString).AsValue();
    public T2 AsT2 => new StringSPWNExpr<T2>(ValueAsString).AsValue();
    public T3 AsT3 => new StringSPWNExpr<T3>(ValueAsString).AsValue();
    public T4 AsT4 => new StringSPWNExpr<T4>(ValueAsString).AsValue();
    public T5 AsT5 => new StringSPWNExpr<T5>(ValueAsString).AsValue();
    public T6 AsT6 => new StringSPWNExpr<T6>(ValueAsString).AsValue();
    public T7 AsT7 => new StringSPWNExpr<T7>(ValueAsString).AsValue();
    public T8 AsT8 => new StringSPWNExpr<T8>(ValueAsString).AsValue();
    public T9 AsT9 => new StringSPWNExpr<T9>(ValueAsString).AsValue();
    public T10 AsT10 => new StringSPWNExpr<T10>(ValueAsString).AsValue();
    public T11 AsT11 => new StringSPWNExpr<T11>(ValueAsString).AsValue();
    public T12 AsT12 => new StringSPWNExpr<T12>(ValueAsString).AsValue();
    public T13 AsT13 => new StringSPWNExpr<T13>(ValueAsString).AsValue();
    public T14 AsT14 => new StringSPWNExpr<T14>(ValueAsString).AsValue();
    public T15 AsT15 => new StringSPWNExpr<T15>(ValueAsString).AsValue();
    public T16 AsT16 => new StringSPWNExpr<T16>(ValueAsString).AsValue();
    public T17 AsT17 => new StringSPWNExpr<T17>(ValueAsString).AsValue();
    public T18 AsT18 => new StringSPWNExpr<T18>(ValueAsString).AsValue();
    public T19 AsT19 => new StringSPWNExpr<T19>(ValueAsString).AsValue();
    public T20 AsT20 => new StringSPWNExpr<T20>(ValueAsString).AsValue();
    public T21 AsT21 => new StringSPWNExpr<T21>(ValueAsString).AsValue();
    public T22 AsT22 => new StringSPWNExpr<T22>(ValueAsString).AsValue();
    public T23 AsT23 => new StringSPWNExpr<T23>(ValueAsString).AsValue();
    public T24 AsT24 => new StringSPWNExpr<T24>(ValueAsString).AsValue();
    public T25 AsT25 => new StringSPWNExpr<T25>(ValueAsString).AsValue();
    public T26 AsT26 => new StringSPWNExpr<T26>(ValueAsString).AsValue();
    public T27 AsT27 => new StringSPWNExpr<T27>(ValueAsString).AsValue();
    public T28 AsT28 => new StringSPWNExpr<T28>(ValueAsString).AsValue();
    public T29 AsT29 => new StringSPWNExpr<T29>(ValueAsString).AsValue();
    public T30 AsT30 => new StringSPWNExpr<T30>(ValueAsString).AsValue();
    public T31 AsT31 => new StringSPWNExpr<T31>(ValueAsString).AsValue();
    public T32 AsT32 => new StringSPWNExpr<T32>(ValueAsString).AsValue();
    public T33 AsT33 => new StringSPWNExpr<T33>(ValueAsString).AsValue();
    public T34 AsT34 => new StringSPWNExpr<T34>(ValueAsString).AsValue();
    public T35 AsT35 => new StringSPWNExpr<T35>(ValueAsString).AsValue();
    public T36 AsT36 => new StringSPWNExpr<T36>(ValueAsString).AsValue();
    public T37 AsT37 => new StringSPWNExpr<T37>(ValueAsString).AsValue();
    public T38 AsT38 => new StringSPWNExpr<T38>(ValueAsString).AsValue();
    public T39 AsT39 => new StringSPWNExpr<T39>(ValueAsString).AsValue();
    public T40 AsT40 => new StringSPWNExpr<T40>(ValueAsString).AsValue();
    public T41 AsT41 => new StringSPWNExpr<T41>(ValueAsString).AsValue();
    public T42 AsT42 => new StringSPWNExpr<T42>(ValueAsString).AsValue();
    public T43 AsT43 => new StringSPWNExpr<T43>(ValueAsString).AsValue();
    public T44 AsT44 => new StringSPWNExpr<T44>(ValueAsString).AsValue();
    public T45 AsT45 => new StringSPWNExpr<T45>(ValueAsString).AsValue();
    public T46 AsT46 => new StringSPWNExpr<T46>(ValueAsString).AsValue();
    public T47 AsT47 => new StringSPWNExpr<T47>(ValueAsString).AsValue();
    public T48 AsT48 => new StringSPWNExpr<T48>(ValueAsString).AsValue();
    public T49 AsT49 => new StringSPWNExpr<T49>(ValueAsString).AsValue();
    public T50 AsT50 => new StringSPWNExpr<T50>(ValueAsString).AsValue();
    public T51 AsT51 => new StringSPWNExpr<T51>(ValueAsString).AsValue();
    public T52 AsT52 => new StringSPWNExpr<T52>(ValueAsString).AsValue();
    public T53 AsT53 => new StringSPWNExpr<T53>(ValueAsString).AsValue();
    public T54 AsT54 => new StringSPWNExpr<T54>(ValueAsString).AsValue();

    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54>(T1 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54>(T2 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54>(T3 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54>(T4 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54>(T5 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54>(T6 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54>(T7 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54>(T8 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54>(T9 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54>(T10 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54>(T11 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54>(T12 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54>(T13 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54>(T14 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54>(T15 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54>(T16 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54>(T17 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54>(T18 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54>(T19 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54>(T20 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54>(T21 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54>(T22 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54>(T23 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54>(T24 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54>(T25 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54>(T26 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54>(T27 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54>(T28 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54>(T29 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54>(T30 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54>(T31 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54>(T32 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54>(T33 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54>(T34 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54>(T35 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54>(T36 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54>(T37 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54>(T38 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54>(T39 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54>(T40 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54>(T41 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54>(T42 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54>(T43 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54>(T44 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54>(T45 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54>(T46 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54>(T47 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54>(T48 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54>(T49 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54>(T50 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54>(T51 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54>(T52 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54>(T53 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54>(T54 Value) => new(Value);
}

// Note UnionTypes is NOT a Built-in type in SPWN
[SPWNType("@typeunion")]
public class UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55> : SPWNValueBase
    where T1 : SPWNValueBase
    where T2 : SPWNValueBase
    where T3 : SPWNValueBase
    where T4 : SPWNValueBase
    where T5 : SPWNValueBase
    where T6 : SPWNValueBase
    where T7 : SPWNValueBase
    where T8 : SPWNValueBase
    where T9 : SPWNValueBase
    where T10 : SPWNValueBase
    where T11 : SPWNValueBase
    where T12 : SPWNValueBase
    where T13 : SPWNValueBase
    where T14 : SPWNValueBase
    where T15 : SPWNValueBase
    where T16 : SPWNValueBase
    where T17 : SPWNValueBase
    where T18 : SPWNValueBase
    where T19 : SPWNValueBase
    where T20 : SPWNValueBase
    where T21 : SPWNValueBase
    where T22 : SPWNValueBase
    where T23 : SPWNValueBase
    where T24 : SPWNValueBase
    where T25 : SPWNValueBase
    where T26 : SPWNValueBase
    where T27 : SPWNValueBase
    where T28 : SPWNValueBase
    where T29 : SPWNValueBase
    where T30 : SPWNValueBase
    where T31 : SPWNValueBase
    where T32 : SPWNValueBase
    where T33 : SPWNValueBase
    where T34 : SPWNValueBase
    where T35 : SPWNValueBase
    where T36 : SPWNValueBase
    where T37 : SPWNValueBase
    where T38 : SPWNValueBase
    where T39 : SPWNValueBase
    where T40 : SPWNValueBase
    where T41 : SPWNValueBase
    where T42 : SPWNValueBase
    where T43 : SPWNValueBase
    where T44 : SPWNValueBase
    where T45 : SPWNValueBase
    where T46 : SPWNValueBase
    where T47 : SPWNValueBase
    where T48 : SPWNValueBase
    where T49 : SPWNValueBase
    where T50 : SPWNValueBase
    where T51 : SPWNValueBase
    where T52 : SPWNValueBase
    where T53 : SPWNValueBase
    where T54 : SPWNValueBase
    where T55 : SPWNValueBase
{
    public override string ValueAsString { get; protected set; }

    public UnionTypes(T1 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T2 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T3 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T4 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T5 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T6 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T7 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T8 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T9 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T10 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T11 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T12 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T13 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T14 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T15 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T16 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T17 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T18 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T19 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T20 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T21 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T22 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T23 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T24 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T25 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T26 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T27 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T28 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T29 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T30 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T31 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T32 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T33 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T34 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T35 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T36 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T37 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T38 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T39 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T40 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T41 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T42 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T43 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T44 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T45 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T46 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T47 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T48 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T49 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T50 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T51 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T52 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T53 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T54 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T55 Value) => ValueAsString = Value.ValueAsString;

    public bool IsT1 => Type == TypeIndicator.GetType<T1>();
    public bool IsT2 => Type == TypeIndicator.GetType<T2>();
    public bool IsT3 => Type == TypeIndicator.GetType<T3>();
    public bool IsT4 => Type == TypeIndicator.GetType<T4>();
    public bool IsT5 => Type == TypeIndicator.GetType<T5>();
    public bool IsT6 => Type == TypeIndicator.GetType<T6>();
    public bool IsT7 => Type == TypeIndicator.GetType<T7>();
    public bool IsT8 => Type == TypeIndicator.GetType<T8>();
    public bool IsT9 => Type == TypeIndicator.GetType<T9>();
    public bool IsT10 => Type == TypeIndicator.GetType<T10>();
    public bool IsT11 => Type == TypeIndicator.GetType<T11>();
    public bool IsT12 => Type == TypeIndicator.GetType<T12>();
    public bool IsT13 => Type == TypeIndicator.GetType<T13>();
    public bool IsT14 => Type == TypeIndicator.GetType<T14>();
    public bool IsT15 => Type == TypeIndicator.GetType<T15>();
    public bool IsT16 => Type == TypeIndicator.GetType<T16>();
    public bool IsT17 => Type == TypeIndicator.GetType<T17>();
    public bool IsT18 => Type == TypeIndicator.GetType<T18>();
    public bool IsT19 => Type == TypeIndicator.GetType<T19>();
    public bool IsT20 => Type == TypeIndicator.GetType<T20>();
    public bool IsT21 => Type == TypeIndicator.GetType<T21>();
    public bool IsT22 => Type == TypeIndicator.GetType<T22>();
    public bool IsT23 => Type == TypeIndicator.GetType<T23>();
    public bool IsT24 => Type == TypeIndicator.GetType<T24>();
    public bool IsT25 => Type == TypeIndicator.GetType<T25>();
    public bool IsT26 => Type == TypeIndicator.GetType<T26>();
    public bool IsT27 => Type == TypeIndicator.GetType<T27>();
    public bool IsT28 => Type == TypeIndicator.GetType<T28>();
    public bool IsT29 => Type == TypeIndicator.GetType<T29>();
    public bool IsT30 => Type == TypeIndicator.GetType<T30>();
    public bool IsT31 => Type == TypeIndicator.GetType<T31>();
    public bool IsT32 => Type == TypeIndicator.GetType<T32>();
    public bool IsT33 => Type == TypeIndicator.GetType<T33>();
    public bool IsT34 => Type == TypeIndicator.GetType<T34>();
    public bool IsT35 => Type == TypeIndicator.GetType<T35>();
    public bool IsT36 => Type == TypeIndicator.GetType<T36>();
    public bool IsT37 => Type == TypeIndicator.GetType<T37>();
    public bool IsT38 => Type == TypeIndicator.GetType<T38>();
    public bool IsT39 => Type == TypeIndicator.GetType<T39>();
    public bool IsT40 => Type == TypeIndicator.GetType<T40>();
    public bool IsT41 => Type == TypeIndicator.GetType<T41>();
    public bool IsT42 => Type == TypeIndicator.GetType<T42>();
    public bool IsT43 => Type == TypeIndicator.GetType<T43>();
    public bool IsT44 => Type == TypeIndicator.GetType<T44>();
    public bool IsT45 => Type == TypeIndicator.GetType<T45>();
    public bool IsT46 => Type == TypeIndicator.GetType<T46>();
    public bool IsT47 => Type == TypeIndicator.GetType<T47>();
    public bool IsT48 => Type == TypeIndicator.GetType<T48>();
    public bool IsT49 => Type == TypeIndicator.GetType<T49>();
    public bool IsT50 => Type == TypeIndicator.GetType<T50>();
    public bool IsT51 => Type == TypeIndicator.GetType<T51>();
    public bool IsT52 => Type == TypeIndicator.GetType<T52>();
    public bool IsT53 => Type == TypeIndicator.GetType<T53>();
    public bool IsT54 => Type == TypeIndicator.GetType<T54>();
    public bool IsT55 => Type == TypeIndicator.GetType<T55>();

    public T1 AsT1 => new StringSPWNExpr<T1>(ValueAsString).AsValue();
    public T2 AsT2 => new StringSPWNExpr<T2>(ValueAsString).AsValue();
    public T3 AsT3 => new StringSPWNExpr<T3>(ValueAsString).AsValue();
    public T4 AsT4 => new StringSPWNExpr<T4>(ValueAsString).AsValue();
    public T5 AsT5 => new StringSPWNExpr<T5>(ValueAsString).AsValue();
    public T6 AsT6 => new StringSPWNExpr<T6>(ValueAsString).AsValue();
    public T7 AsT7 => new StringSPWNExpr<T7>(ValueAsString).AsValue();
    public T8 AsT8 => new StringSPWNExpr<T8>(ValueAsString).AsValue();
    public T9 AsT9 => new StringSPWNExpr<T9>(ValueAsString).AsValue();
    public T10 AsT10 => new StringSPWNExpr<T10>(ValueAsString).AsValue();
    public T11 AsT11 => new StringSPWNExpr<T11>(ValueAsString).AsValue();
    public T12 AsT12 => new StringSPWNExpr<T12>(ValueAsString).AsValue();
    public T13 AsT13 => new StringSPWNExpr<T13>(ValueAsString).AsValue();
    public T14 AsT14 => new StringSPWNExpr<T14>(ValueAsString).AsValue();
    public T15 AsT15 => new StringSPWNExpr<T15>(ValueAsString).AsValue();
    public T16 AsT16 => new StringSPWNExpr<T16>(ValueAsString).AsValue();
    public T17 AsT17 => new StringSPWNExpr<T17>(ValueAsString).AsValue();
    public T18 AsT18 => new StringSPWNExpr<T18>(ValueAsString).AsValue();
    public T19 AsT19 => new StringSPWNExpr<T19>(ValueAsString).AsValue();
    public T20 AsT20 => new StringSPWNExpr<T20>(ValueAsString).AsValue();
    public T21 AsT21 => new StringSPWNExpr<T21>(ValueAsString).AsValue();
    public T22 AsT22 => new StringSPWNExpr<T22>(ValueAsString).AsValue();
    public T23 AsT23 => new StringSPWNExpr<T23>(ValueAsString).AsValue();
    public T24 AsT24 => new StringSPWNExpr<T24>(ValueAsString).AsValue();
    public T25 AsT25 => new StringSPWNExpr<T25>(ValueAsString).AsValue();
    public T26 AsT26 => new StringSPWNExpr<T26>(ValueAsString).AsValue();
    public T27 AsT27 => new StringSPWNExpr<T27>(ValueAsString).AsValue();
    public T28 AsT28 => new StringSPWNExpr<T28>(ValueAsString).AsValue();
    public T29 AsT29 => new StringSPWNExpr<T29>(ValueAsString).AsValue();
    public T30 AsT30 => new StringSPWNExpr<T30>(ValueAsString).AsValue();
    public T31 AsT31 => new StringSPWNExpr<T31>(ValueAsString).AsValue();
    public T32 AsT32 => new StringSPWNExpr<T32>(ValueAsString).AsValue();
    public T33 AsT33 => new StringSPWNExpr<T33>(ValueAsString).AsValue();
    public T34 AsT34 => new StringSPWNExpr<T34>(ValueAsString).AsValue();
    public T35 AsT35 => new StringSPWNExpr<T35>(ValueAsString).AsValue();
    public T36 AsT36 => new StringSPWNExpr<T36>(ValueAsString).AsValue();
    public T37 AsT37 => new StringSPWNExpr<T37>(ValueAsString).AsValue();
    public T38 AsT38 => new StringSPWNExpr<T38>(ValueAsString).AsValue();
    public T39 AsT39 => new StringSPWNExpr<T39>(ValueAsString).AsValue();
    public T40 AsT40 => new StringSPWNExpr<T40>(ValueAsString).AsValue();
    public T41 AsT41 => new StringSPWNExpr<T41>(ValueAsString).AsValue();
    public T42 AsT42 => new StringSPWNExpr<T42>(ValueAsString).AsValue();
    public T43 AsT43 => new StringSPWNExpr<T43>(ValueAsString).AsValue();
    public T44 AsT44 => new StringSPWNExpr<T44>(ValueAsString).AsValue();
    public T45 AsT45 => new StringSPWNExpr<T45>(ValueAsString).AsValue();
    public T46 AsT46 => new StringSPWNExpr<T46>(ValueAsString).AsValue();
    public T47 AsT47 => new StringSPWNExpr<T47>(ValueAsString).AsValue();
    public T48 AsT48 => new StringSPWNExpr<T48>(ValueAsString).AsValue();
    public T49 AsT49 => new StringSPWNExpr<T49>(ValueAsString).AsValue();
    public T50 AsT50 => new StringSPWNExpr<T50>(ValueAsString).AsValue();
    public T51 AsT51 => new StringSPWNExpr<T51>(ValueAsString).AsValue();
    public T52 AsT52 => new StringSPWNExpr<T52>(ValueAsString).AsValue();
    public T53 AsT53 => new StringSPWNExpr<T53>(ValueAsString).AsValue();
    public T54 AsT54 => new StringSPWNExpr<T54>(ValueAsString).AsValue();
    public T55 AsT55 => new StringSPWNExpr<T55>(ValueAsString).AsValue();

    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55>(T1 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55>(T2 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55>(T3 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55>(T4 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55>(T5 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55>(T6 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55>(T7 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55>(T8 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55>(T9 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55>(T10 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55>(T11 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55>(T12 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55>(T13 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55>(T14 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55>(T15 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55>(T16 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55>(T17 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55>(T18 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55>(T19 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55>(T20 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55>(T21 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55>(T22 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55>(T23 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55>(T24 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55>(T25 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55>(T26 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55>(T27 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55>(T28 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55>(T29 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55>(T30 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55>(T31 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55>(T32 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55>(T33 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55>(T34 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55>(T35 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55>(T36 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55>(T37 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55>(T38 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55>(T39 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55>(T40 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55>(T41 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55>(T42 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55>(T43 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55>(T44 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55>(T45 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55>(T46 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55>(T47 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55>(T48 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55>(T49 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55>(T50 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55>(T51 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55>(T52 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55>(T53 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55>(T54 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55>(T55 Value) => new(Value);
}

// Note UnionTypes is NOT a Built-in type in SPWN
[SPWNType("@typeunion")]
public class UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56> : SPWNValueBase
    where T1 : SPWNValueBase
    where T2 : SPWNValueBase
    where T3 : SPWNValueBase
    where T4 : SPWNValueBase
    where T5 : SPWNValueBase
    where T6 : SPWNValueBase
    where T7 : SPWNValueBase
    where T8 : SPWNValueBase
    where T9 : SPWNValueBase
    where T10 : SPWNValueBase
    where T11 : SPWNValueBase
    where T12 : SPWNValueBase
    where T13 : SPWNValueBase
    where T14 : SPWNValueBase
    where T15 : SPWNValueBase
    where T16 : SPWNValueBase
    where T17 : SPWNValueBase
    where T18 : SPWNValueBase
    where T19 : SPWNValueBase
    where T20 : SPWNValueBase
    where T21 : SPWNValueBase
    where T22 : SPWNValueBase
    where T23 : SPWNValueBase
    where T24 : SPWNValueBase
    where T25 : SPWNValueBase
    where T26 : SPWNValueBase
    where T27 : SPWNValueBase
    where T28 : SPWNValueBase
    where T29 : SPWNValueBase
    where T30 : SPWNValueBase
    where T31 : SPWNValueBase
    where T32 : SPWNValueBase
    where T33 : SPWNValueBase
    where T34 : SPWNValueBase
    where T35 : SPWNValueBase
    where T36 : SPWNValueBase
    where T37 : SPWNValueBase
    where T38 : SPWNValueBase
    where T39 : SPWNValueBase
    where T40 : SPWNValueBase
    where T41 : SPWNValueBase
    where T42 : SPWNValueBase
    where T43 : SPWNValueBase
    where T44 : SPWNValueBase
    where T45 : SPWNValueBase
    where T46 : SPWNValueBase
    where T47 : SPWNValueBase
    where T48 : SPWNValueBase
    where T49 : SPWNValueBase
    where T50 : SPWNValueBase
    where T51 : SPWNValueBase
    where T52 : SPWNValueBase
    where T53 : SPWNValueBase
    where T54 : SPWNValueBase
    where T55 : SPWNValueBase
    where T56 : SPWNValueBase
{
    public override string ValueAsString { get; protected set; }

    public UnionTypes(T1 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T2 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T3 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T4 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T5 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T6 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T7 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T8 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T9 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T10 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T11 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T12 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T13 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T14 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T15 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T16 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T17 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T18 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T19 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T20 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T21 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T22 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T23 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T24 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T25 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T26 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T27 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T28 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T29 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T30 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T31 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T32 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T33 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T34 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T35 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T36 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T37 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T38 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T39 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T40 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T41 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T42 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T43 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T44 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T45 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T46 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T47 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T48 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T49 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T50 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T51 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T52 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T53 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T54 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T55 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T56 Value) => ValueAsString = Value.ValueAsString;

    public bool IsT1 => Type == TypeIndicator.GetType<T1>();
    public bool IsT2 => Type == TypeIndicator.GetType<T2>();
    public bool IsT3 => Type == TypeIndicator.GetType<T3>();
    public bool IsT4 => Type == TypeIndicator.GetType<T4>();
    public bool IsT5 => Type == TypeIndicator.GetType<T5>();
    public bool IsT6 => Type == TypeIndicator.GetType<T6>();
    public bool IsT7 => Type == TypeIndicator.GetType<T7>();
    public bool IsT8 => Type == TypeIndicator.GetType<T8>();
    public bool IsT9 => Type == TypeIndicator.GetType<T9>();
    public bool IsT10 => Type == TypeIndicator.GetType<T10>();
    public bool IsT11 => Type == TypeIndicator.GetType<T11>();
    public bool IsT12 => Type == TypeIndicator.GetType<T12>();
    public bool IsT13 => Type == TypeIndicator.GetType<T13>();
    public bool IsT14 => Type == TypeIndicator.GetType<T14>();
    public bool IsT15 => Type == TypeIndicator.GetType<T15>();
    public bool IsT16 => Type == TypeIndicator.GetType<T16>();
    public bool IsT17 => Type == TypeIndicator.GetType<T17>();
    public bool IsT18 => Type == TypeIndicator.GetType<T18>();
    public bool IsT19 => Type == TypeIndicator.GetType<T19>();
    public bool IsT20 => Type == TypeIndicator.GetType<T20>();
    public bool IsT21 => Type == TypeIndicator.GetType<T21>();
    public bool IsT22 => Type == TypeIndicator.GetType<T22>();
    public bool IsT23 => Type == TypeIndicator.GetType<T23>();
    public bool IsT24 => Type == TypeIndicator.GetType<T24>();
    public bool IsT25 => Type == TypeIndicator.GetType<T25>();
    public bool IsT26 => Type == TypeIndicator.GetType<T26>();
    public bool IsT27 => Type == TypeIndicator.GetType<T27>();
    public bool IsT28 => Type == TypeIndicator.GetType<T28>();
    public bool IsT29 => Type == TypeIndicator.GetType<T29>();
    public bool IsT30 => Type == TypeIndicator.GetType<T30>();
    public bool IsT31 => Type == TypeIndicator.GetType<T31>();
    public bool IsT32 => Type == TypeIndicator.GetType<T32>();
    public bool IsT33 => Type == TypeIndicator.GetType<T33>();
    public bool IsT34 => Type == TypeIndicator.GetType<T34>();
    public bool IsT35 => Type == TypeIndicator.GetType<T35>();
    public bool IsT36 => Type == TypeIndicator.GetType<T36>();
    public bool IsT37 => Type == TypeIndicator.GetType<T37>();
    public bool IsT38 => Type == TypeIndicator.GetType<T38>();
    public bool IsT39 => Type == TypeIndicator.GetType<T39>();
    public bool IsT40 => Type == TypeIndicator.GetType<T40>();
    public bool IsT41 => Type == TypeIndicator.GetType<T41>();
    public bool IsT42 => Type == TypeIndicator.GetType<T42>();
    public bool IsT43 => Type == TypeIndicator.GetType<T43>();
    public bool IsT44 => Type == TypeIndicator.GetType<T44>();
    public bool IsT45 => Type == TypeIndicator.GetType<T45>();
    public bool IsT46 => Type == TypeIndicator.GetType<T46>();
    public bool IsT47 => Type == TypeIndicator.GetType<T47>();
    public bool IsT48 => Type == TypeIndicator.GetType<T48>();
    public bool IsT49 => Type == TypeIndicator.GetType<T49>();
    public bool IsT50 => Type == TypeIndicator.GetType<T50>();
    public bool IsT51 => Type == TypeIndicator.GetType<T51>();
    public bool IsT52 => Type == TypeIndicator.GetType<T52>();
    public bool IsT53 => Type == TypeIndicator.GetType<T53>();
    public bool IsT54 => Type == TypeIndicator.GetType<T54>();
    public bool IsT55 => Type == TypeIndicator.GetType<T55>();
    public bool IsT56 => Type == TypeIndicator.GetType<T56>();

    public T1 AsT1 => new StringSPWNExpr<T1>(ValueAsString).AsValue();
    public T2 AsT2 => new StringSPWNExpr<T2>(ValueAsString).AsValue();
    public T3 AsT3 => new StringSPWNExpr<T3>(ValueAsString).AsValue();
    public T4 AsT4 => new StringSPWNExpr<T4>(ValueAsString).AsValue();
    public T5 AsT5 => new StringSPWNExpr<T5>(ValueAsString).AsValue();
    public T6 AsT6 => new StringSPWNExpr<T6>(ValueAsString).AsValue();
    public T7 AsT7 => new StringSPWNExpr<T7>(ValueAsString).AsValue();
    public T8 AsT8 => new StringSPWNExpr<T8>(ValueAsString).AsValue();
    public T9 AsT9 => new StringSPWNExpr<T9>(ValueAsString).AsValue();
    public T10 AsT10 => new StringSPWNExpr<T10>(ValueAsString).AsValue();
    public T11 AsT11 => new StringSPWNExpr<T11>(ValueAsString).AsValue();
    public T12 AsT12 => new StringSPWNExpr<T12>(ValueAsString).AsValue();
    public T13 AsT13 => new StringSPWNExpr<T13>(ValueAsString).AsValue();
    public T14 AsT14 => new StringSPWNExpr<T14>(ValueAsString).AsValue();
    public T15 AsT15 => new StringSPWNExpr<T15>(ValueAsString).AsValue();
    public T16 AsT16 => new StringSPWNExpr<T16>(ValueAsString).AsValue();
    public T17 AsT17 => new StringSPWNExpr<T17>(ValueAsString).AsValue();
    public T18 AsT18 => new StringSPWNExpr<T18>(ValueAsString).AsValue();
    public T19 AsT19 => new StringSPWNExpr<T19>(ValueAsString).AsValue();
    public T20 AsT20 => new StringSPWNExpr<T20>(ValueAsString).AsValue();
    public T21 AsT21 => new StringSPWNExpr<T21>(ValueAsString).AsValue();
    public T22 AsT22 => new StringSPWNExpr<T22>(ValueAsString).AsValue();
    public T23 AsT23 => new StringSPWNExpr<T23>(ValueAsString).AsValue();
    public T24 AsT24 => new StringSPWNExpr<T24>(ValueAsString).AsValue();
    public T25 AsT25 => new StringSPWNExpr<T25>(ValueAsString).AsValue();
    public T26 AsT26 => new StringSPWNExpr<T26>(ValueAsString).AsValue();
    public T27 AsT27 => new StringSPWNExpr<T27>(ValueAsString).AsValue();
    public T28 AsT28 => new StringSPWNExpr<T28>(ValueAsString).AsValue();
    public T29 AsT29 => new StringSPWNExpr<T29>(ValueAsString).AsValue();
    public T30 AsT30 => new StringSPWNExpr<T30>(ValueAsString).AsValue();
    public T31 AsT31 => new StringSPWNExpr<T31>(ValueAsString).AsValue();
    public T32 AsT32 => new StringSPWNExpr<T32>(ValueAsString).AsValue();
    public T33 AsT33 => new StringSPWNExpr<T33>(ValueAsString).AsValue();
    public T34 AsT34 => new StringSPWNExpr<T34>(ValueAsString).AsValue();
    public T35 AsT35 => new StringSPWNExpr<T35>(ValueAsString).AsValue();
    public T36 AsT36 => new StringSPWNExpr<T36>(ValueAsString).AsValue();
    public T37 AsT37 => new StringSPWNExpr<T37>(ValueAsString).AsValue();
    public T38 AsT38 => new StringSPWNExpr<T38>(ValueAsString).AsValue();
    public T39 AsT39 => new StringSPWNExpr<T39>(ValueAsString).AsValue();
    public T40 AsT40 => new StringSPWNExpr<T40>(ValueAsString).AsValue();
    public T41 AsT41 => new StringSPWNExpr<T41>(ValueAsString).AsValue();
    public T42 AsT42 => new StringSPWNExpr<T42>(ValueAsString).AsValue();
    public T43 AsT43 => new StringSPWNExpr<T43>(ValueAsString).AsValue();
    public T44 AsT44 => new StringSPWNExpr<T44>(ValueAsString).AsValue();
    public T45 AsT45 => new StringSPWNExpr<T45>(ValueAsString).AsValue();
    public T46 AsT46 => new StringSPWNExpr<T46>(ValueAsString).AsValue();
    public T47 AsT47 => new StringSPWNExpr<T47>(ValueAsString).AsValue();
    public T48 AsT48 => new StringSPWNExpr<T48>(ValueAsString).AsValue();
    public T49 AsT49 => new StringSPWNExpr<T49>(ValueAsString).AsValue();
    public T50 AsT50 => new StringSPWNExpr<T50>(ValueAsString).AsValue();
    public T51 AsT51 => new StringSPWNExpr<T51>(ValueAsString).AsValue();
    public T52 AsT52 => new StringSPWNExpr<T52>(ValueAsString).AsValue();
    public T53 AsT53 => new StringSPWNExpr<T53>(ValueAsString).AsValue();
    public T54 AsT54 => new StringSPWNExpr<T54>(ValueAsString).AsValue();
    public T55 AsT55 => new StringSPWNExpr<T55>(ValueAsString).AsValue();
    public T56 AsT56 => new StringSPWNExpr<T56>(ValueAsString).AsValue();

    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56>(T1 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56>(T2 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56>(T3 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56>(T4 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56>(T5 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56>(T6 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56>(T7 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56>(T8 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56>(T9 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56>(T10 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56>(T11 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56>(T12 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56>(T13 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56>(T14 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56>(T15 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56>(T16 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56>(T17 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56>(T18 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56>(T19 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56>(T20 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56>(T21 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56>(T22 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56>(T23 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56>(T24 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56>(T25 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56>(T26 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56>(T27 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56>(T28 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56>(T29 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56>(T30 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56>(T31 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56>(T32 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56>(T33 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56>(T34 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56>(T35 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56>(T36 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56>(T37 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56>(T38 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56>(T39 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56>(T40 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56>(T41 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56>(T42 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56>(T43 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56>(T44 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56>(T45 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56>(T46 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56>(T47 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56>(T48 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56>(T49 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56>(T50 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56>(T51 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56>(T52 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56>(T53 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56>(T54 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56>(T55 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56>(T56 Value) => new(Value);
}

// Note UnionTypes is NOT a Built-in type in SPWN
[SPWNType("@typeunion")]
public class UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57> : SPWNValueBase
    where T1 : SPWNValueBase
    where T2 : SPWNValueBase
    where T3 : SPWNValueBase
    where T4 : SPWNValueBase
    where T5 : SPWNValueBase
    where T6 : SPWNValueBase
    where T7 : SPWNValueBase
    where T8 : SPWNValueBase
    where T9 : SPWNValueBase
    where T10 : SPWNValueBase
    where T11 : SPWNValueBase
    where T12 : SPWNValueBase
    where T13 : SPWNValueBase
    where T14 : SPWNValueBase
    where T15 : SPWNValueBase
    where T16 : SPWNValueBase
    where T17 : SPWNValueBase
    where T18 : SPWNValueBase
    where T19 : SPWNValueBase
    where T20 : SPWNValueBase
    where T21 : SPWNValueBase
    where T22 : SPWNValueBase
    where T23 : SPWNValueBase
    where T24 : SPWNValueBase
    where T25 : SPWNValueBase
    where T26 : SPWNValueBase
    where T27 : SPWNValueBase
    where T28 : SPWNValueBase
    where T29 : SPWNValueBase
    where T30 : SPWNValueBase
    where T31 : SPWNValueBase
    where T32 : SPWNValueBase
    where T33 : SPWNValueBase
    where T34 : SPWNValueBase
    where T35 : SPWNValueBase
    where T36 : SPWNValueBase
    where T37 : SPWNValueBase
    where T38 : SPWNValueBase
    where T39 : SPWNValueBase
    where T40 : SPWNValueBase
    where T41 : SPWNValueBase
    where T42 : SPWNValueBase
    where T43 : SPWNValueBase
    where T44 : SPWNValueBase
    where T45 : SPWNValueBase
    where T46 : SPWNValueBase
    where T47 : SPWNValueBase
    where T48 : SPWNValueBase
    where T49 : SPWNValueBase
    where T50 : SPWNValueBase
    where T51 : SPWNValueBase
    where T52 : SPWNValueBase
    where T53 : SPWNValueBase
    where T54 : SPWNValueBase
    where T55 : SPWNValueBase
    where T56 : SPWNValueBase
    where T57 : SPWNValueBase
{
    public override string ValueAsString { get; protected set; }

    public UnionTypes(T1 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T2 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T3 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T4 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T5 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T6 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T7 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T8 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T9 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T10 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T11 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T12 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T13 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T14 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T15 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T16 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T17 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T18 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T19 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T20 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T21 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T22 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T23 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T24 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T25 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T26 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T27 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T28 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T29 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T30 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T31 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T32 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T33 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T34 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T35 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T36 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T37 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T38 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T39 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T40 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T41 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T42 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T43 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T44 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T45 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T46 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T47 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T48 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T49 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T50 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T51 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T52 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T53 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T54 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T55 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T56 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T57 Value) => ValueAsString = Value.ValueAsString;

    public bool IsT1 => Type == TypeIndicator.GetType<T1>();
    public bool IsT2 => Type == TypeIndicator.GetType<T2>();
    public bool IsT3 => Type == TypeIndicator.GetType<T3>();
    public bool IsT4 => Type == TypeIndicator.GetType<T4>();
    public bool IsT5 => Type == TypeIndicator.GetType<T5>();
    public bool IsT6 => Type == TypeIndicator.GetType<T6>();
    public bool IsT7 => Type == TypeIndicator.GetType<T7>();
    public bool IsT8 => Type == TypeIndicator.GetType<T8>();
    public bool IsT9 => Type == TypeIndicator.GetType<T9>();
    public bool IsT10 => Type == TypeIndicator.GetType<T10>();
    public bool IsT11 => Type == TypeIndicator.GetType<T11>();
    public bool IsT12 => Type == TypeIndicator.GetType<T12>();
    public bool IsT13 => Type == TypeIndicator.GetType<T13>();
    public bool IsT14 => Type == TypeIndicator.GetType<T14>();
    public bool IsT15 => Type == TypeIndicator.GetType<T15>();
    public bool IsT16 => Type == TypeIndicator.GetType<T16>();
    public bool IsT17 => Type == TypeIndicator.GetType<T17>();
    public bool IsT18 => Type == TypeIndicator.GetType<T18>();
    public bool IsT19 => Type == TypeIndicator.GetType<T19>();
    public bool IsT20 => Type == TypeIndicator.GetType<T20>();
    public bool IsT21 => Type == TypeIndicator.GetType<T21>();
    public bool IsT22 => Type == TypeIndicator.GetType<T22>();
    public bool IsT23 => Type == TypeIndicator.GetType<T23>();
    public bool IsT24 => Type == TypeIndicator.GetType<T24>();
    public bool IsT25 => Type == TypeIndicator.GetType<T25>();
    public bool IsT26 => Type == TypeIndicator.GetType<T26>();
    public bool IsT27 => Type == TypeIndicator.GetType<T27>();
    public bool IsT28 => Type == TypeIndicator.GetType<T28>();
    public bool IsT29 => Type == TypeIndicator.GetType<T29>();
    public bool IsT30 => Type == TypeIndicator.GetType<T30>();
    public bool IsT31 => Type == TypeIndicator.GetType<T31>();
    public bool IsT32 => Type == TypeIndicator.GetType<T32>();
    public bool IsT33 => Type == TypeIndicator.GetType<T33>();
    public bool IsT34 => Type == TypeIndicator.GetType<T34>();
    public bool IsT35 => Type == TypeIndicator.GetType<T35>();
    public bool IsT36 => Type == TypeIndicator.GetType<T36>();
    public bool IsT37 => Type == TypeIndicator.GetType<T37>();
    public bool IsT38 => Type == TypeIndicator.GetType<T38>();
    public bool IsT39 => Type == TypeIndicator.GetType<T39>();
    public bool IsT40 => Type == TypeIndicator.GetType<T40>();
    public bool IsT41 => Type == TypeIndicator.GetType<T41>();
    public bool IsT42 => Type == TypeIndicator.GetType<T42>();
    public bool IsT43 => Type == TypeIndicator.GetType<T43>();
    public bool IsT44 => Type == TypeIndicator.GetType<T44>();
    public bool IsT45 => Type == TypeIndicator.GetType<T45>();
    public bool IsT46 => Type == TypeIndicator.GetType<T46>();
    public bool IsT47 => Type == TypeIndicator.GetType<T47>();
    public bool IsT48 => Type == TypeIndicator.GetType<T48>();
    public bool IsT49 => Type == TypeIndicator.GetType<T49>();
    public bool IsT50 => Type == TypeIndicator.GetType<T50>();
    public bool IsT51 => Type == TypeIndicator.GetType<T51>();
    public bool IsT52 => Type == TypeIndicator.GetType<T52>();
    public bool IsT53 => Type == TypeIndicator.GetType<T53>();
    public bool IsT54 => Type == TypeIndicator.GetType<T54>();
    public bool IsT55 => Type == TypeIndicator.GetType<T55>();
    public bool IsT56 => Type == TypeIndicator.GetType<T56>();
    public bool IsT57 => Type == TypeIndicator.GetType<T57>();

    public T1 AsT1 => new StringSPWNExpr<T1>(ValueAsString).AsValue();
    public T2 AsT2 => new StringSPWNExpr<T2>(ValueAsString).AsValue();
    public T3 AsT3 => new StringSPWNExpr<T3>(ValueAsString).AsValue();
    public T4 AsT4 => new StringSPWNExpr<T4>(ValueAsString).AsValue();
    public T5 AsT5 => new StringSPWNExpr<T5>(ValueAsString).AsValue();
    public T6 AsT6 => new StringSPWNExpr<T6>(ValueAsString).AsValue();
    public T7 AsT7 => new StringSPWNExpr<T7>(ValueAsString).AsValue();
    public T8 AsT8 => new StringSPWNExpr<T8>(ValueAsString).AsValue();
    public T9 AsT9 => new StringSPWNExpr<T9>(ValueAsString).AsValue();
    public T10 AsT10 => new StringSPWNExpr<T10>(ValueAsString).AsValue();
    public T11 AsT11 => new StringSPWNExpr<T11>(ValueAsString).AsValue();
    public T12 AsT12 => new StringSPWNExpr<T12>(ValueAsString).AsValue();
    public T13 AsT13 => new StringSPWNExpr<T13>(ValueAsString).AsValue();
    public T14 AsT14 => new StringSPWNExpr<T14>(ValueAsString).AsValue();
    public T15 AsT15 => new StringSPWNExpr<T15>(ValueAsString).AsValue();
    public T16 AsT16 => new StringSPWNExpr<T16>(ValueAsString).AsValue();
    public T17 AsT17 => new StringSPWNExpr<T17>(ValueAsString).AsValue();
    public T18 AsT18 => new StringSPWNExpr<T18>(ValueAsString).AsValue();
    public T19 AsT19 => new StringSPWNExpr<T19>(ValueAsString).AsValue();
    public T20 AsT20 => new StringSPWNExpr<T20>(ValueAsString).AsValue();
    public T21 AsT21 => new StringSPWNExpr<T21>(ValueAsString).AsValue();
    public T22 AsT22 => new StringSPWNExpr<T22>(ValueAsString).AsValue();
    public T23 AsT23 => new StringSPWNExpr<T23>(ValueAsString).AsValue();
    public T24 AsT24 => new StringSPWNExpr<T24>(ValueAsString).AsValue();
    public T25 AsT25 => new StringSPWNExpr<T25>(ValueAsString).AsValue();
    public T26 AsT26 => new StringSPWNExpr<T26>(ValueAsString).AsValue();
    public T27 AsT27 => new StringSPWNExpr<T27>(ValueAsString).AsValue();
    public T28 AsT28 => new StringSPWNExpr<T28>(ValueAsString).AsValue();
    public T29 AsT29 => new StringSPWNExpr<T29>(ValueAsString).AsValue();
    public T30 AsT30 => new StringSPWNExpr<T30>(ValueAsString).AsValue();
    public T31 AsT31 => new StringSPWNExpr<T31>(ValueAsString).AsValue();
    public T32 AsT32 => new StringSPWNExpr<T32>(ValueAsString).AsValue();
    public T33 AsT33 => new StringSPWNExpr<T33>(ValueAsString).AsValue();
    public T34 AsT34 => new StringSPWNExpr<T34>(ValueAsString).AsValue();
    public T35 AsT35 => new StringSPWNExpr<T35>(ValueAsString).AsValue();
    public T36 AsT36 => new StringSPWNExpr<T36>(ValueAsString).AsValue();
    public T37 AsT37 => new StringSPWNExpr<T37>(ValueAsString).AsValue();
    public T38 AsT38 => new StringSPWNExpr<T38>(ValueAsString).AsValue();
    public T39 AsT39 => new StringSPWNExpr<T39>(ValueAsString).AsValue();
    public T40 AsT40 => new StringSPWNExpr<T40>(ValueAsString).AsValue();
    public T41 AsT41 => new StringSPWNExpr<T41>(ValueAsString).AsValue();
    public T42 AsT42 => new StringSPWNExpr<T42>(ValueAsString).AsValue();
    public T43 AsT43 => new StringSPWNExpr<T43>(ValueAsString).AsValue();
    public T44 AsT44 => new StringSPWNExpr<T44>(ValueAsString).AsValue();
    public T45 AsT45 => new StringSPWNExpr<T45>(ValueAsString).AsValue();
    public T46 AsT46 => new StringSPWNExpr<T46>(ValueAsString).AsValue();
    public T47 AsT47 => new StringSPWNExpr<T47>(ValueAsString).AsValue();
    public T48 AsT48 => new StringSPWNExpr<T48>(ValueAsString).AsValue();
    public T49 AsT49 => new StringSPWNExpr<T49>(ValueAsString).AsValue();
    public T50 AsT50 => new StringSPWNExpr<T50>(ValueAsString).AsValue();
    public T51 AsT51 => new StringSPWNExpr<T51>(ValueAsString).AsValue();
    public T52 AsT52 => new StringSPWNExpr<T52>(ValueAsString).AsValue();
    public T53 AsT53 => new StringSPWNExpr<T53>(ValueAsString).AsValue();
    public T54 AsT54 => new StringSPWNExpr<T54>(ValueAsString).AsValue();
    public T55 AsT55 => new StringSPWNExpr<T55>(ValueAsString).AsValue();
    public T56 AsT56 => new StringSPWNExpr<T56>(ValueAsString).AsValue();
    public T57 AsT57 => new StringSPWNExpr<T57>(ValueAsString).AsValue();

    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57>(T1 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57>(T2 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57>(T3 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57>(T4 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57>(T5 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57>(T6 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57>(T7 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57>(T8 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57>(T9 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57>(T10 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57>(T11 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57>(T12 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57>(T13 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57>(T14 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57>(T15 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57>(T16 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57>(T17 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57>(T18 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57>(T19 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57>(T20 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57>(T21 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57>(T22 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57>(T23 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57>(T24 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57>(T25 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57>(T26 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57>(T27 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57>(T28 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57>(T29 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57>(T30 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57>(T31 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57>(T32 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57>(T33 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57>(T34 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57>(T35 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57>(T36 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57>(T37 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57>(T38 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57>(T39 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57>(T40 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57>(T41 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57>(T42 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57>(T43 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57>(T44 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57>(T45 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57>(T46 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57>(T47 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57>(T48 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57>(T49 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57>(T50 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57>(T51 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57>(T52 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57>(T53 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57>(T54 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57>(T55 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57>(T56 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57>(T57 Value) => new(Value);
}

// Note UnionTypes is NOT a Built-in type in SPWN
[SPWNType("@typeunion")]
public class UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58> : SPWNValueBase
    where T1 : SPWNValueBase
    where T2 : SPWNValueBase
    where T3 : SPWNValueBase
    where T4 : SPWNValueBase
    where T5 : SPWNValueBase
    where T6 : SPWNValueBase
    where T7 : SPWNValueBase
    where T8 : SPWNValueBase
    where T9 : SPWNValueBase
    where T10 : SPWNValueBase
    where T11 : SPWNValueBase
    where T12 : SPWNValueBase
    where T13 : SPWNValueBase
    where T14 : SPWNValueBase
    where T15 : SPWNValueBase
    where T16 : SPWNValueBase
    where T17 : SPWNValueBase
    where T18 : SPWNValueBase
    where T19 : SPWNValueBase
    where T20 : SPWNValueBase
    where T21 : SPWNValueBase
    where T22 : SPWNValueBase
    where T23 : SPWNValueBase
    where T24 : SPWNValueBase
    where T25 : SPWNValueBase
    where T26 : SPWNValueBase
    where T27 : SPWNValueBase
    where T28 : SPWNValueBase
    where T29 : SPWNValueBase
    where T30 : SPWNValueBase
    where T31 : SPWNValueBase
    where T32 : SPWNValueBase
    where T33 : SPWNValueBase
    where T34 : SPWNValueBase
    where T35 : SPWNValueBase
    where T36 : SPWNValueBase
    where T37 : SPWNValueBase
    where T38 : SPWNValueBase
    where T39 : SPWNValueBase
    where T40 : SPWNValueBase
    where T41 : SPWNValueBase
    where T42 : SPWNValueBase
    where T43 : SPWNValueBase
    where T44 : SPWNValueBase
    where T45 : SPWNValueBase
    where T46 : SPWNValueBase
    where T47 : SPWNValueBase
    where T48 : SPWNValueBase
    where T49 : SPWNValueBase
    where T50 : SPWNValueBase
    where T51 : SPWNValueBase
    where T52 : SPWNValueBase
    where T53 : SPWNValueBase
    where T54 : SPWNValueBase
    where T55 : SPWNValueBase
    where T56 : SPWNValueBase
    where T57 : SPWNValueBase
    where T58 : SPWNValueBase
{
    public override string ValueAsString { get; protected set; }

    public UnionTypes(T1 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T2 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T3 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T4 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T5 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T6 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T7 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T8 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T9 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T10 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T11 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T12 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T13 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T14 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T15 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T16 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T17 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T18 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T19 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T20 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T21 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T22 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T23 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T24 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T25 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T26 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T27 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T28 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T29 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T30 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T31 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T32 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T33 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T34 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T35 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T36 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T37 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T38 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T39 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T40 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T41 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T42 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T43 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T44 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T45 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T46 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T47 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T48 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T49 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T50 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T51 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T52 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T53 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T54 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T55 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T56 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T57 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T58 Value) => ValueAsString = Value.ValueAsString;

    public bool IsT1 => Type == TypeIndicator.GetType<T1>();
    public bool IsT2 => Type == TypeIndicator.GetType<T2>();
    public bool IsT3 => Type == TypeIndicator.GetType<T3>();
    public bool IsT4 => Type == TypeIndicator.GetType<T4>();
    public bool IsT5 => Type == TypeIndicator.GetType<T5>();
    public bool IsT6 => Type == TypeIndicator.GetType<T6>();
    public bool IsT7 => Type == TypeIndicator.GetType<T7>();
    public bool IsT8 => Type == TypeIndicator.GetType<T8>();
    public bool IsT9 => Type == TypeIndicator.GetType<T9>();
    public bool IsT10 => Type == TypeIndicator.GetType<T10>();
    public bool IsT11 => Type == TypeIndicator.GetType<T11>();
    public bool IsT12 => Type == TypeIndicator.GetType<T12>();
    public bool IsT13 => Type == TypeIndicator.GetType<T13>();
    public bool IsT14 => Type == TypeIndicator.GetType<T14>();
    public bool IsT15 => Type == TypeIndicator.GetType<T15>();
    public bool IsT16 => Type == TypeIndicator.GetType<T16>();
    public bool IsT17 => Type == TypeIndicator.GetType<T17>();
    public bool IsT18 => Type == TypeIndicator.GetType<T18>();
    public bool IsT19 => Type == TypeIndicator.GetType<T19>();
    public bool IsT20 => Type == TypeIndicator.GetType<T20>();
    public bool IsT21 => Type == TypeIndicator.GetType<T21>();
    public bool IsT22 => Type == TypeIndicator.GetType<T22>();
    public bool IsT23 => Type == TypeIndicator.GetType<T23>();
    public bool IsT24 => Type == TypeIndicator.GetType<T24>();
    public bool IsT25 => Type == TypeIndicator.GetType<T25>();
    public bool IsT26 => Type == TypeIndicator.GetType<T26>();
    public bool IsT27 => Type == TypeIndicator.GetType<T27>();
    public bool IsT28 => Type == TypeIndicator.GetType<T28>();
    public bool IsT29 => Type == TypeIndicator.GetType<T29>();
    public bool IsT30 => Type == TypeIndicator.GetType<T30>();
    public bool IsT31 => Type == TypeIndicator.GetType<T31>();
    public bool IsT32 => Type == TypeIndicator.GetType<T32>();
    public bool IsT33 => Type == TypeIndicator.GetType<T33>();
    public bool IsT34 => Type == TypeIndicator.GetType<T34>();
    public bool IsT35 => Type == TypeIndicator.GetType<T35>();
    public bool IsT36 => Type == TypeIndicator.GetType<T36>();
    public bool IsT37 => Type == TypeIndicator.GetType<T37>();
    public bool IsT38 => Type == TypeIndicator.GetType<T38>();
    public bool IsT39 => Type == TypeIndicator.GetType<T39>();
    public bool IsT40 => Type == TypeIndicator.GetType<T40>();
    public bool IsT41 => Type == TypeIndicator.GetType<T41>();
    public bool IsT42 => Type == TypeIndicator.GetType<T42>();
    public bool IsT43 => Type == TypeIndicator.GetType<T43>();
    public bool IsT44 => Type == TypeIndicator.GetType<T44>();
    public bool IsT45 => Type == TypeIndicator.GetType<T45>();
    public bool IsT46 => Type == TypeIndicator.GetType<T46>();
    public bool IsT47 => Type == TypeIndicator.GetType<T47>();
    public bool IsT48 => Type == TypeIndicator.GetType<T48>();
    public bool IsT49 => Type == TypeIndicator.GetType<T49>();
    public bool IsT50 => Type == TypeIndicator.GetType<T50>();
    public bool IsT51 => Type == TypeIndicator.GetType<T51>();
    public bool IsT52 => Type == TypeIndicator.GetType<T52>();
    public bool IsT53 => Type == TypeIndicator.GetType<T53>();
    public bool IsT54 => Type == TypeIndicator.GetType<T54>();
    public bool IsT55 => Type == TypeIndicator.GetType<T55>();
    public bool IsT56 => Type == TypeIndicator.GetType<T56>();
    public bool IsT57 => Type == TypeIndicator.GetType<T57>();
    public bool IsT58 => Type == TypeIndicator.GetType<T58>();

    public T1 AsT1 => new StringSPWNExpr<T1>(ValueAsString).AsValue();
    public T2 AsT2 => new StringSPWNExpr<T2>(ValueAsString).AsValue();
    public T3 AsT3 => new StringSPWNExpr<T3>(ValueAsString).AsValue();
    public T4 AsT4 => new StringSPWNExpr<T4>(ValueAsString).AsValue();
    public T5 AsT5 => new StringSPWNExpr<T5>(ValueAsString).AsValue();
    public T6 AsT6 => new StringSPWNExpr<T6>(ValueAsString).AsValue();
    public T7 AsT7 => new StringSPWNExpr<T7>(ValueAsString).AsValue();
    public T8 AsT8 => new StringSPWNExpr<T8>(ValueAsString).AsValue();
    public T9 AsT9 => new StringSPWNExpr<T9>(ValueAsString).AsValue();
    public T10 AsT10 => new StringSPWNExpr<T10>(ValueAsString).AsValue();
    public T11 AsT11 => new StringSPWNExpr<T11>(ValueAsString).AsValue();
    public T12 AsT12 => new StringSPWNExpr<T12>(ValueAsString).AsValue();
    public T13 AsT13 => new StringSPWNExpr<T13>(ValueAsString).AsValue();
    public T14 AsT14 => new StringSPWNExpr<T14>(ValueAsString).AsValue();
    public T15 AsT15 => new StringSPWNExpr<T15>(ValueAsString).AsValue();
    public T16 AsT16 => new StringSPWNExpr<T16>(ValueAsString).AsValue();
    public T17 AsT17 => new StringSPWNExpr<T17>(ValueAsString).AsValue();
    public T18 AsT18 => new StringSPWNExpr<T18>(ValueAsString).AsValue();
    public T19 AsT19 => new StringSPWNExpr<T19>(ValueAsString).AsValue();
    public T20 AsT20 => new StringSPWNExpr<T20>(ValueAsString).AsValue();
    public T21 AsT21 => new StringSPWNExpr<T21>(ValueAsString).AsValue();
    public T22 AsT22 => new StringSPWNExpr<T22>(ValueAsString).AsValue();
    public T23 AsT23 => new StringSPWNExpr<T23>(ValueAsString).AsValue();
    public T24 AsT24 => new StringSPWNExpr<T24>(ValueAsString).AsValue();
    public T25 AsT25 => new StringSPWNExpr<T25>(ValueAsString).AsValue();
    public T26 AsT26 => new StringSPWNExpr<T26>(ValueAsString).AsValue();
    public T27 AsT27 => new StringSPWNExpr<T27>(ValueAsString).AsValue();
    public T28 AsT28 => new StringSPWNExpr<T28>(ValueAsString).AsValue();
    public T29 AsT29 => new StringSPWNExpr<T29>(ValueAsString).AsValue();
    public T30 AsT30 => new StringSPWNExpr<T30>(ValueAsString).AsValue();
    public T31 AsT31 => new StringSPWNExpr<T31>(ValueAsString).AsValue();
    public T32 AsT32 => new StringSPWNExpr<T32>(ValueAsString).AsValue();
    public T33 AsT33 => new StringSPWNExpr<T33>(ValueAsString).AsValue();
    public T34 AsT34 => new StringSPWNExpr<T34>(ValueAsString).AsValue();
    public T35 AsT35 => new StringSPWNExpr<T35>(ValueAsString).AsValue();
    public T36 AsT36 => new StringSPWNExpr<T36>(ValueAsString).AsValue();
    public T37 AsT37 => new StringSPWNExpr<T37>(ValueAsString).AsValue();
    public T38 AsT38 => new StringSPWNExpr<T38>(ValueAsString).AsValue();
    public T39 AsT39 => new StringSPWNExpr<T39>(ValueAsString).AsValue();
    public T40 AsT40 => new StringSPWNExpr<T40>(ValueAsString).AsValue();
    public T41 AsT41 => new StringSPWNExpr<T41>(ValueAsString).AsValue();
    public T42 AsT42 => new StringSPWNExpr<T42>(ValueAsString).AsValue();
    public T43 AsT43 => new StringSPWNExpr<T43>(ValueAsString).AsValue();
    public T44 AsT44 => new StringSPWNExpr<T44>(ValueAsString).AsValue();
    public T45 AsT45 => new StringSPWNExpr<T45>(ValueAsString).AsValue();
    public T46 AsT46 => new StringSPWNExpr<T46>(ValueAsString).AsValue();
    public T47 AsT47 => new StringSPWNExpr<T47>(ValueAsString).AsValue();
    public T48 AsT48 => new StringSPWNExpr<T48>(ValueAsString).AsValue();
    public T49 AsT49 => new StringSPWNExpr<T49>(ValueAsString).AsValue();
    public T50 AsT50 => new StringSPWNExpr<T50>(ValueAsString).AsValue();
    public T51 AsT51 => new StringSPWNExpr<T51>(ValueAsString).AsValue();
    public T52 AsT52 => new StringSPWNExpr<T52>(ValueAsString).AsValue();
    public T53 AsT53 => new StringSPWNExpr<T53>(ValueAsString).AsValue();
    public T54 AsT54 => new StringSPWNExpr<T54>(ValueAsString).AsValue();
    public T55 AsT55 => new StringSPWNExpr<T55>(ValueAsString).AsValue();
    public T56 AsT56 => new StringSPWNExpr<T56>(ValueAsString).AsValue();
    public T57 AsT57 => new StringSPWNExpr<T57>(ValueAsString).AsValue();
    public T58 AsT58 => new StringSPWNExpr<T58>(ValueAsString).AsValue();

    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58>(T1 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58>(T2 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58>(T3 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58>(T4 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58>(T5 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58>(T6 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58>(T7 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58>(T8 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58>(T9 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58>(T10 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58>(T11 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58>(T12 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58>(T13 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58>(T14 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58>(T15 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58>(T16 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58>(T17 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58>(T18 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58>(T19 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58>(T20 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58>(T21 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58>(T22 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58>(T23 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58>(T24 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58>(T25 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58>(T26 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58>(T27 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58>(T28 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58>(T29 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58>(T30 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58>(T31 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58>(T32 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58>(T33 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58>(T34 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58>(T35 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58>(T36 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58>(T37 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58>(T38 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58>(T39 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58>(T40 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58>(T41 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58>(T42 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58>(T43 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58>(T44 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58>(T45 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58>(T46 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58>(T47 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58>(T48 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58>(T49 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58>(T50 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58>(T51 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58>(T52 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58>(T53 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58>(T54 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58>(T55 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58>(T56 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58>(T57 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58>(T58 Value) => new(Value);
}

// Note UnionTypes is NOT a Built-in type in SPWN
[SPWNType("@typeunion")]
public class UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59> : SPWNValueBase
    where T1 : SPWNValueBase
    where T2 : SPWNValueBase
    where T3 : SPWNValueBase
    where T4 : SPWNValueBase
    where T5 : SPWNValueBase
    where T6 : SPWNValueBase
    where T7 : SPWNValueBase
    where T8 : SPWNValueBase
    where T9 : SPWNValueBase
    where T10 : SPWNValueBase
    where T11 : SPWNValueBase
    where T12 : SPWNValueBase
    where T13 : SPWNValueBase
    where T14 : SPWNValueBase
    where T15 : SPWNValueBase
    where T16 : SPWNValueBase
    where T17 : SPWNValueBase
    where T18 : SPWNValueBase
    where T19 : SPWNValueBase
    where T20 : SPWNValueBase
    where T21 : SPWNValueBase
    where T22 : SPWNValueBase
    where T23 : SPWNValueBase
    where T24 : SPWNValueBase
    where T25 : SPWNValueBase
    where T26 : SPWNValueBase
    where T27 : SPWNValueBase
    where T28 : SPWNValueBase
    where T29 : SPWNValueBase
    where T30 : SPWNValueBase
    where T31 : SPWNValueBase
    where T32 : SPWNValueBase
    where T33 : SPWNValueBase
    where T34 : SPWNValueBase
    where T35 : SPWNValueBase
    where T36 : SPWNValueBase
    where T37 : SPWNValueBase
    where T38 : SPWNValueBase
    where T39 : SPWNValueBase
    where T40 : SPWNValueBase
    where T41 : SPWNValueBase
    where T42 : SPWNValueBase
    where T43 : SPWNValueBase
    where T44 : SPWNValueBase
    where T45 : SPWNValueBase
    where T46 : SPWNValueBase
    where T47 : SPWNValueBase
    where T48 : SPWNValueBase
    where T49 : SPWNValueBase
    where T50 : SPWNValueBase
    where T51 : SPWNValueBase
    where T52 : SPWNValueBase
    where T53 : SPWNValueBase
    where T54 : SPWNValueBase
    where T55 : SPWNValueBase
    where T56 : SPWNValueBase
    where T57 : SPWNValueBase
    where T58 : SPWNValueBase
    where T59 : SPWNValueBase
{
    public override string ValueAsString { get; protected set; }

    public UnionTypes(T1 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T2 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T3 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T4 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T5 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T6 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T7 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T8 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T9 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T10 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T11 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T12 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T13 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T14 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T15 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T16 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T17 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T18 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T19 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T20 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T21 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T22 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T23 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T24 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T25 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T26 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T27 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T28 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T29 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T30 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T31 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T32 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T33 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T34 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T35 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T36 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T37 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T38 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T39 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T40 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T41 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T42 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T43 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T44 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T45 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T46 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T47 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T48 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T49 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T50 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T51 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T52 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T53 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T54 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T55 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T56 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T57 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T58 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T59 Value) => ValueAsString = Value.ValueAsString;

    public bool IsT1 => Type == TypeIndicator.GetType<T1>();
    public bool IsT2 => Type == TypeIndicator.GetType<T2>();
    public bool IsT3 => Type == TypeIndicator.GetType<T3>();
    public bool IsT4 => Type == TypeIndicator.GetType<T4>();
    public bool IsT5 => Type == TypeIndicator.GetType<T5>();
    public bool IsT6 => Type == TypeIndicator.GetType<T6>();
    public bool IsT7 => Type == TypeIndicator.GetType<T7>();
    public bool IsT8 => Type == TypeIndicator.GetType<T8>();
    public bool IsT9 => Type == TypeIndicator.GetType<T9>();
    public bool IsT10 => Type == TypeIndicator.GetType<T10>();
    public bool IsT11 => Type == TypeIndicator.GetType<T11>();
    public bool IsT12 => Type == TypeIndicator.GetType<T12>();
    public bool IsT13 => Type == TypeIndicator.GetType<T13>();
    public bool IsT14 => Type == TypeIndicator.GetType<T14>();
    public bool IsT15 => Type == TypeIndicator.GetType<T15>();
    public bool IsT16 => Type == TypeIndicator.GetType<T16>();
    public bool IsT17 => Type == TypeIndicator.GetType<T17>();
    public bool IsT18 => Type == TypeIndicator.GetType<T18>();
    public bool IsT19 => Type == TypeIndicator.GetType<T19>();
    public bool IsT20 => Type == TypeIndicator.GetType<T20>();
    public bool IsT21 => Type == TypeIndicator.GetType<T21>();
    public bool IsT22 => Type == TypeIndicator.GetType<T22>();
    public bool IsT23 => Type == TypeIndicator.GetType<T23>();
    public bool IsT24 => Type == TypeIndicator.GetType<T24>();
    public bool IsT25 => Type == TypeIndicator.GetType<T25>();
    public bool IsT26 => Type == TypeIndicator.GetType<T26>();
    public bool IsT27 => Type == TypeIndicator.GetType<T27>();
    public bool IsT28 => Type == TypeIndicator.GetType<T28>();
    public bool IsT29 => Type == TypeIndicator.GetType<T29>();
    public bool IsT30 => Type == TypeIndicator.GetType<T30>();
    public bool IsT31 => Type == TypeIndicator.GetType<T31>();
    public bool IsT32 => Type == TypeIndicator.GetType<T32>();
    public bool IsT33 => Type == TypeIndicator.GetType<T33>();
    public bool IsT34 => Type == TypeIndicator.GetType<T34>();
    public bool IsT35 => Type == TypeIndicator.GetType<T35>();
    public bool IsT36 => Type == TypeIndicator.GetType<T36>();
    public bool IsT37 => Type == TypeIndicator.GetType<T37>();
    public bool IsT38 => Type == TypeIndicator.GetType<T38>();
    public bool IsT39 => Type == TypeIndicator.GetType<T39>();
    public bool IsT40 => Type == TypeIndicator.GetType<T40>();
    public bool IsT41 => Type == TypeIndicator.GetType<T41>();
    public bool IsT42 => Type == TypeIndicator.GetType<T42>();
    public bool IsT43 => Type == TypeIndicator.GetType<T43>();
    public bool IsT44 => Type == TypeIndicator.GetType<T44>();
    public bool IsT45 => Type == TypeIndicator.GetType<T45>();
    public bool IsT46 => Type == TypeIndicator.GetType<T46>();
    public bool IsT47 => Type == TypeIndicator.GetType<T47>();
    public bool IsT48 => Type == TypeIndicator.GetType<T48>();
    public bool IsT49 => Type == TypeIndicator.GetType<T49>();
    public bool IsT50 => Type == TypeIndicator.GetType<T50>();
    public bool IsT51 => Type == TypeIndicator.GetType<T51>();
    public bool IsT52 => Type == TypeIndicator.GetType<T52>();
    public bool IsT53 => Type == TypeIndicator.GetType<T53>();
    public bool IsT54 => Type == TypeIndicator.GetType<T54>();
    public bool IsT55 => Type == TypeIndicator.GetType<T55>();
    public bool IsT56 => Type == TypeIndicator.GetType<T56>();
    public bool IsT57 => Type == TypeIndicator.GetType<T57>();
    public bool IsT58 => Type == TypeIndicator.GetType<T58>();
    public bool IsT59 => Type == TypeIndicator.GetType<T59>();

    public T1 AsT1 => new StringSPWNExpr<T1>(ValueAsString).AsValue();
    public T2 AsT2 => new StringSPWNExpr<T2>(ValueAsString).AsValue();
    public T3 AsT3 => new StringSPWNExpr<T3>(ValueAsString).AsValue();
    public T4 AsT4 => new StringSPWNExpr<T4>(ValueAsString).AsValue();
    public T5 AsT5 => new StringSPWNExpr<T5>(ValueAsString).AsValue();
    public T6 AsT6 => new StringSPWNExpr<T6>(ValueAsString).AsValue();
    public T7 AsT7 => new StringSPWNExpr<T7>(ValueAsString).AsValue();
    public T8 AsT8 => new StringSPWNExpr<T8>(ValueAsString).AsValue();
    public T9 AsT9 => new StringSPWNExpr<T9>(ValueAsString).AsValue();
    public T10 AsT10 => new StringSPWNExpr<T10>(ValueAsString).AsValue();
    public T11 AsT11 => new StringSPWNExpr<T11>(ValueAsString).AsValue();
    public T12 AsT12 => new StringSPWNExpr<T12>(ValueAsString).AsValue();
    public T13 AsT13 => new StringSPWNExpr<T13>(ValueAsString).AsValue();
    public T14 AsT14 => new StringSPWNExpr<T14>(ValueAsString).AsValue();
    public T15 AsT15 => new StringSPWNExpr<T15>(ValueAsString).AsValue();
    public T16 AsT16 => new StringSPWNExpr<T16>(ValueAsString).AsValue();
    public T17 AsT17 => new StringSPWNExpr<T17>(ValueAsString).AsValue();
    public T18 AsT18 => new StringSPWNExpr<T18>(ValueAsString).AsValue();
    public T19 AsT19 => new StringSPWNExpr<T19>(ValueAsString).AsValue();
    public T20 AsT20 => new StringSPWNExpr<T20>(ValueAsString).AsValue();
    public T21 AsT21 => new StringSPWNExpr<T21>(ValueAsString).AsValue();
    public T22 AsT22 => new StringSPWNExpr<T22>(ValueAsString).AsValue();
    public T23 AsT23 => new StringSPWNExpr<T23>(ValueAsString).AsValue();
    public T24 AsT24 => new StringSPWNExpr<T24>(ValueAsString).AsValue();
    public T25 AsT25 => new StringSPWNExpr<T25>(ValueAsString).AsValue();
    public T26 AsT26 => new StringSPWNExpr<T26>(ValueAsString).AsValue();
    public T27 AsT27 => new StringSPWNExpr<T27>(ValueAsString).AsValue();
    public T28 AsT28 => new StringSPWNExpr<T28>(ValueAsString).AsValue();
    public T29 AsT29 => new StringSPWNExpr<T29>(ValueAsString).AsValue();
    public T30 AsT30 => new StringSPWNExpr<T30>(ValueAsString).AsValue();
    public T31 AsT31 => new StringSPWNExpr<T31>(ValueAsString).AsValue();
    public T32 AsT32 => new StringSPWNExpr<T32>(ValueAsString).AsValue();
    public T33 AsT33 => new StringSPWNExpr<T33>(ValueAsString).AsValue();
    public T34 AsT34 => new StringSPWNExpr<T34>(ValueAsString).AsValue();
    public T35 AsT35 => new StringSPWNExpr<T35>(ValueAsString).AsValue();
    public T36 AsT36 => new StringSPWNExpr<T36>(ValueAsString).AsValue();
    public T37 AsT37 => new StringSPWNExpr<T37>(ValueAsString).AsValue();
    public T38 AsT38 => new StringSPWNExpr<T38>(ValueAsString).AsValue();
    public T39 AsT39 => new StringSPWNExpr<T39>(ValueAsString).AsValue();
    public T40 AsT40 => new StringSPWNExpr<T40>(ValueAsString).AsValue();
    public T41 AsT41 => new StringSPWNExpr<T41>(ValueAsString).AsValue();
    public T42 AsT42 => new StringSPWNExpr<T42>(ValueAsString).AsValue();
    public T43 AsT43 => new StringSPWNExpr<T43>(ValueAsString).AsValue();
    public T44 AsT44 => new StringSPWNExpr<T44>(ValueAsString).AsValue();
    public T45 AsT45 => new StringSPWNExpr<T45>(ValueAsString).AsValue();
    public T46 AsT46 => new StringSPWNExpr<T46>(ValueAsString).AsValue();
    public T47 AsT47 => new StringSPWNExpr<T47>(ValueAsString).AsValue();
    public T48 AsT48 => new StringSPWNExpr<T48>(ValueAsString).AsValue();
    public T49 AsT49 => new StringSPWNExpr<T49>(ValueAsString).AsValue();
    public T50 AsT50 => new StringSPWNExpr<T50>(ValueAsString).AsValue();
    public T51 AsT51 => new StringSPWNExpr<T51>(ValueAsString).AsValue();
    public T52 AsT52 => new StringSPWNExpr<T52>(ValueAsString).AsValue();
    public T53 AsT53 => new StringSPWNExpr<T53>(ValueAsString).AsValue();
    public T54 AsT54 => new StringSPWNExpr<T54>(ValueAsString).AsValue();
    public T55 AsT55 => new StringSPWNExpr<T55>(ValueAsString).AsValue();
    public T56 AsT56 => new StringSPWNExpr<T56>(ValueAsString).AsValue();
    public T57 AsT57 => new StringSPWNExpr<T57>(ValueAsString).AsValue();
    public T58 AsT58 => new StringSPWNExpr<T58>(ValueAsString).AsValue();
    public T59 AsT59 => new StringSPWNExpr<T59>(ValueAsString).AsValue();

    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59>(T1 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59>(T2 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59>(T3 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59>(T4 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59>(T5 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59>(T6 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59>(T7 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59>(T8 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59>(T9 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59>(T10 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59>(T11 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59>(T12 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59>(T13 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59>(T14 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59>(T15 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59>(T16 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59>(T17 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59>(T18 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59>(T19 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59>(T20 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59>(T21 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59>(T22 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59>(T23 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59>(T24 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59>(T25 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59>(T26 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59>(T27 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59>(T28 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59>(T29 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59>(T30 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59>(T31 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59>(T32 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59>(T33 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59>(T34 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59>(T35 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59>(T36 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59>(T37 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59>(T38 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59>(T39 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59>(T40 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59>(T41 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59>(T42 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59>(T43 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59>(T44 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59>(T45 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59>(T46 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59>(T47 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59>(T48 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59>(T49 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59>(T50 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59>(T51 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59>(T52 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59>(T53 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59>(T54 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59>(T55 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59>(T56 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59>(T57 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59>(T58 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59>(T59 Value) => new(Value);
}

// Note UnionTypes is NOT a Built-in type in SPWN
[SPWNType("@typeunion")]
public class UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60> : SPWNValueBase
    where T1 : SPWNValueBase
    where T2 : SPWNValueBase
    where T3 : SPWNValueBase
    where T4 : SPWNValueBase
    where T5 : SPWNValueBase
    where T6 : SPWNValueBase
    where T7 : SPWNValueBase
    where T8 : SPWNValueBase
    where T9 : SPWNValueBase
    where T10 : SPWNValueBase
    where T11 : SPWNValueBase
    where T12 : SPWNValueBase
    where T13 : SPWNValueBase
    where T14 : SPWNValueBase
    where T15 : SPWNValueBase
    where T16 : SPWNValueBase
    where T17 : SPWNValueBase
    where T18 : SPWNValueBase
    where T19 : SPWNValueBase
    where T20 : SPWNValueBase
    where T21 : SPWNValueBase
    where T22 : SPWNValueBase
    where T23 : SPWNValueBase
    where T24 : SPWNValueBase
    where T25 : SPWNValueBase
    where T26 : SPWNValueBase
    where T27 : SPWNValueBase
    where T28 : SPWNValueBase
    where T29 : SPWNValueBase
    where T30 : SPWNValueBase
    where T31 : SPWNValueBase
    where T32 : SPWNValueBase
    where T33 : SPWNValueBase
    where T34 : SPWNValueBase
    where T35 : SPWNValueBase
    where T36 : SPWNValueBase
    where T37 : SPWNValueBase
    where T38 : SPWNValueBase
    where T39 : SPWNValueBase
    where T40 : SPWNValueBase
    where T41 : SPWNValueBase
    where T42 : SPWNValueBase
    where T43 : SPWNValueBase
    where T44 : SPWNValueBase
    where T45 : SPWNValueBase
    where T46 : SPWNValueBase
    where T47 : SPWNValueBase
    where T48 : SPWNValueBase
    where T49 : SPWNValueBase
    where T50 : SPWNValueBase
    where T51 : SPWNValueBase
    where T52 : SPWNValueBase
    where T53 : SPWNValueBase
    where T54 : SPWNValueBase
    where T55 : SPWNValueBase
    where T56 : SPWNValueBase
    where T57 : SPWNValueBase
    where T58 : SPWNValueBase
    where T59 : SPWNValueBase
    where T60 : SPWNValueBase
{
    public override string ValueAsString { get; protected set; }

    public UnionTypes(T1 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T2 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T3 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T4 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T5 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T6 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T7 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T8 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T9 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T10 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T11 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T12 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T13 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T14 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T15 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T16 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T17 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T18 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T19 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T20 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T21 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T22 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T23 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T24 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T25 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T26 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T27 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T28 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T29 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T30 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T31 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T32 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T33 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T34 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T35 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T36 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T37 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T38 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T39 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T40 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T41 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T42 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T43 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T44 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T45 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T46 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T47 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T48 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T49 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T50 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T51 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T52 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T53 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T54 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T55 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T56 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T57 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T58 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T59 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T60 Value) => ValueAsString = Value.ValueAsString;

    public bool IsT1 => Type == TypeIndicator.GetType<T1>();
    public bool IsT2 => Type == TypeIndicator.GetType<T2>();
    public bool IsT3 => Type == TypeIndicator.GetType<T3>();
    public bool IsT4 => Type == TypeIndicator.GetType<T4>();
    public bool IsT5 => Type == TypeIndicator.GetType<T5>();
    public bool IsT6 => Type == TypeIndicator.GetType<T6>();
    public bool IsT7 => Type == TypeIndicator.GetType<T7>();
    public bool IsT8 => Type == TypeIndicator.GetType<T8>();
    public bool IsT9 => Type == TypeIndicator.GetType<T9>();
    public bool IsT10 => Type == TypeIndicator.GetType<T10>();
    public bool IsT11 => Type == TypeIndicator.GetType<T11>();
    public bool IsT12 => Type == TypeIndicator.GetType<T12>();
    public bool IsT13 => Type == TypeIndicator.GetType<T13>();
    public bool IsT14 => Type == TypeIndicator.GetType<T14>();
    public bool IsT15 => Type == TypeIndicator.GetType<T15>();
    public bool IsT16 => Type == TypeIndicator.GetType<T16>();
    public bool IsT17 => Type == TypeIndicator.GetType<T17>();
    public bool IsT18 => Type == TypeIndicator.GetType<T18>();
    public bool IsT19 => Type == TypeIndicator.GetType<T19>();
    public bool IsT20 => Type == TypeIndicator.GetType<T20>();
    public bool IsT21 => Type == TypeIndicator.GetType<T21>();
    public bool IsT22 => Type == TypeIndicator.GetType<T22>();
    public bool IsT23 => Type == TypeIndicator.GetType<T23>();
    public bool IsT24 => Type == TypeIndicator.GetType<T24>();
    public bool IsT25 => Type == TypeIndicator.GetType<T25>();
    public bool IsT26 => Type == TypeIndicator.GetType<T26>();
    public bool IsT27 => Type == TypeIndicator.GetType<T27>();
    public bool IsT28 => Type == TypeIndicator.GetType<T28>();
    public bool IsT29 => Type == TypeIndicator.GetType<T29>();
    public bool IsT30 => Type == TypeIndicator.GetType<T30>();
    public bool IsT31 => Type == TypeIndicator.GetType<T31>();
    public bool IsT32 => Type == TypeIndicator.GetType<T32>();
    public bool IsT33 => Type == TypeIndicator.GetType<T33>();
    public bool IsT34 => Type == TypeIndicator.GetType<T34>();
    public bool IsT35 => Type == TypeIndicator.GetType<T35>();
    public bool IsT36 => Type == TypeIndicator.GetType<T36>();
    public bool IsT37 => Type == TypeIndicator.GetType<T37>();
    public bool IsT38 => Type == TypeIndicator.GetType<T38>();
    public bool IsT39 => Type == TypeIndicator.GetType<T39>();
    public bool IsT40 => Type == TypeIndicator.GetType<T40>();
    public bool IsT41 => Type == TypeIndicator.GetType<T41>();
    public bool IsT42 => Type == TypeIndicator.GetType<T42>();
    public bool IsT43 => Type == TypeIndicator.GetType<T43>();
    public bool IsT44 => Type == TypeIndicator.GetType<T44>();
    public bool IsT45 => Type == TypeIndicator.GetType<T45>();
    public bool IsT46 => Type == TypeIndicator.GetType<T46>();
    public bool IsT47 => Type == TypeIndicator.GetType<T47>();
    public bool IsT48 => Type == TypeIndicator.GetType<T48>();
    public bool IsT49 => Type == TypeIndicator.GetType<T49>();
    public bool IsT50 => Type == TypeIndicator.GetType<T50>();
    public bool IsT51 => Type == TypeIndicator.GetType<T51>();
    public bool IsT52 => Type == TypeIndicator.GetType<T52>();
    public bool IsT53 => Type == TypeIndicator.GetType<T53>();
    public bool IsT54 => Type == TypeIndicator.GetType<T54>();
    public bool IsT55 => Type == TypeIndicator.GetType<T55>();
    public bool IsT56 => Type == TypeIndicator.GetType<T56>();
    public bool IsT57 => Type == TypeIndicator.GetType<T57>();
    public bool IsT58 => Type == TypeIndicator.GetType<T58>();
    public bool IsT59 => Type == TypeIndicator.GetType<T59>();
    public bool IsT60 => Type == TypeIndicator.GetType<T60>();

    public T1 AsT1 => new StringSPWNExpr<T1>(ValueAsString).AsValue();
    public T2 AsT2 => new StringSPWNExpr<T2>(ValueAsString).AsValue();
    public T3 AsT3 => new StringSPWNExpr<T3>(ValueAsString).AsValue();
    public T4 AsT4 => new StringSPWNExpr<T4>(ValueAsString).AsValue();
    public T5 AsT5 => new StringSPWNExpr<T5>(ValueAsString).AsValue();
    public T6 AsT6 => new StringSPWNExpr<T6>(ValueAsString).AsValue();
    public T7 AsT7 => new StringSPWNExpr<T7>(ValueAsString).AsValue();
    public T8 AsT8 => new StringSPWNExpr<T8>(ValueAsString).AsValue();
    public T9 AsT9 => new StringSPWNExpr<T9>(ValueAsString).AsValue();
    public T10 AsT10 => new StringSPWNExpr<T10>(ValueAsString).AsValue();
    public T11 AsT11 => new StringSPWNExpr<T11>(ValueAsString).AsValue();
    public T12 AsT12 => new StringSPWNExpr<T12>(ValueAsString).AsValue();
    public T13 AsT13 => new StringSPWNExpr<T13>(ValueAsString).AsValue();
    public T14 AsT14 => new StringSPWNExpr<T14>(ValueAsString).AsValue();
    public T15 AsT15 => new StringSPWNExpr<T15>(ValueAsString).AsValue();
    public T16 AsT16 => new StringSPWNExpr<T16>(ValueAsString).AsValue();
    public T17 AsT17 => new StringSPWNExpr<T17>(ValueAsString).AsValue();
    public T18 AsT18 => new StringSPWNExpr<T18>(ValueAsString).AsValue();
    public T19 AsT19 => new StringSPWNExpr<T19>(ValueAsString).AsValue();
    public T20 AsT20 => new StringSPWNExpr<T20>(ValueAsString).AsValue();
    public T21 AsT21 => new StringSPWNExpr<T21>(ValueAsString).AsValue();
    public T22 AsT22 => new StringSPWNExpr<T22>(ValueAsString).AsValue();
    public T23 AsT23 => new StringSPWNExpr<T23>(ValueAsString).AsValue();
    public T24 AsT24 => new StringSPWNExpr<T24>(ValueAsString).AsValue();
    public T25 AsT25 => new StringSPWNExpr<T25>(ValueAsString).AsValue();
    public T26 AsT26 => new StringSPWNExpr<T26>(ValueAsString).AsValue();
    public T27 AsT27 => new StringSPWNExpr<T27>(ValueAsString).AsValue();
    public T28 AsT28 => new StringSPWNExpr<T28>(ValueAsString).AsValue();
    public T29 AsT29 => new StringSPWNExpr<T29>(ValueAsString).AsValue();
    public T30 AsT30 => new StringSPWNExpr<T30>(ValueAsString).AsValue();
    public T31 AsT31 => new StringSPWNExpr<T31>(ValueAsString).AsValue();
    public T32 AsT32 => new StringSPWNExpr<T32>(ValueAsString).AsValue();
    public T33 AsT33 => new StringSPWNExpr<T33>(ValueAsString).AsValue();
    public T34 AsT34 => new StringSPWNExpr<T34>(ValueAsString).AsValue();
    public T35 AsT35 => new StringSPWNExpr<T35>(ValueAsString).AsValue();
    public T36 AsT36 => new StringSPWNExpr<T36>(ValueAsString).AsValue();
    public T37 AsT37 => new StringSPWNExpr<T37>(ValueAsString).AsValue();
    public T38 AsT38 => new StringSPWNExpr<T38>(ValueAsString).AsValue();
    public T39 AsT39 => new StringSPWNExpr<T39>(ValueAsString).AsValue();
    public T40 AsT40 => new StringSPWNExpr<T40>(ValueAsString).AsValue();
    public T41 AsT41 => new StringSPWNExpr<T41>(ValueAsString).AsValue();
    public T42 AsT42 => new StringSPWNExpr<T42>(ValueAsString).AsValue();
    public T43 AsT43 => new StringSPWNExpr<T43>(ValueAsString).AsValue();
    public T44 AsT44 => new StringSPWNExpr<T44>(ValueAsString).AsValue();
    public T45 AsT45 => new StringSPWNExpr<T45>(ValueAsString).AsValue();
    public T46 AsT46 => new StringSPWNExpr<T46>(ValueAsString).AsValue();
    public T47 AsT47 => new StringSPWNExpr<T47>(ValueAsString).AsValue();
    public T48 AsT48 => new StringSPWNExpr<T48>(ValueAsString).AsValue();
    public T49 AsT49 => new StringSPWNExpr<T49>(ValueAsString).AsValue();
    public T50 AsT50 => new StringSPWNExpr<T50>(ValueAsString).AsValue();
    public T51 AsT51 => new StringSPWNExpr<T51>(ValueAsString).AsValue();
    public T52 AsT52 => new StringSPWNExpr<T52>(ValueAsString).AsValue();
    public T53 AsT53 => new StringSPWNExpr<T53>(ValueAsString).AsValue();
    public T54 AsT54 => new StringSPWNExpr<T54>(ValueAsString).AsValue();
    public T55 AsT55 => new StringSPWNExpr<T55>(ValueAsString).AsValue();
    public T56 AsT56 => new StringSPWNExpr<T56>(ValueAsString).AsValue();
    public T57 AsT57 => new StringSPWNExpr<T57>(ValueAsString).AsValue();
    public T58 AsT58 => new StringSPWNExpr<T58>(ValueAsString).AsValue();
    public T59 AsT59 => new StringSPWNExpr<T59>(ValueAsString).AsValue();
    public T60 AsT60 => new StringSPWNExpr<T60>(ValueAsString).AsValue();

    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60>(T1 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60>(T2 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60>(T3 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60>(T4 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60>(T5 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60>(T6 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60>(T7 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60>(T8 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60>(T9 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60>(T10 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60>(T11 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60>(T12 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60>(T13 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60>(T14 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60>(T15 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60>(T16 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60>(T17 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60>(T18 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60>(T19 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60>(T20 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60>(T21 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60>(T22 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60>(T23 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60>(T24 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60>(T25 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60>(T26 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60>(T27 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60>(T28 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60>(T29 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60>(T30 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60>(T31 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60>(T32 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60>(T33 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60>(T34 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60>(T35 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60>(T36 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60>(T37 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60>(T38 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60>(T39 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60>(T40 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60>(T41 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60>(T42 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60>(T43 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60>(T44 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60>(T45 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60>(T46 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60>(T47 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60>(T48 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60>(T49 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60>(T50 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60>(T51 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60>(T52 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60>(T53 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60>(T54 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60>(T55 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60>(T56 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60>(T57 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60>(T58 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60>(T59 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60>(T60 Value) => new(Value);
}

// Note UnionTypes is NOT a Built-in type in SPWN
[SPWNType("@typeunion")]
public class UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61> : SPWNValueBase
    where T1 : SPWNValueBase
    where T2 : SPWNValueBase
    where T3 : SPWNValueBase
    where T4 : SPWNValueBase
    where T5 : SPWNValueBase
    where T6 : SPWNValueBase
    where T7 : SPWNValueBase
    where T8 : SPWNValueBase
    where T9 : SPWNValueBase
    where T10 : SPWNValueBase
    where T11 : SPWNValueBase
    where T12 : SPWNValueBase
    where T13 : SPWNValueBase
    where T14 : SPWNValueBase
    where T15 : SPWNValueBase
    where T16 : SPWNValueBase
    where T17 : SPWNValueBase
    where T18 : SPWNValueBase
    where T19 : SPWNValueBase
    where T20 : SPWNValueBase
    where T21 : SPWNValueBase
    where T22 : SPWNValueBase
    where T23 : SPWNValueBase
    where T24 : SPWNValueBase
    where T25 : SPWNValueBase
    where T26 : SPWNValueBase
    where T27 : SPWNValueBase
    where T28 : SPWNValueBase
    where T29 : SPWNValueBase
    where T30 : SPWNValueBase
    where T31 : SPWNValueBase
    where T32 : SPWNValueBase
    where T33 : SPWNValueBase
    where T34 : SPWNValueBase
    where T35 : SPWNValueBase
    where T36 : SPWNValueBase
    where T37 : SPWNValueBase
    where T38 : SPWNValueBase
    where T39 : SPWNValueBase
    where T40 : SPWNValueBase
    where T41 : SPWNValueBase
    where T42 : SPWNValueBase
    where T43 : SPWNValueBase
    where T44 : SPWNValueBase
    where T45 : SPWNValueBase
    where T46 : SPWNValueBase
    where T47 : SPWNValueBase
    where T48 : SPWNValueBase
    where T49 : SPWNValueBase
    where T50 : SPWNValueBase
    where T51 : SPWNValueBase
    where T52 : SPWNValueBase
    where T53 : SPWNValueBase
    where T54 : SPWNValueBase
    where T55 : SPWNValueBase
    where T56 : SPWNValueBase
    where T57 : SPWNValueBase
    where T58 : SPWNValueBase
    where T59 : SPWNValueBase
    where T60 : SPWNValueBase
    where T61 : SPWNValueBase
{
    public override string ValueAsString { get; protected set; }

    public UnionTypes(T1 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T2 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T3 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T4 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T5 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T6 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T7 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T8 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T9 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T10 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T11 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T12 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T13 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T14 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T15 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T16 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T17 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T18 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T19 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T20 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T21 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T22 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T23 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T24 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T25 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T26 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T27 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T28 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T29 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T30 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T31 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T32 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T33 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T34 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T35 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T36 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T37 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T38 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T39 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T40 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T41 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T42 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T43 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T44 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T45 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T46 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T47 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T48 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T49 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T50 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T51 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T52 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T53 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T54 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T55 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T56 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T57 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T58 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T59 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T60 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T61 Value) => ValueAsString = Value.ValueAsString;

    public bool IsT1 => Type == TypeIndicator.GetType<T1>();
    public bool IsT2 => Type == TypeIndicator.GetType<T2>();
    public bool IsT3 => Type == TypeIndicator.GetType<T3>();
    public bool IsT4 => Type == TypeIndicator.GetType<T4>();
    public bool IsT5 => Type == TypeIndicator.GetType<T5>();
    public bool IsT6 => Type == TypeIndicator.GetType<T6>();
    public bool IsT7 => Type == TypeIndicator.GetType<T7>();
    public bool IsT8 => Type == TypeIndicator.GetType<T8>();
    public bool IsT9 => Type == TypeIndicator.GetType<T9>();
    public bool IsT10 => Type == TypeIndicator.GetType<T10>();
    public bool IsT11 => Type == TypeIndicator.GetType<T11>();
    public bool IsT12 => Type == TypeIndicator.GetType<T12>();
    public bool IsT13 => Type == TypeIndicator.GetType<T13>();
    public bool IsT14 => Type == TypeIndicator.GetType<T14>();
    public bool IsT15 => Type == TypeIndicator.GetType<T15>();
    public bool IsT16 => Type == TypeIndicator.GetType<T16>();
    public bool IsT17 => Type == TypeIndicator.GetType<T17>();
    public bool IsT18 => Type == TypeIndicator.GetType<T18>();
    public bool IsT19 => Type == TypeIndicator.GetType<T19>();
    public bool IsT20 => Type == TypeIndicator.GetType<T20>();
    public bool IsT21 => Type == TypeIndicator.GetType<T21>();
    public bool IsT22 => Type == TypeIndicator.GetType<T22>();
    public bool IsT23 => Type == TypeIndicator.GetType<T23>();
    public bool IsT24 => Type == TypeIndicator.GetType<T24>();
    public bool IsT25 => Type == TypeIndicator.GetType<T25>();
    public bool IsT26 => Type == TypeIndicator.GetType<T26>();
    public bool IsT27 => Type == TypeIndicator.GetType<T27>();
    public bool IsT28 => Type == TypeIndicator.GetType<T28>();
    public bool IsT29 => Type == TypeIndicator.GetType<T29>();
    public bool IsT30 => Type == TypeIndicator.GetType<T30>();
    public bool IsT31 => Type == TypeIndicator.GetType<T31>();
    public bool IsT32 => Type == TypeIndicator.GetType<T32>();
    public bool IsT33 => Type == TypeIndicator.GetType<T33>();
    public bool IsT34 => Type == TypeIndicator.GetType<T34>();
    public bool IsT35 => Type == TypeIndicator.GetType<T35>();
    public bool IsT36 => Type == TypeIndicator.GetType<T36>();
    public bool IsT37 => Type == TypeIndicator.GetType<T37>();
    public bool IsT38 => Type == TypeIndicator.GetType<T38>();
    public bool IsT39 => Type == TypeIndicator.GetType<T39>();
    public bool IsT40 => Type == TypeIndicator.GetType<T40>();
    public bool IsT41 => Type == TypeIndicator.GetType<T41>();
    public bool IsT42 => Type == TypeIndicator.GetType<T42>();
    public bool IsT43 => Type == TypeIndicator.GetType<T43>();
    public bool IsT44 => Type == TypeIndicator.GetType<T44>();
    public bool IsT45 => Type == TypeIndicator.GetType<T45>();
    public bool IsT46 => Type == TypeIndicator.GetType<T46>();
    public bool IsT47 => Type == TypeIndicator.GetType<T47>();
    public bool IsT48 => Type == TypeIndicator.GetType<T48>();
    public bool IsT49 => Type == TypeIndicator.GetType<T49>();
    public bool IsT50 => Type == TypeIndicator.GetType<T50>();
    public bool IsT51 => Type == TypeIndicator.GetType<T51>();
    public bool IsT52 => Type == TypeIndicator.GetType<T52>();
    public bool IsT53 => Type == TypeIndicator.GetType<T53>();
    public bool IsT54 => Type == TypeIndicator.GetType<T54>();
    public bool IsT55 => Type == TypeIndicator.GetType<T55>();
    public bool IsT56 => Type == TypeIndicator.GetType<T56>();
    public bool IsT57 => Type == TypeIndicator.GetType<T57>();
    public bool IsT58 => Type == TypeIndicator.GetType<T58>();
    public bool IsT59 => Type == TypeIndicator.GetType<T59>();
    public bool IsT60 => Type == TypeIndicator.GetType<T60>();
    public bool IsT61 => Type == TypeIndicator.GetType<T61>();

    public T1 AsT1 => new StringSPWNExpr<T1>(ValueAsString).AsValue();
    public T2 AsT2 => new StringSPWNExpr<T2>(ValueAsString).AsValue();
    public T3 AsT3 => new StringSPWNExpr<T3>(ValueAsString).AsValue();
    public T4 AsT4 => new StringSPWNExpr<T4>(ValueAsString).AsValue();
    public T5 AsT5 => new StringSPWNExpr<T5>(ValueAsString).AsValue();
    public T6 AsT6 => new StringSPWNExpr<T6>(ValueAsString).AsValue();
    public T7 AsT7 => new StringSPWNExpr<T7>(ValueAsString).AsValue();
    public T8 AsT8 => new StringSPWNExpr<T8>(ValueAsString).AsValue();
    public T9 AsT9 => new StringSPWNExpr<T9>(ValueAsString).AsValue();
    public T10 AsT10 => new StringSPWNExpr<T10>(ValueAsString).AsValue();
    public T11 AsT11 => new StringSPWNExpr<T11>(ValueAsString).AsValue();
    public T12 AsT12 => new StringSPWNExpr<T12>(ValueAsString).AsValue();
    public T13 AsT13 => new StringSPWNExpr<T13>(ValueAsString).AsValue();
    public T14 AsT14 => new StringSPWNExpr<T14>(ValueAsString).AsValue();
    public T15 AsT15 => new StringSPWNExpr<T15>(ValueAsString).AsValue();
    public T16 AsT16 => new StringSPWNExpr<T16>(ValueAsString).AsValue();
    public T17 AsT17 => new StringSPWNExpr<T17>(ValueAsString).AsValue();
    public T18 AsT18 => new StringSPWNExpr<T18>(ValueAsString).AsValue();
    public T19 AsT19 => new StringSPWNExpr<T19>(ValueAsString).AsValue();
    public T20 AsT20 => new StringSPWNExpr<T20>(ValueAsString).AsValue();
    public T21 AsT21 => new StringSPWNExpr<T21>(ValueAsString).AsValue();
    public T22 AsT22 => new StringSPWNExpr<T22>(ValueAsString).AsValue();
    public T23 AsT23 => new StringSPWNExpr<T23>(ValueAsString).AsValue();
    public T24 AsT24 => new StringSPWNExpr<T24>(ValueAsString).AsValue();
    public T25 AsT25 => new StringSPWNExpr<T25>(ValueAsString).AsValue();
    public T26 AsT26 => new StringSPWNExpr<T26>(ValueAsString).AsValue();
    public T27 AsT27 => new StringSPWNExpr<T27>(ValueAsString).AsValue();
    public T28 AsT28 => new StringSPWNExpr<T28>(ValueAsString).AsValue();
    public T29 AsT29 => new StringSPWNExpr<T29>(ValueAsString).AsValue();
    public T30 AsT30 => new StringSPWNExpr<T30>(ValueAsString).AsValue();
    public T31 AsT31 => new StringSPWNExpr<T31>(ValueAsString).AsValue();
    public T32 AsT32 => new StringSPWNExpr<T32>(ValueAsString).AsValue();
    public T33 AsT33 => new StringSPWNExpr<T33>(ValueAsString).AsValue();
    public T34 AsT34 => new StringSPWNExpr<T34>(ValueAsString).AsValue();
    public T35 AsT35 => new StringSPWNExpr<T35>(ValueAsString).AsValue();
    public T36 AsT36 => new StringSPWNExpr<T36>(ValueAsString).AsValue();
    public T37 AsT37 => new StringSPWNExpr<T37>(ValueAsString).AsValue();
    public T38 AsT38 => new StringSPWNExpr<T38>(ValueAsString).AsValue();
    public T39 AsT39 => new StringSPWNExpr<T39>(ValueAsString).AsValue();
    public T40 AsT40 => new StringSPWNExpr<T40>(ValueAsString).AsValue();
    public T41 AsT41 => new StringSPWNExpr<T41>(ValueAsString).AsValue();
    public T42 AsT42 => new StringSPWNExpr<T42>(ValueAsString).AsValue();
    public T43 AsT43 => new StringSPWNExpr<T43>(ValueAsString).AsValue();
    public T44 AsT44 => new StringSPWNExpr<T44>(ValueAsString).AsValue();
    public T45 AsT45 => new StringSPWNExpr<T45>(ValueAsString).AsValue();
    public T46 AsT46 => new StringSPWNExpr<T46>(ValueAsString).AsValue();
    public T47 AsT47 => new StringSPWNExpr<T47>(ValueAsString).AsValue();
    public T48 AsT48 => new StringSPWNExpr<T48>(ValueAsString).AsValue();
    public T49 AsT49 => new StringSPWNExpr<T49>(ValueAsString).AsValue();
    public T50 AsT50 => new StringSPWNExpr<T50>(ValueAsString).AsValue();
    public T51 AsT51 => new StringSPWNExpr<T51>(ValueAsString).AsValue();
    public T52 AsT52 => new StringSPWNExpr<T52>(ValueAsString).AsValue();
    public T53 AsT53 => new StringSPWNExpr<T53>(ValueAsString).AsValue();
    public T54 AsT54 => new StringSPWNExpr<T54>(ValueAsString).AsValue();
    public T55 AsT55 => new StringSPWNExpr<T55>(ValueAsString).AsValue();
    public T56 AsT56 => new StringSPWNExpr<T56>(ValueAsString).AsValue();
    public T57 AsT57 => new StringSPWNExpr<T57>(ValueAsString).AsValue();
    public T58 AsT58 => new StringSPWNExpr<T58>(ValueAsString).AsValue();
    public T59 AsT59 => new StringSPWNExpr<T59>(ValueAsString).AsValue();
    public T60 AsT60 => new StringSPWNExpr<T60>(ValueAsString).AsValue();
    public T61 AsT61 => new StringSPWNExpr<T61>(ValueAsString).AsValue();

    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61>(T1 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61>(T2 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61>(T3 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61>(T4 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61>(T5 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61>(T6 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61>(T7 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61>(T8 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61>(T9 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61>(T10 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61>(T11 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61>(T12 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61>(T13 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61>(T14 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61>(T15 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61>(T16 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61>(T17 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61>(T18 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61>(T19 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61>(T20 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61>(T21 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61>(T22 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61>(T23 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61>(T24 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61>(T25 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61>(T26 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61>(T27 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61>(T28 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61>(T29 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61>(T30 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61>(T31 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61>(T32 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61>(T33 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61>(T34 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61>(T35 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61>(T36 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61>(T37 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61>(T38 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61>(T39 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61>(T40 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61>(T41 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61>(T42 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61>(T43 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61>(T44 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61>(T45 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61>(T46 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61>(T47 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61>(T48 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61>(T49 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61>(T50 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61>(T51 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61>(T52 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61>(T53 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61>(T54 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61>(T55 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61>(T56 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61>(T57 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61>(T58 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61>(T59 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61>(T60 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61>(T61 Value) => new(Value);
}

// Note UnionTypes is NOT a Built-in type in SPWN
[SPWNType("@typeunion")]
public class UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62> : SPWNValueBase
    where T1 : SPWNValueBase
    where T2 : SPWNValueBase
    where T3 : SPWNValueBase
    where T4 : SPWNValueBase
    where T5 : SPWNValueBase
    where T6 : SPWNValueBase
    where T7 : SPWNValueBase
    where T8 : SPWNValueBase
    where T9 : SPWNValueBase
    where T10 : SPWNValueBase
    where T11 : SPWNValueBase
    where T12 : SPWNValueBase
    where T13 : SPWNValueBase
    where T14 : SPWNValueBase
    where T15 : SPWNValueBase
    where T16 : SPWNValueBase
    where T17 : SPWNValueBase
    where T18 : SPWNValueBase
    where T19 : SPWNValueBase
    where T20 : SPWNValueBase
    where T21 : SPWNValueBase
    where T22 : SPWNValueBase
    where T23 : SPWNValueBase
    where T24 : SPWNValueBase
    where T25 : SPWNValueBase
    where T26 : SPWNValueBase
    where T27 : SPWNValueBase
    where T28 : SPWNValueBase
    where T29 : SPWNValueBase
    where T30 : SPWNValueBase
    where T31 : SPWNValueBase
    where T32 : SPWNValueBase
    where T33 : SPWNValueBase
    where T34 : SPWNValueBase
    where T35 : SPWNValueBase
    where T36 : SPWNValueBase
    where T37 : SPWNValueBase
    where T38 : SPWNValueBase
    where T39 : SPWNValueBase
    where T40 : SPWNValueBase
    where T41 : SPWNValueBase
    where T42 : SPWNValueBase
    where T43 : SPWNValueBase
    where T44 : SPWNValueBase
    where T45 : SPWNValueBase
    where T46 : SPWNValueBase
    where T47 : SPWNValueBase
    where T48 : SPWNValueBase
    where T49 : SPWNValueBase
    where T50 : SPWNValueBase
    where T51 : SPWNValueBase
    where T52 : SPWNValueBase
    where T53 : SPWNValueBase
    where T54 : SPWNValueBase
    where T55 : SPWNValueBase
    where T56 : SPWNValueBase
    where T57 : SPWNValueBase
    where T58 : SPWNValueBase
    where T59 : SPWNValueBase
    where T60 : SPWNValueBase
    where T61 : SPWNValueBase
    where T62 : SPWNValueBase
{
    public override string ValueAsString { get; protected set; }

    public UnionTypes(T1 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T2 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T3 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T4 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T5 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T6 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T7 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T8 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T9 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T10 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T11 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T12 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T13 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T14 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T15 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T16 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T17 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T18 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T19 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T20 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T21 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T22 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T23 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T24 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T25 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T26 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T27 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T28 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T29 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T30 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T31 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T32 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T33 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T34 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T35 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T36 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T37 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T38 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T39 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T40 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T41 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T42 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T43 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T44 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T45 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T46 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T47 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T48 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T49 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T50 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T51 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T52 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T53 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T54 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T55 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T56 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T57 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T58 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T59 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T60 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T61 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T62 Value) => ValueAsString = Value.ValueAsString;

    public bool IsT1 => Type == TypeIndicator.GetType<T1>();
    public bool IsT2 => Type == TypeIndicator.GetType<T2>();
    public bool IsT3 => Type == TypeIndicator.GetType<T3>();
    public bool IsT4 => Type == TypeIndicator.GetType<T4>();
    public bool IsT5 => Type == TypeIndicator.GetType<T5>();
    public bool IsT6 => Type == TypeIndicator.GetType<T6>();
    public bool IsT7 => Type == TypeIndicator.GetType<T7>();
    public bool IsT8 => Type == TypeIndicator.GetType<T8>();
    public bool IsT9 => Type == TypeIndicator.GetType<T9>();
    public bool IsT10 => Type == TypeIndicator.GetType<T10>();
    public bool IsT11 => Type == TypeIndicator.GetType<T11>();
    public bool IsT12 => Type == TypeIndicator.GetType<T12>();
    public bool IsT13 => Type == TypeIndicator.GetType<T13>();
    public bool IsT14 => Type == TypeIndicator.GetType<T14>();
    public bool IsT15 => Type == TypeIndicator.GetType<T15>();
    public bool IsT16 => Type == TypeIndicator.GetType<T16>();
    public bool IsT17 => Type == TypeIndicator.GetType<T17>();
    public bool IsT18 => Type == TypeIndicator.GetType<T18>();
    public bool IsT19 => Type == TypeIndicator.GetType<T19>();
    public bool IsT20 => Type == TypeIndicator.GetType<T20>();
    public bool IsT21 => Type == TypeIndicator.GetType<T21>();
    public bool IsT22 => Type == TypeIndicator.GetType<T22>();
    public bool IsT23 => Type == TypeIndicator.GetType<T23>();
    public bool IsT24 => Type == TypeIndicator.GetType<T24>();
    public bool IsT25 => Type == TypeIndicator.GetType<T25>();
    public bool IsT26 => Type == TypeIndicator.GetType<T26>();
    public bool IsT27 => Type == TypeIndicator.GetType<T27>();
    public bool IsT28 => Type == TypeIndicator.GetType<T28>();
    public bool IsT29 => Type == TypeIndicator.GetType<T29>();
    public bool IsT30 => Type == TypeIndicator.GetType<T30>();
    public bool IsT31 => Type == TypeIndicator.GetType<T31>();
    public bool IsT32 => Type == TypeIndicator.GetType<T32>();
    public bool IsT33 => Type == TypeIndicator.GetType<T33>();
    public bool IsT34 => Type == TypeIndicator.GetType<T34>();
    public bool IsT35 => Type == TypeIndicator.GetType<T35>();
    public bool IsT36 => Type == TypeIndicator.GetType<T36>();
    public bool IsT37 => Type == TypeIndicator.GetType<T37>();
    public bool IsT38 => Type == TypeIndicator.GetType<T38>();
    public bool IsT39 => Type == TypeIndicator.GetType<T39>();
    public bool IsT40 => Type == TypeIndicator.GetType<T40>();
    public bool IsT41 => Type == TypeIndicator.GetType<T41>();
    public bool IsT42 => Type == TypeIndicator.GetType<T42>();
    public bool IsT43 => Type == TypeIndicator.GetType<T43>();
    public bool IsT44 => Type == TypeIndicator.GetType<T44>();
    public bool IsT45 => Type == TypeIndicator.GetType<T45>();
    public bool IsT46 => Type == TypeIndicator.GetType<T46>();
    public bool IsT47 => Type == TypeIndicator.GetType<T47>();
    public bool IsT48 => Type == TypeIndicator.GetType<T48>();
    public bool IsT49 => Type == TypeIndicator.GetType<T49>();
    public bool IsT50 => Type == TypeIndicator.GetType<T50>();
    public bool IsT51 => Type == TypeIndicator.GetType<T51>();
    public bool IsT52 => Type == TypeIndicator.GetType<T52>();
    public bool IsT53 => Type == TypeIndicator.GetType<T53>();
    public bool IsT54 => Type == TypeIndicator.GetType<T54>();
    public bool IsT55 => Type == TypeIndicator.GetType<T55>();
    public bool IsT56 => Type == TypeIndicator.GetType<T56>();
    public bool IsT57 => Type == TypeIndicator.GetType<T57>();
    public bool IsT58 => Type == TypeIndicator.GetType<T58>();
    public bool IsT59 => Type == TypeIndicator.GetType<T59>();
    public bool IsT60 => Type == TypeIndicator.GetType<T60>();
    public bool IsT61 => Type == TypeIndicator.GetType<T61>();
    public bool IsT62 => Type == TypeIndicator.GetType<T62>();

    public T1 AsT1 => new StringSPWNExpr<T1>(ValueAsString).AsValue();
    public T2 AsT2 => new StringSPWNExpr<T2>(ValueAsString).AsValue();
    public T3 AsT3 => new StringSPWNExpr<T3>(ValueAsString).AsValue();
    public T4 AsT4 => new StringSPWNExpr<T4>(ValueAsString).AsValue();
    public T5 AsT5 => new StringSPWNExpr<T5>(ValueAsString).AsValue();
    public T6 AsT6 => new StringSPWNExpr<T6>(ValueAsString).AsValue();
    public T7 AsT7 => new StringSPWNExpr<T7>(ValueAsString).AsValue();
    public T8 AsT8 => new StringSPWNExpr<T8>(ValueAsString).AsValue();
    public T9 AsT9 => new StringSPWNExpr<T9>(ValueAsString).AsValue();
    public T10 AsT10 => new StringSPWNExpr<T10>(ValueAsString).AsValue();
    public T11 AsT11 => new StringSPWNExpr<T11>(ValueAsString).AsValue();
    public T12 AsT12 => new StringSPWNExpr<T12>(ValueAsString).AsValue();
    public T13 AsT13 => new StringSPWNExpr<T13>(ValueAsString).AsValue();
    public T14 AsT14 => new StringSPWNExpr<T14>(ValueAsString).AsValue();
    public T15 AsT15 => new StringSPWNExpr<T15>(ValueAsString).AsValue();
    public T16 AsT16 => new StringSPWNExpr<T16>(ValueAsString).AsValue();
    public T17 AsT17 => new StringSPWNExpr<T17>(ValueAsString).AsValue();
    public T18 AsT18 => new StringSPWNExpr<T18>(ValueAsString).AsValue();
    public T19 AsT19 => new StringSPWNExpr<T19>(ValueAsString).AsValue();
    public T20 AsT20 => new StringSPWNExpr<T20>(ValueAsString).AsValue();
    public T21 AsT21 => new StringSPWNExpr<T21>(ValueAsString).AsValue();
    public T22 AsT22 => new StringSPWNExpr<T22>(ValueAsString).AsValue();
    public T23 AsT23 => new StringSPWNExpr<T23>(ValueAsString).AsValue();
    public T24 AsT24 => new StringSPWNExpr<T24>(ValueAsString).AsValue();
    public T25 AsT25 => new StringSPWNExpr<T25>(ValueAsString).AsValue();
    public T26 AsT26 => new StringSPWNExpr<T26>(ValueAsString).AsValue();
    public T27 AsT27 => new StringSPWNExpr<T27>(ValueAsString).AsValue();
    public T28 AsT28 => new StringSPWNExpr<T28>(ValueAsString).AsValue();
    public T29 AsT29 => new StringSPWNExpr<T29>(ValueAsString).AsValue();
    public T30 AsT30 => new StringSPWNExpr<T30>(ValueAsString).AsValue();
    public T31 AsT31 => new StringSPWNExpr<T31>(ValueAsString).AsValue();
    public T32 AsT32 => new StringSPWNExpr<T32>(ValueAsString).AsValue();
    public T33 AsT33 => new StringSPWNExpr<T33>(ValueAsString).AsValue();
    public T34 AsT34 => new StringSPWNExpr<T34>(ValueAsString).AsValue();
    public T35 AsT35 => new StringSPWNExpr<T35>(ValueAsString).AsValue();
    public T36 AsT36 => new StringSPWNExpr<T36>(ValueAsString).AsValue();
    public T37 AsT37 => new StringSPWNExpr<T37>(ValueAsString).AsValue();
    public T38 AsT38 => new StringSPWNExpr<T38>(ValueAsString).AsValue();
    public T39 AsT39 => new StringSPWNExpr<T39>(ValueAsString).AsValue();
    public T40 AsT40 => new StringSPWNExpr<T40>(ValueAsString).AsValue();
    public T41 AsT41 => new StringSPWNExpr<T41>(ValueAsString).AsValue();
    public T42 AsT42 => new StringSPWNExpr<T42>(ValueAsString).AsValue();
    public T43 AsT43 => new StringSPWNExpr<T43>(ValueAsString).AsValue();
    public T44 AsT44 => new StringSPWNExpr<T44>(ValueAsString).AsValue();
    public T45 AsT45 => new StringSPWNExpr<T45>(ValueAsString).AsValue();
    public T46 AsT46 => new StringSPWNExpr<T46>(ValueAsString).AsValue();
    public T47 AsT47 => new StringSPWNExpr<T47>(ValueAsString).AsValue();
    public T48 AsT48 => new StringSPWNExpr<T48>(ValueAsString).AsValue();
    public T49 AsT49 => new StringSPWNExpr<T49>(ValueAsString).AsValue();
    public T50 AsT50 => new StringSPWNExpr<T50>(ValueAsString).AsValue();
    public T51 AsT51 => new StringSPWNExpr<T51>(ValueAsString).AsValue();
    public T52 AsT52 => new StringSPWNExpr<T52>(ValueAsString).AsValue();
    public T53 AsT53 => new StringSPWNExpr<T53>(ValueAsString).AsValue();
    public T54 AsT54 => new StringSPWNExpr<T54>(ValueAsString).AsValue();
    public T55 AsT55 => new StringSPWNExpr<T55>(ValueAsString).AsValue();
    public T56 AsT56 => new StringSPWNExpr<T56>(ValueAsString).AsValue();
    public T57 AsT57 => new StringSPWNExpr<T57>(ValueAsString).AsValue();
    public T58 AsT58 => new StringSPWNExpr<T58>(ValueAsString).AsValue();
    public T59 AsT59 => new StringSPWNExpr<T59>(ValueAsString).AsValue();
    public T60 AsT60 => new StringSPWNExpr<T60>(ValueAsString).AsValue();
    public T61 AsT61 => new StringSPWNExpr<T61>(ValueAsString).AsValue();
    public T62 AsT62 => new StringSPWNExpr<T62>(ValueAsString).AsValue();

    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62>(T1 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62>(T2 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62>(T3 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62>(T4 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62>(T5 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62>(T6 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62>(T7 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62>(T8 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62>(T9 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62>(T10 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62>(T11 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62>(T12 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62>(T13 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62>(T14 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62>(T15 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62>(T16 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62>(T17 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62>(T18 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62>(T19 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62>(T20 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62>(T21 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62>(T22 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62>(T23 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62>(T24 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62>(T25 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62>(T26 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62>(T27 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62>(T28 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62>(T29 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62>(T30 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62>(T31 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62>(T32 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62>(T33 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62>(T34 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62>(T35 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62>(T36 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62>(T37 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62>(T38 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62>(T39 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62>(T40 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62>(T41 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62>(T42 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62>(T43 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62>(T44 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62>(T45 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62>(T46 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62>(T47 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62>(T48 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62>(T49 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62>(T50 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62>(T51 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62>(T52 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62>(T53 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62>(T54 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62>(T55 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62>(T56 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62>(T57 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62>(T58 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62>(T59 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62>(T60 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62>(T61 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62>(T62 Value) => new(Value);
}

// Note UnionTypes is NOT a Built-in type in SPWN
[SPWNType("@typeunion")]
public class UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63> : SPWNValueBase
    where T1 : SPWNValueBase
    where T2 : SPWNValueBase
    where T3 : SPWNValueBase
    where T4 : SPWNValueBase
    where T5 : SPWNValueBase
    where T6 : SPWNValueBase
    where T7 : SPWNValueBase
    where T8 : SPWNValueBase
    where T9 : SPWNValueBase
    where T10 : SPWNValueBase
    where T11 : SPWNValueBase
    where T12 : SPWNValueBase
    where T13 : SPWNValueBase
    where T14 : SPWNValueBase
    where T15 : SPWNValueBase
    where T16 : SPWNValueBase
    where T17 : SPWNValueBase
    where T18 : SPWNValueBase
    where T19 : SPWNValueBase
    where T20 : SPWNValueBase
    where T21 : SPWNValueBase
    where T22 : SPWNValueBase
    where T23 : SPWNValueBase
    where T24 : SPWNValueBase
    where T25 : SPWNValueBase
    where T26 : SPWNValueBase
    where T27 : SPWNValueBase
    where T28 : SPWNValueBase
    where T29 : SPWNValueBase
    where T30 : SPWNValueBase
    where T31 : SPWNValueBase
    where T32 : SPWNValueBase
    where T33 : SPWNValueBase
    where T34 : SPWNValueBase
    where T35 : SPWNValueBase
    where T36 : SPWNValueBase
    where T37 : SPWNValueBase
    where T38 : SPWNValueBase
    where T39 : SPWNValueBase
    where T40 : SPWNValueBase
    where T41 : SPWNValueBase
    where T42 : SPWNValueBase
    where T43 : SPWNValueBase
    where T44 : SPWNValueBase
    where T45 : SPWNValueBase
    where T46 : SPWNValueBase
    where T47 : SPWNValueBase
    where T48 : SPWNValueBase
    where T49 : SPWNValueBase
    where T50 : SPWNValueBase
    where T51 : SPWNValueBase
    where T52 : SPWNValueBase
    where T53 : SPWNValueBase
    where T54 : SPWNValueBase
    where T55 : SPWNValueBase
    where T56 : SPWNValueBase
    where T57 : SPWNValueBase
    where T58 : SPWNValueBase
    where T59 : SPWNValueBase
    where T60 : SPWNValueBase
    where T61 : SPWNValueBase
    where T62 : SPWNValueBase
    where T63 : SPWNValueBase
{
    public override string ValueAsString { get; protected set; }

    public UnionTypes(T1 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T2 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T3 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T4 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T5 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T6 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T7 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T8 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T9 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T10 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T11 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T12 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T13 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T14 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T15 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T16 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T17 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T18 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T19 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T20 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T21 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T22 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T23 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T24 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T25 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T26 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T27 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T28 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T29 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T30 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T31 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T32 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T33 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T34 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T35 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T36 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T37 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T38 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T39 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T40 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T41 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T42 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T43 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T44 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T45 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T46 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T47 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T48 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T49 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T50 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T51 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T52 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T53 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T54 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T55 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T56 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T57 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T58 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T59 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T60 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T61 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T62 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T63 Value) => ValueAsString = Value.ValueAsString;

    public bool IsT1 => Type == TypeIndicator.GetType<T1>();
    public bool IsT2 => Type == TypeIndicator.GetType<T2>();
    public bool IsT3 => Type == TypeIndicator.GetType<T3>();
    public bool IsT4 => Type == TypeIndicator.GetType<T4>();
    public bool IsT5 => Type == TypeIndicator.GetType<T5>();
    public bool IsT6 => Type == TypeIndicator.GetType<T6>();
    public bool IsT7 => Type == TypeIndicator.GetType<T7>();
    public bool IsT8 => Type == TypeIndicator.GetType<T8>();
    public bool IsT9 => Type == TypeIndicator.GetType<T9>();
    public bool IsT10 => Type == TypeIndicator.GetType<T10>();
    public bool IsT11 => Type == TypeIndicator.GetType<T11>();
    public bool IsT12 => Type == TypeIndicator.GetType<T12>();
    public bool IsT13 => Type == TypeIndicator.GetType<T13>();
    public bool IsT14 => Type == TypeIndicator.GetType<T14>();
    public bool IsT15 => Type == TypeIndicator.GetType<T15>();
    public bool IsT16 => Type == TypeIndicator.GetType<T16>();
    public bool IsT17 => Type == TypeIndicator.GetType<T17>();
    public bool IsT18 => Type == TypeIndicator.GetType<T18>();
    public bool IsT19 => Type == TypeIndicator.GetType<T19>();
    public bool IsT20 => Type == TypeIndicator.GetType<T20>();
    public bool IsT21 => Type == TypeIndicator.GetType<T21>();
    public bool IsT22 => Type == TypeIndicator.GetType<T22>();
    public bool IsT23 => Type == TypeIndicator.GetType<T23>();
    public bool IsT24 => Type == TypeIndicator.GetType<T24>();
    public bool IsT25 => Type == TypeIndicator.GetType<T25>();
    public bool IsT26 => Type == TypeIndicator.GetType<T26>();
    public bool IsT27 => Type == TypeIndicator.GetType<T27>();
    public bool IsT28 => Type == TypeIndicator.GetType<T28>();
    public bool IsT29 => Type == TypeIndicator.GetType<T29>();
    public bool IsT30 => Type == TypeIndicator.GetType<T30>();
    public bool IsT31 => Type == TypeIndicator.GetType<T31>();
    public bool IsT32 => Type == TypeIndicator.GetType<T32>();
    public bool IsT33 => Type == TypeIndicator.GetType<T33>();
    public bool IsT34 => Type == TypeIndicator.GetType<T34>();
    public bool IsT35 => Type == TypeIndicator.GetType<T35>();
    public bool IsT36 => Type == TypeIndicator.GetType<T36>();
    public bool IsT37 => Type == TypeIndicator.GetType<T37>();
    public bool IsT38 => Type == TypeIndicator.GetType<T38>();
    public bool IsT39 => Type == TypeIndicator.GetType<T39>();
    public bool IsT40 => Type == TypeIndicator.GetType<T40>();
    public bool IsT41 => Type == TypeIndicator.GetType<T41>();
    public bool IsT42 => Type == TypeIndicator.GetType<T42>();
    public bool IsT43 => Type == TypeIndicator.GetType<T43>();
    public bool IsT44 => Type == TypeIndicator.GetType<T44>();
    public bool IsT45 => Type == TypeIndicator.GetType<T45>();
    public bool IsT46 => Type == TypeIndicator.GetType<T46>();
    public bool IsT47 => Type == TypeIndicator.GetType<T47>();
    public bool IsT48 => Type == TypeIndicator.GetType<T48>();
    public bool IsT49 => Type == TypeIndicator.GetType<T49>();
    public bool IsT50 => Type == TypeIndicator.GetType<T50>();
    public bool IsT51 => Type == TypeIndicator.GetType<T51>();
    public bool IsT52 => Type == TypeIndicator.GetType<T52>();
    public bool IsT53 => Type == TypeIndicator.GetType<T53>();
    public bool IsT54 => Type == TypeIndicator.GetType<T54>();
    public bool IsT55 => Type == TypeIndicator.GetType<T55>();
    public bool IsT56 => Type == TypeIndicator.GetType<T56>();
    public bool IsT57 => Type == TypeIndicator.GetType<T57>();
    public bool IsT58 => Type == TypeIndicator.GetType<T58>();
    public bool IsT59 => Type == TypeIndicator.GetType<T59>();
    public bool IsT60 => Type == TypeIndicator.GetType<T60>();
    public bool IsT61 => Type == TypeIndicator.GetType<T61>();
    public bool IsT62 => Type == TypeIndicator.GetType<T62>();
    public bool IsT63 => Type == TypeIndicator.GetType<T63>();

    public T1 AsT1 => new StringSPWNExpr<T1>(ValueAsString).AsValue();
    public T2 AsT2 => new StringSPWNExpr<T2>(ValueAsString).AsValue();
    public T3 AsT3 => new StringSPWNExpr<T3>(ValueAsString).AsValue();
    public T4 AsT4 => new StringSPWNExpr<T4>(ValueAsString).AsValue();
    public T5 AsT5 => new StringSPWNExpr<T5>(ValueAsString).AsValue();
    public T6 AsT6 => new StringSPWNExpr<T6>(ValueAsString).AsValue();
    public T7 AsT7 => new StringSPWNExpr<T7>(ValueAsString).AsValue();
    public T8 AsT8 => new StringSPWNExpr<T8>(ValueAsString).AsValue();
    public T9 AsT9 => new StringSPWNExpr<T9>(ValueAsString).AsValue();
    public T10 AsT10 => new StringSPWNExpr<T10>(ValueAsString).AsValue();
    public T11 AsT11 => new StringSPWNExpr<T11>(ValueAsString).AsValue();
    public T12 AsT12 => new StringSPWNExpr<T12>(ValueAsString).AsValue();
    public T13 AsT13 => new StringSPWNExpr<T13>(ValueAsString).AsValue();
    public T14 AsT14 => new StringSPWNExpr<T14>(ValueAsString).AsValue();
    public T15 AsT15 => new StringSPWNExpr<T15>(ValueAsString).AsValue();
    public T16 AsT16 => new StringSPWNExpr<T16>(ValueAsString).AsValue();
    public T17 AsT17 => new StringSPWNExpr<T17>(ValueAsString).AsValue();
    public T18 AsT18 => new StringSPWNExpr<T18>(ValueAsString).AsValue();
    public T19 AsT19 => new StringSPWNExpr<T19>(ValueAsString).AsValue();
    public T20 AsT20 => new StringSPWNExpr<T20>(ValueAsString).AsValue();
    public T21 AsT21 => new StringSPWNExpr<T21>(ValueAsString).AsValue();
    public T22 AsT22 => new StringSPWNExpr<T22>(ValueAsString).AsValue();
    public T23 AsT23 => new StringSPWNExpr<T23>(ValueAsString).AsValue();
    public T24 AsT24 => new StringSPWNExpr<T24>(ValueAsString).AsValue();
    public T25 AsT25 => new StringSPWNExpr<T25>(ValueAsString).AsValue();
    public T26 AsT26 => new StringSPWNExpr<T26>(ValueAsString).AsValue();
    public T27 AsT27 => new StringSPWNExpr<T27>(ValueAsString).AsValue();
    public T28 AsT28 => new StringSPWNExpr<T28>(ValueAsString).AsValue();
    public T29 AsT29 => new StringSPWNExpr<T29>(ValueAsString).AsValue();
    public T30 AsT30 => new StringSPWNExpr<T30>(ValueAsString).AsValue();
    public T31 AsT31 => new StringSPWNExpr<T31>(ValueAsString).AsValue();
    public T32 AsT32 => new StringSPWNExpr<T32>(ValueAsString).AsValue();
    public T33 AsT33 => new StringSPWNExpr<T33>(ValueAsString).AsValue();
    public T34 AsT34 => new StringSPWNExpr<T34>(ValueAsString).AsValue();
    public T35 AsT35 => new StringSPWNExpr<T35>(ValueAsString).AsValue();
    public T36 AsT36 => new StringSPWNExpr<T36>(ValueAsString).AsValue();
    public T37 AsT37 => new StringSPWNExpr<T37>(ValueAsString).AsValue();
    public T38 AsT38 => new StringSPWNExpr<T38>(ValueAsString).AsValue();
    public T39 AsT39 => new StringSPWNExpr<T39>(ValueAsString).AsValue();
    public T40 AsT40 => new StringSPWNExpr<T40>(ValueAsString).AsValue();
    public T41 AsT41 => new StringSPWNExpr<T41>(ValueAsString).AsValue();
    public T42 AsT42 => new StringSPWNExpr<T42>(ValueAsString).AsValue();
    public T43 AsT43 => new StringSPWNExpr<T43>(ValueAsString).AsValue();
    public T44 AsT44 => new StringSPWNExpr<T44>(ValueAsString).AsValue();
    public T45 AsT45 => new StringSPWNExpr<T45>(ValueAsString).AsValue();
    public T46 AsT46 => new StringSPWNExpr<T46>(ValueAsString).AsValue();
    public T47 AsT47 => new StringSPWNExpr<T47>(ValueAsString).AsValue();
    public T48 AsT48 => new StringSPWNExpr<T48>(ValueAsString).AsValue();
    public T49 AsT49 => new StringSPWNExpr<T49>(ValueAsString).AsValue();
    public T50 AsT50 => new StringSPWNExpr<T50>(ValueAsString).AsValue();
    public T51 AsT51 => new StringSPWNExpr<T51>(ValueAsString).AsValue();
    public T52 AsT52 => new StringSPWNExpr<T52>(ValueAsString).AsValue();
    public T53 AsT53 => new StringSPWNExpr<T53>(ValueAsString).AsValue();
    public T54 AsT54 => new StringSPWNExpr<T54>(ValueAsString).AsValue();
    public T55 AsT55 => new StringSPWNExpr<T55>(ValueAsString).AsValue();
    public T56 AsT56 => new StringSPWNExpr<T56>(ValueAsString).AsValue();
    public T57 AsT57 => new StringSPWNExpr<T57>(ValueAsString).AsValue();
    public T58 AsT58 => new StringSPWNExpr<T58>(ValueAsString).AsValue();
    public T59 AsT59 => new StringSPWNExpr<T59>(ValueAsString).AsValue();
    public T60 AsT60 => new StringSPWNExpr<T60>(ValueAsString).AsValue();
    public T61 AsT61 => new StringSPWNExpr<T61>(ValueAsString).AsValue();
    public T62 AsT62 => new StringSPWNExpr<T62>(ValueAsString).AsValue();
    public T63 AsT63 => new StringSPWNExpr<T63>(ValueAsString).AsValue();

    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63>(T1 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63>(T2 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63>(T3 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63>(T4 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63>(T5 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63>(T6 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63>(T7 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63>(T8 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63>(T9 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63>(T10 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63>(T11 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63>(T12 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63>(T13 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63>(T14 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63>(T15 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63>(T16 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63>(T17 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63>(T18 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63>(T19 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63>(T20 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63>(T21 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63>(T22 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63>(T23 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63>(T24 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63>(T25 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63>(T26 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63>(T27 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63>(T28 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63>(T29 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63>(T30 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63>(T31 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63>(T32 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63>(T33 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63>(T34 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63>(T35 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63>(T36 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63>(T37 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63>(T38 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63>(T39 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63>(T40 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63>(T41 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63>(T42 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63>(T43 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63>(T44 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63>(T45 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63>(T46 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63>(T47 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63>(T48 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63>(T49 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63>(T50 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63>(T51 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63>(T52 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63>(T53 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63>(T54 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63>(T55 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63>(T56 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63>(T57 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63>(T58 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63>(T59 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63>(T60 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63>(T61 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63>(T62 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63>(T63 Value) => new(Value);
}

// Note UnionTypes is NOT a Built-in type in SPWN
[SPWNType("@typeunion")]
public class UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64> : SPWNValueBase
    where T1 : SPWNValueBase
    where T2 : SPWNValueBase
    where T3 : SPWNValueBase
    where T4 : SPWNValueBase
    where T5 : SPWNValueBase
    where T6 : SPWNValueBase
    where T7 : SPWNValueBase
    where T8 : SPWNValueBase
    where T9 : SPWNValueBase
    where T10 : SPWNValueBase
    where T11 : SPWNValueBase
    where T12 : SPWNValueBase
    where T13 : SPWNValueBase
    where T14 : SPWNValueBase
    where T15 : SPWNValueBase
    where T16 : SPWNValueBase
    where T17 : SPWNValueBase
    where T18 : SPWNValueBase
    where T19 : SPWNValueBase
    where T20 : SPWNValueBase
    where T21 : SPWNValueBase
    where T22 : SPWNValueBase
    where T23 : SPWNValueBase
    where T24 : SPWNValueBase
    where T25 : SPWNValueBase
    where T26 : SPWNValueBase
    where T27 : SPWNValueBase
    where T28 : SPWNValueBase
    where T29 : SPWNValueBase
    where T30 : SPWNValueBase
    where T31 : SPWNValueBase
    where T32 : SPWNValueBase
    where T33 : SPWNValueBase
    where T34 : SPWNValueBase
    where T35 : SPWNValueBase
    where T36 : SPWNValueBase
    where T37 : SPWNValueBase
    where T38 : SPWNValueBase
    where T39 : SPWNValueBase
    where T40 : SPWNValueBase
    where T41 : SPWNValueBase
    where T42 : SPWNValueBase
    where T43 : SPWNValueBase
    where T44 : SPWNValueBase
    where T45 : SPWNValueBase
    where T46 : SPWNValueBase
    where T47 : SPWNValueBase
    where T48 : SPWNValueBase
    where T49 : SPWNValueBase
    where T50 : SPWNValueBase
    where T51 : SPWNValueBase
    where T52 : SPWNValueBase
    where T53 : SPWNValueBase
    where T54 : SPWNValueBase
    where T55 : SPWNValueBase
    where T56 : SPWNValueBase
    where T57 : SPWNValueBase
    where T58 : SPWNValueBase
    where T59 : SPWNValueBase
    where T60 : SPWNValueBase
    where T61 : SPWNValueBase
    where T62 : SPWNValueBase
    where T63 : SPWNValueBase
    where T64 : SPWNValueBase
{
    public override string ValueAsString { get; protected set; }

    public UnionTypes(T1 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T2 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T3 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T4 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T5 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T6 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T7 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T8 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T9 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T10 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T11 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T12 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T13 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T14 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T15 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T16 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T17 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T18 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T19 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T20 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T21 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T22 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T23 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T24 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T25 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T26 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T27 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T28 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T29 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T30 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T31 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T32 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T33 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T34 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T35 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T36 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T37 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T38 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T39 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T40 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T41 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T42 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T43 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T44 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T45 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T46 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T47 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T48 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T49 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T50 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T51 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T52 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T53 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T54 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T55 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T56 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T57 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T58 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T59 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T60 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T61 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T62 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T63 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T64 Value) => ValueAsString = Value.ValueAsString;

    public bool IsT1 => Type == TypeIndicator.GetType<T1>();
    public bool IsT2 => Type == TypeIndicator.GetType<T2>();
    public bool IsT3 => Type == TypeIndicator.GetType<T3>();
    public bool IsT4 => Type == TypeIndicator.GetType<T4>();
    public bool IsT5 => Type == TypeIndicator.GetType<T5>();
    public bool IsT6 => Type == TypeIndicator.GetType<T6>();
    public bool IsT7 => Type == TypeIndicator.GetType<T7>();
    public bool IsT8 => Type == TypeIndicator.GetType<T8>();
    public bool IsT9 => Type == TypeIndicator.GetType<T9>();
    public bool IsT10 => Type == TypeIndicator.GetType<T10>();
    public bool IsT11 => Type == TypeIndicator.GetType<T11>();
    public bool IsT12 => Type == TypeIndicator.GetType<T12>();
    public bool IsT13 => Type == TypeIndicator.GetType<T13>();
    public bool IsT14 => Type == TypeIndicator.GetType<T14>();
    public bool IsT15 => Type == TypeIndicator.GetType<T15>();
    public bool IsT16 => Type == TypeIndicator.GetType<T16>();
    public bool IsT17 => Type == TypeIndicator.GetType<T17>();
    public bool IsT18 => Type == TypeIndicator.GetType<T18>();
    public bool IsT19 => Type == TypeIndicator.GetType<T19>();
    public bool IsT20 => Type == TypeIndicator.GetType<T20>();
    public bool IsT21 => Type == TypeIndicator.GetType<T21>();
    public bool IsT22 => Type == TypeIndicator.GetType<T22>();
    public bool IsT23 => Type == TypeIndicator.GetType<T23>();
    public bool IsT24 => Type == TypeIndicator.GetType<T24>();
    public bool IsT25 => Type == TypeIndicator.GetType<T25>();
    public bool IsT26 => Type == TypeIndicator.GetType<T26>();
    public bool IsT27 => Type == TypeIndicator.GetType<T27>();
    public bool IsT28 => Type == TypeIndicator.GetType<T28>();
    public bool IsT29 => Type == TypeIndicator.GetType<T29>();
    public bool IsT30 => Type == TypeIndicator.GetType<T30>();
    public bool IsT31 => Type == TypeIndicator.GetType<T31>();
    public bool IsT32 => Type == TypeIndicator.GetType<T32>();
    public bool IsT33 => Type == TypeIndicator.GetType<T33>();
    public bool IsT34 => Type == TypeIndicator.GetType<T34>();
    public bool IsT35 => Type == TypeIndicator.GetType<T35>();
    public bool IsT36 => Type == TypeIndicator.GetType<T36>();
    public bool IsT37 => Type == TypeIndicator.GetType<T37>();
    public bool IsT38 => Type == TypeIndicator.GetType<T38>();
    public bool IsT39 => Type == TypeIndicator.GetType<T39>();
    public bool IsT40 => Type == TypeIndicator.GetType<T40>();
    public bool IsT41 => Type == TypeIndicator.GetType<T41>();
    public bool IsT42 => Type == TypeIndicator.GetType<T42>();
    public bool IsT43 => Type == TypeIndicator.GetType<T43>();
    public bool IsT44 => Type == TypeIndicator.GetType<T44>();
    public bool IsT45 => Type == TypeIndicator.GetType<T45>();
    public bool IsT46 => Type == TypeIndicator.GetType<T46>();
    public bool IsT47 => Type == TypeIndicator.GetType<T47>();
    public bool IsT48 => Type == TypeIndicator.GetType<T48>();
    public bool IsT49 => Type == TypeIndicator.GetType<T49>();
    public bool IsT50 => Type == TypeIndicator.GetType<T50>();
    public bool IsT51 => Type == TypeIndicator.GetType<T51>();
    public bool IsT52 => Type == TypeIndicator.GetType<T52>();
    public bool IsT53 => Type == TypeIndicator.GetType<T53>();
    public bool IsT54 => Type == TypeIndicator.GetType<T54>();
    public bool IsT55 => Type == TypeIndicator.GetType<T55>();
    public bool IsT56 => Type == TypeIndicator.GetType<T56>();
    public bool IsT57 => Type == TypeIndicator.GetType<T57>();
    public bool IsT58 => Type == TypeIndicator.GetType<T58>();
    public bool IsT59 => Type == TypeIndicator.GetType<T59>();
    public bool IsT60 => Type == TypeIndicator.GetType<T60>();
    public bool IsT61 => Type == TypeIndicator.GetType<T61>();
    public bool IsT62 => Type == TypeIndicator.GetType<T62>();
    public bool IsT63 => Type == TypeIndicator.GetType<T63>();
    public bool IsT64 => Type == TypeIndicator.GetType<T64>();

    public T1 AsT1 => new StringSPWNExpr<T1>(ValueAsString).AsValue();
    public T2 AsT2 => new StringSPWNExpr<T2>(ValueAsString).AsValue();
    public T3 AsT3 => new StringSPWNExpr<T3>(ValueAsString).AsValue();
    public T4 AsT4 => new StringSPWNExpr<T4>(ValueAsString).AsValue();
    public T5 AsT5 => new StringSPWNExpr<T5>(ValueAsString).AsValue();
    public T6 AsT6 => new StringSPWNExpr<T6>(ValueAsString).AsValue();
    public T7 AsT7 => new StringSPWNExpr<T7>(ValueAsString).AsValue();
    public T8 AsT8 => new StringSPWNExpr<T8>(ValueAsString).AsValue();
    public T9 AsT9 => new StringSPWNExpr<T9>(ValueAsString).AsValue();
    public T10 AsT10 => new StringSPWNExpr<T10>(ValueAsString).AsValue();
    public T11 AsT11 => new StringSPWNExpr<T11>(ValueAsString).AsValue();
    public T12 AsT12 => new StringSPWNExpr<T12>(ValueAsString).AsValue();
    public T13 AsT13 => new StringSPWNExpr<T13>(ValueAsString).AsValue();
    public T14 AsT14 => new StringSPWNExpr<T14>(ValueAsString).AsValue();
    public T15 AsT15 => new StringSPWNExpr<T15>(ValueAsString).AsValue();
    public T16 AsT16 => new StringSPWNExpr<T16>(ValueAsString).AsValue();
    public T17 AsT17 => new StringSPWNExpr<T17>(ValueAsString).AsValue();
    public T18 AsT18 => new StringSPWNExpr<T18>(ValueAsString).AsValue();
    public T19 AsT19 => new StringSPWNExpr<T19>(ValueAsString).AsValue();
    public T20 AsT20 => new StringSPWNExpr<T20>(ValueAsString).AsValue();
    public T21 AsT21 => new StringSPWNExpr<T21>(ValueAsString).AsValue();
    public T22 AsT22 => new StringSPWNExpr<T22>(ValueAsString).AsValue();
    public T23 AsT23 => new StringSPWNExpr<T23>(ValueAsString).AsValue();
    public T24 AsT24 => new StringSPWNExpr<T24>(ValueAsString).AsValue();
    public T25 AsT25 => new StringSPWNExpr<T25>(ValueAsString).AsValue();
    public T26 AsT26 => new StringSPWNExpr<T26>(ValueAsString).AsValue();
    public T27 AsT27 => new StringSPWNExpr<T27>(ValueAsString).AsValue();
    public T28 AsT28 => new StringSPWNExpr<T28>(ValueAsString).AsValue();
    public T29 AsT29 => new StringSPWNExpr<T29>(ValueAsString).AsValue();
    public T30 AsT30 => new StringSPWNExpr<T30>(ValueAsString).AsValue();
    public T31 AsT31 => new StringSPWNExpr<T31>(ValueAsString).AsValue();
    public T32 AsT32 => new StringSPWNExpr<T32>(ValueAsString).AsValue();
    public T33 AsT33 => new StringSPWNExpr<T33>(ValueAsString).AsValue();
    public T34 AsT34 => new StringSPWNExpr<T34>(ValueAsString).AsValue();
    public T35 AsT35 => new StringSPWNExpr<T35>(ValueAsString).AsValue();
    public T36 AsT36 => new StringSPWNExpr<T36>(ValueAsString).AsValue();
    public T37 AsT37 => new StringSPWNExpr<T37>(ValueAsString).AsValue();
    public T38 AsT38 => new StringSPWNExpr<T38>(ValueAsString).AsValue();
    public T39 AsT39 => new StringSPWNExpr<T39>(ValueAsString).AsValue();
    public T40 AsT40 => new StringSPWNExpr<T40>(ValueAsString).AsValue();
    public T41 AsT41 => new StringSPWNExpr<T41>(ValueAsString).AsValue();
    public T42 AsT42 => new StringSPWNExpr<T42>(ValueAsString).AsValue();
    public T43 AsT43 => new StringSPWNExpr<T43>(ValueAsString).AsValue();
    public T44 AsT44 => new StringSPWNExpr<T44>(ValueAsString).AsValue();
    public T45 AsT45 => new StringSPWNExpr<T45>(ValueAsString).AsValue();
    public T46 AsT46 => new StringSPWNExpr<T46>(ValueAsString).AsValue();
    public T47 AsT47 => new StringSPWNExpr<T47>(ValueAsString).AsValue();
    public T48 AsT48 => new StringSPWNExpr<T48>(ValueAsString).AsValue();
    public T49 AsT49 => new StringSPWNExpr<T49>(ValueAsString).AsValue();
    public T50 AsT50 => new StringSPWNExpr<T50>(ValueAsString).AsValue();
    public T51 AsT51 => new StringSPWNExpr<T51>(ValueAsString).AsValue();
    public T52 AsT52 => new StringSPWNExpr<T52>(ValueAsString).AsValue();
    public T53 AsT53 => new StringSPWNExpr<T53>(ValueAsString).AsValue();
    public T54 AsT54 => new StringSPWNExpr<T54>(ValueAsString).AsValue();
    public T55 AsT55 => new StringSPWNExpr<T55>(ValueAsString).AsValue();
    public T56 AsT56 => new StringSPWNExpr<T56>(ValueAsString).AsValue();
    public T57 AsT57 => new StringSPWNExpr<T57>(ValueAsString).AsValue();
    public T58 AsT58 => new StringSPWNExpr<T58>(ValueAsString).AsValue();
    public T59 AsT59 => new StringSPWNExpr<T59>(ValueAsString).AsValue();
    public T60 AsT60 => new StringSPWNExpr<T60>(ValueAsString).AsValue();
    public T61 AsT61 => new StringSPWNExpr<T61>(ValueAsString).AsValue();
    public T62 AsT62 => new StringSPWNExpr<T62>(ValueAsString).AsValue();
    public T63 AsT63 => new StringSPWNExpr<T63>(ValueAsString).AsValue();
    public T64 AsT64 => new StringSPWNExpr<T64>(ValueAsString).AsValue();

    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64>(T1 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64>(T2 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64>(T3 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64>(T4 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64>(T5 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64>(T6 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64>(T7 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64>(T8 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64>(T9 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64>(T10 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64>(T11 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64>(T12 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64>(T13 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64>(T14 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64>(T15 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64>(T16 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64>(T17 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64>(T18 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64>(T19 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64>(T20 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64>(T21 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64>(T22 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64>(T23 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64>(T24 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64>(T25 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64>(T26 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64>(T27 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64>(T28 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64>(T29 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64>(T30 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64>(T31 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64>(T32 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64>(T33 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64>(T34 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64>(T35 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64>(T36 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64>(T37 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64>(T38 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64>(T39 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64>(T40 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64>(T41 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64>(T42 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64>(T43 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64>(T44 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64>(T45 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64>(T46 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64>(T47 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64>(T48 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64>(T49 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64>(T50 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64>(T51 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64>(T52 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64>(T53 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64>(T54 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64>(T55 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64>(T56 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64>(T57 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64>(T58 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64>(T59 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64>(T60 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64>(T61 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64>(T62 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64>(T63 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64>(T64 Value) => new(Value);
}

// Note UnionTypes is NOT a Built-in type in SPWN
[SPWNType("@typeunion")]
public class UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65> : SPWNValueBase
    where T1 : SPWNValueBase
    where T2 : SPWNValueBase
    where T3 : SPWNValueBase
    where T4 : SPWNValueBase
    where T5 : SPWNValueBase
    where T6 : SPWNValueBase
    where T7 : SPWNValueBase
    where T8 : SPWNValueBase
    where T9 : SPWNValueBase
    where T10 : SPWNValueBase
    where T11 : SPWNValueBase
    where T12 : SPWNValueBase
    where T13 : SPWNValueBase
    where T14 : SPWNValueBase
    where T15 : SPWNValueBase
    where T16 : SPWNValueBase
    where T17 : SPWNValueBase
    where T18 : SPWNValueBase
    where T19 : SPWNValueBase
    where T20 : SPWNValueBase
    where T21 : SPWNValueBase
    where T22 : SPWNValueBase
    where T23 : SPWNValueBase
    where T24 : SPWNValueBase
    where T25 : SPWNValueBase
    where T26 : SPWNValueBase
    where T27 : SPWNValueBase
    where T28 : SPWNValueBase
    where T29 : SPWNValueBase
    where T30 : SPWNValueBase
    where T31 : SPWNValueBase
    where T32 : SPWNValueBase
    where T33 : SPWNValueBase
    where T34 : SPWNValueBase
    where T35 : SPWNValueBase
    where T36 : SPWNValueBase
    where T37 : SPWNValueBase
    where T38 : SPWNValueBase
    where T39 : SPWNValueBase
    where T40 : SPWNValueBase
    where T41 : SPWNValueBase
    where T42 : SPWNValueBase
    where T43 : SPWNValueBase
    where T44 : SPWNValueBase
    where T45 : SPWNValueBase
    where T46 : SPWNValueBase
    where T47 : SPWNValueBase
    where T48 : SPWNValueBase
    where T49 : SPWNValueBase
    where T50 : SPWNValueBase
    where T51 : SPWNValueBase
    where T52 : SPWNValueBase
    where T53 : SPWNValueBase
    where T54 : SPWNValueBase
    where T55 : SPWNValueBase
    where T56 : SPWNValueBase
    where T57 : SPWNValueBase
    where T58 : SPWNValueBase
    where T59 : SPWNValueBase
    where T60 : SPWNValueBase
    where T61 : SPWNValueBase
    where T62 : SPWNValueBase
    where T63 : SPWNValueBase
    where T64 : SPWNValueBase
    where T65 : SPWNValueBase
{
    public override string ValueAsString { get; protected set; }

    public UnionTypes(T1 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T2 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T3 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T4 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T5 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T6 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T7 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T8 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T9 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T10 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T11 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T12 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T13 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T14 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T15 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T16 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T17 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T18 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T19 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T20 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T21 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T22 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T23 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T24 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T25 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T26 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T27 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T28 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T29 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T30 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T31 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T32 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T33 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T34 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T35 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T36 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T37 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T38 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T39 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T40 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T41 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T42 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T43 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T44 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T45 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T46 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T47 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T48 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T49 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T50 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T51 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T52 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T53 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T54 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T55 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T56 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T57 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T58 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T59 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T60 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T61 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T62 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T63 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T64 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T65 Value) => ValueAsString = Value.ValueAsString;

    public bool IsT1 => Type == TypeIndicator.GetType<T1>();
    public bool IsT2 => Type == TypeIndicator.GetType<T2>();
    public bool IsT3 => Type == TypeIndicator.GetType<T3>();
    public bool IsT4 => Type == TypeIndicator.GetType<T4>();
    public bool IsT5 => Type == TypeIndicator.GetType<T5>();
    public bool IsT6 => Type == TypeIndicator.GetType<T6>();
    public bool IsT7 => Type == TypeIndicator.GetType<T7>();
    public bool IsT8 => Type == TypeIndicator.GetType<T8>();
    public bool IsT9 => Type == TypeIndicator.GetType<T9>();
    public bool IsT10 => Type == TypeIndicator.GetType<T10>();
    public bool IsT11 => Type == TypeIndicator.GetType<T11>();
    public bool IsT12 => Type == TypeIndicator.GetType<T12>();
    public bool IsT13 => Type == TypeIndicator.GetType<T13>();
    public bool IsT14 => Type == TypeIndicator.GetType<T14>();
    public bool IsT15 => Type == TypeIndicator.GetType<T15>();
    public bool IsT16 => Type == TypeIndicator.GetType<T16>();
    public bool IsT17 => Type == TypeIndicator.GetType<T17>();
    public bool IsT18 => Type == TypeIndicator.GetType<T18>();
    public bool IsT19 => Type == TypeIndicator.GetType<T19>();
    public bool IsT20 => Type == TypeIndicator.GetType<T20>();
    public bool IsT21 => Type == TypeIndicator.GetType<T21>();
    public bool IsT22 => Type == TypeIndicator.GetType<T22>();
    public bool IsT23 => Type == TypeIndicator.GetType<T23>();
    public bool IsT24 => Type == TypeIndicator.GetType<T24>();
    public bool IsT25 => Type == TypeIndicator.GetType<T25>();
    public bool IsT26 => Type == TypeIndicator.GetType<T26>();
    public bool IsT27 => Type == TypeIndicator.GetType<T27>();
    public bool IsT28 => Type == TypeIndicator.GetType<T28>();
    public bool IsT29 => Type == TypeIndicator.GetType<T29>();
    public bool IsT30 => Type == TypeIndicator.GetType<T30>();
    public bool IsT31 => Type == TypeIndicator.GetType<T31>();
    public bool IsT32 => Type == TypeIndicator.GetType<T32>();
    public bool IsT33 => Type == TypeIndicator.GetType<T33>();
    public bool IsT34 => Type == TypeIndicator.GetType<T34>();
    public bool IsT35 => Type == TypeIndicator.GetType<T35>();
    public bool IsT36 => Type == TypeIndicator.GetType<T36>();
    public bool IsT37 => Type == TypeIndicator.GetType<T37>();
    public bool IsT38 => Type == TypeIndicator.GetType<T38>();
    public bool IsT39 => Type == TypeIndicator.GetType<T39>();
    public bool IsT40 => Type == TypeIndicator.GetType<T40>();
    public bool IsT41 => Type == TypeIndicator.GetType<T41>();
    public bool IsT42 => Type == TypeIndicator.GetType<T42>();
    public bool IsT43 => Type == TypeIndicator.GetType<T43>();
    public bool IsT44 => Type == TypeIndicator.GetType<T44>();
    public bool IsT45 => Type == TypeIndicator.GetType<T45>();
    public bool IsT46 => Type == TypeIndicator.GetType<T46>();
    public bool IsT47 => Type == TypeIndicator.GetType<T47>();
    public bool IsT48 => Type == TypeIndicator.GetType<T48>();
    public bool IsT49 => Type == TypeIndicator.GetType<T49>();
    public bool IsT50 => Type == TypeIndicator.GetType<T50>();
    public bool IsT51 => Type == TypeIndicator.GetType<T51>();
    public bool IsT52 => Type == TypeIndicator.GetType<T52>();
    public bool IsT53 => Type == TypeIndicator.GetType<T53>();
    public bool IsT54 => Type == TypeIndicator.GetType<T54>();
    public bool IsT55 => Type == TypeIndicator.GetType<T55>();
    public bool IsT56 => Type == TypeIndicator.GetType<T56>();
    public bool IsT57 => Type == TypeIndicator.GetType<T57>();
    public bool IsT58 => Type == TypeIndicator.GetType<T58>();
    public bool IsT59 => Type == TypeIndicator.GetType<T59>();
    public bool IsT60 => Type == TypeIndicator.GetType<T60>();
    public bool IsT61 => Type == TypeIndicator.GetType<T61>();
    public bool IsT62 => Type == TypeIndicator.GetType<T62>();
    public bool IsT63 => Type == TypeIndicator.GetType<T63>();
    public bool IsT64 => Type == TypeIndicator.GetType<T64>();
    public bool IsT65 => Type == TypeIndicator.GetType<T65>();

    public T1 AsT1 => new StringSPWNExpr<T1>(ValueAsString).AsValue();
    public T2 AsT2 => new StringSPWNExpr<T2>(ValueAsString).AsValue();
    public T3 AsT3 => new StringSPWNExpr<T3>(ValueAsString).AsValue();
    public T4 AsT4 => new StringSPWNExpr<T4>(ValueAsString).AsValue();
    public T5 AsT5 => new StringSPWNExpr<T5>(ValueAsString).AsValue();
    public T6 AsT6 => new StringSPWNExpr<T6>(ValueAsString).AsValue();
    public T7 AsT7 => new StringSPWNExpr<T7>(ValueAsString).AsValue();
    public T8 AsT8 => new StringSPWNExpr<T8>(ValueAsString).AsValue();
    public T9 AsT9 => new StringSPWNExpr<T9>(ValueAsString).AsValue();
    public T10 AsT10 => new StringSPWNExpr<T10>(ValueAsString).AsValue();
    public T11 AsT11 => new StringSPWNExpr<T11>(ValueAsString).AsValue();
    public T12 AsT12 => new StringSPWNExpr<T12>(ValueAsString).AsValue();
    public T13 AsT13 => new StringSPWNExpr<T13>(ValueAsString).AsValue();
    public T14 AsT14 => new StringSPWNExpr<T14>(ValueAsString).AsValue();
    public T15 AsT15 => new StringSPWNExpr<T15>(ValueAsString).AsValue();
    public T16 AsT16 => new StringSPWNExpr<T16>(ValueAsString).AsValue();
    public T17 AsT17 => new StringSPWNExpr<T17>(ValueAsString).AsValue();
    public T18 AsT18 => new StringSPWNExpr<T18>(ValueAsString).AsValue();
    public T19 AsT19 => new StringSPWNExpr<T19>(ValueAsString).AsValue();
    public T20 AsT20 => new StringSPWNExpr<T20>(ValueAsString).AsValue();
    public T21 AsT21 => new StringSPWNExpr<T21>(ValueAsString).AsValue();
    public T22 AsT22 => new StringSPWNExpr<T22>(ValueAsString).AsValue();
    public T23 AsT23 => new StringSPWNExpr<T23>(ValueAsString).AsValue();
    public T24 AsT24 => new StringSPWNExpr<T24>(ValueAsString).AsValue();
    public T25 AsT25 => new StringSPWNExpr<T25>(ValueAsString).AsValue();
    public T26 AsT26 => new StringSPWNExpr<T26>(ValueAsString).AsValue();
    public T27 AsT27 => new StringSPWNExpr<T27>(ValueAsString).AsValue();
    public T28 AsT28 => new StringSPWNExpr<T28>(ValueAsString).AsValue();
    public T29 AsT29 => new StringSPWNExpr<T29>(ValueAsString).AsValue();
    public T30 AsT30 => new StringSPWNExpr<T30>(ValueAsString).AsValue();
    public T31 AsT31 => new StringSPWNExpr<T31>(ValueAsString).AsValue();
    public T32 AsT32 => new StringSPWNExpr<T32>(ValueAsString).AsValue();
    public T33 AsT33 => new StringSPWNExpr<T33>(ValueAsString).AsValue();
    public T34 AsT34 => new StringSPWNExpr<T34>(ValueAsString).AsValue();
    public T35 AsT35 => new StringSPWNExpr<T35>(ValueAsString).AsValue();
    public T36 AsT36 => new StringSPWNExpr<T36>(ValueAsString).AsValue();
    public T37 AsT37 => new StringSPWNExpr<T37>(ValueAsString).AsValue();
    public T38 AsT38 => new StringSPWNExpr<T38>(ValueAsString).AsValue();
    public T39 AsT39 => new StringSPWNExpr<T39>(ValueAsString).AsValue();
    public T40 AsT40 => new StringSPWNExpr<T40>(ValueAsString).AsValue();
    public T41 AsT41 => new StringSPWNExpr<T41>(ValueAsString).AsValue();
    public T42 AsT42 => new StringSPWNExpr<T42>(ValueAsString).AsValue();
    public T43 AsT43 => new StringSPWNExpr<T43>(ValueAsString).AsValue();
    public T44 AsT44 => new StringSPWNExpr<T44>(ValueAsString).AsValue();
    public T45 AsT45 => new StringSPWNExpr<T45>(ValueAsString).AsValue();
    public T46 AsT46 => new StringSPWNExpr<T46>(ValueAsString).AsValue();
    public T47 AsT47 => new StringSPWNExpr<T47>(ValueAsString).AsValue();
    public T48 AsT48 => new StringSPWNExpr<T48>(ValueAsString).AsValue();
    public T49 AsT49 => new StringSPWNExpr<T49>(ValueAsString).AsValue();
    public T50 AsT50 => new StringSPWNExpr<T50>(ValueAsString).AsValue();
    public T51 AsT51 => new StringSPWNExpr<T51>(ValueAsString).AsValue();
    public T52 AsT52 => new StringSPWNExpr<T52>(ValueAsString).AsValue();
    public T53 AsT53 => new StringSPWNExpr<T53>(ValueAsString).AsValue();
    public T54 AsT54 => new StringSPWNExpr<T54>(ValueAsString).AsValue();
    public T55 AsT55 => new StringSPWNExpr<T55>(ValueAsString).AsValue();
    public T56 AsT56 => new StringSPWNExpr<T56>(ValueAsString).AsValue();
    public T57 AsT57 => new StringSPWNExpr<T57>(ValueAsString).AsValue();
    public T58 AsT58 => new StringSPWNExpr<T58>(ValueAsString).AsValue();
    public T59 AsT59 => new StringSPWNExpr<T59>(ValueAsString).AsValue();
    public T60 AsT60 => new StringSPWNExpr<T60>(ValueAsString).AsValue();
    public T61 AsT61 => new StringSPWNExpr<T61>(ValueAsString).AsValue();
    public T62 AsT62 => new StringSPWNExpr<T62>(ValueAsString).AsValue();
    public T63 AsT63 => new StringSPWNExpr<T63>(ValueAsString).AsValue();
    public T64 AsT64 => new StringSPWNExpr<T64>(ValueAsString).AsValue();
    public T65 AsT65 => new StringSPWNExpr<T65>(ValueAsString).AsValue();

    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65>(T1 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65>(T2 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65>(T3 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65>(T4 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65>(T5 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65>(T6 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65>(T7 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65>(T8 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65>(T9 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65>(T10 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65>(T11 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65>(T12 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65>(T13 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65>(T14 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65>(T15 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65>(T16 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65>(T17 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65>(T18 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65>(T19 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65>(T20 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65>(T21 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65>(T22 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65>(T23 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65>(T24 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65>(T25 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65>(T26 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65>(T27 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65>(T28 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65>(T29 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65>(T30 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65>(T31 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65>(T32 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65>(T33 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65>(T34 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65>(T35 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65>(T36 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65>(T37 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65>(T38 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65>(T39 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65>(T40 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65>(T41 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65>(T42 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65>(T43 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65>(T44 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65>(T45 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65>(T46 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65>(T47 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65>(T48 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65>(T49 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65>(T50 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65>(T51 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65>(T52 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65>(T53 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65>(T54 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65>(T55 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65>(T56 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65>(T57 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65>(T58 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65>(T59 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65>(T60 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65>(T61 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65>(T62 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65>(T63 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65>(T64 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65>(T65 Value) => new(Value);
}

// Note UnionTypes is NOT a Built-in type in SPWN
[SPWNType("@typeunion")]
public class UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66> : SPWNValueBase
    where T1 : SPWNValueBase
    where T2 : SPWNValueBase
    where T3 : SPWNValueBase
    where T4 : SPWNValueBase
    where T5 : SPWNValueBase
    where T6 : SPWNValueBase
    where T7 : SPWNValueBase
    where T8 : SPWNValueBase
    where T9 : SPWNValueBase
    where T10 : SPWNValueBase
    where T11 : SPWNValueBase
    where T12 : SPWNValueBase
    where T13 : SPWNValueBase
    where T14 : SPWNValueBase
    where T15 : SPWNValueBase
    where T16 : SPWNValueBase
    where T17 : SPWNValueBase
    where T18 : SPWNValueBase
    where T19 : SPWNValueBase
    where T20 : SPWNValueBase
    where T21 : SPWNValueBase
    where T22 : SPWNValueBase
    where T23 : SPWNValueBase
    where T24 : SPWNValueBase
    where T25 : SPWNValueBase
    where T26 : SPWNValueBase
    where T27 : SPWNValueBase
    where T28 : SPWNValueBase
    where T29 : SPWNValueBase
    where T30 : SPWNValueBase
    where T31 : SPWNValueBase
    where T32 : SPWNValueBase
    where T33 : SPWNValueBase
    where T34 : SPWNValueBase
    where T35 : SPWNValueBase
    where T36 : SPWNValueBase
    where T37 : SPWNValueBase
    where T38 : SPWNValueBase
    where T39 : SPWNValueBase
    where T40 : SPWNValueBase
    where T41 : SPWNValueBase
    where T42 : SPWNValueBase
    where T43 : SPWNValueBase
    where T44 : SPWNValueBase
    where T45 : SPWNValueBase
    where T46 : SPWNValueBase
    where T47 : SPWNValueBase
    where T48 : SPWNValueBase
    where T49 : SPWNValueBase
    where T50 : SPWNValueBase
    where T51 : SPWNValueBase
    where T52 : SPWNValueBase
    where T53 : SPWNValueBase
    where T54 : SPWNValueBase
    where T55 : SPWNValueBase
    where T56 : SPWNValueBase
    where T57 : SPWNValueBase
    where T58 : SPWNValueBase
    where T59 : SPWNValueBase
    where T60 : SPWNValueBase
    where T61 : SPWNValueBase
    where T62 : SPWNValueBase
    where T63 : SPWNValueBase
    where T64 : SPWNValueBase
    where T65 : SPWNValueBase
    where T66 : SPWNValueBase
{
    public override string ValueAsString { get; protected set; }

    public UnionTypes(T1 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T2 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T3 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T4 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T5 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T6 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T7 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T8 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T9 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T10 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T11 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T12 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T13 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T14 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T15 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T16 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T17 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T18 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T19 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T20 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T21 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T22 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T23 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T24 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T25 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T26 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T27 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T28 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T29 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T30 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T31 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T32 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T33 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T34 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T35 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T36 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T37 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T38 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T39 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T40 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T41 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T42 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T43 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T44 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T45 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T46 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T47 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T48 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T49 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T50 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T51 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T52 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T53 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T54 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T55 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T56 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T57 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T58 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T59 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T60 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T61 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T62 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T63 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T64 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T65 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T66 Value) => ValueAsString = Value.ValueAsString;

    public bool IsT1 => Type == TypeIndicator.GetType<T1>();
    public bool IsT2 => Type == TypeIndicator.GetType<T2>();
    public bool IsT3 => Type == TypeIndicator.GetType<T3>();
    public bool IsT4 => Type == TypeIndicator.GetType<T4>();
    public bool IsT5 => Type == TypeIndicator.GetType<T5>();
    public bool IsT6 => Type == TypeIndicator.GetType<T6>();
    public bool IsT7 => Type == TypeIndicator.GetType<T7>();
    public bool IsT8 => Type == TypeIndicator.GetType<T8>();
    public bool IsT9 => Type == TypeIndicator.GetType<T9>();
    public bool IsT10 => Type == TypeIndicator.GetType<T10>();
    public bool IsT11 => Type == TypeIndicator.GetType<T11>();
    public bool IsT12 => Type == TypeIndicator.GetType<T12>();
    public bool IsT13 => Type == TypeIndicator.GetType<T13>();
    public bool IsT14 => Type == TypeIndicator.GetType<T14>();
    public bool IsT15 => Type == TypeIndicator.GetType<T15>();
    public bool IsT16 => Type == TypeIndicator.GetType<T16>();
    public bool IsT17 => Type == TypeIndicator.GetType<T17>();
    public bool IsT18 => Type == TypeIndicator.GetType<T18>();
    public bool IsT19 => Type == TypeIndicator.GetType<T19>();
    public bool IsT20 => Type == TypeIndicator.GetType<T20>();
    public bool IsT21 => Type == TypeIndicator.GetType<T21>();
    public bool IsT22 => Type == TypeIndicator.GetType<T22>();
    public bool IsT23 => Type == TypeIndicator.GetType<T23>();
    public bool IsT24 => Type == TypeIndicator.GetType<T24>();
    public bool IsT25 => Type == TypeIndicator.GetType<T25>();
    public bool IsT26 => Type == TypeIndicator.GetType<T26>();
    public bool IsT27 => Type == TypeIndicator.GetType<T27>();
    public bool IsT28 => Type == TypeIndicator.GetType<T28>();
    public bool IsT29 => Type == TypeIndicator.GetType<T29>();
    public bool IsT30 => Type == TypeIndicator.GetType<T30>();
    public bool IsT31 => Type == TypeIndicator.GetType<T31>();
    public bool IsT32 => Type == TypeIndicator.GetType<T32>();
    public bool IsT33 => Type == TypeIndicator.GetType<T33>();
    public bool IsT34 => Type == TypeIndicator.GetType<T34>();
    public bool IsT35 => Type == TypeIndicator.GetType<T35>();
    public bool IsT36 => Type == TypeIndicator.GetType<T36>();
    public bool IsT37 => Type == TypeIndicator.GetType<T37>();
    public bool IsT38 => Type == TypeIndicator.GetType<T38>();
    public bool IsT39 => Type == TypeIndicator.GetType<T39>();
    public bool IsT40 => Type == TypeIndicator.GetType<T40>();
    public bool IsT41 => Type == TypeIndicator.GetType<T41>();
    public bool IsT42 => Type == TypeIndicator.GetType<T42>();
    public bool IsT43 => Type == TypeIndicator.GetType<T43>();
    public bool IsT44 => Type == TypeIndicator.GetType<T44>();
    public bool IsT45 => Type == TypeIndicator.GetType<T45>();
    public bool IsT46 => Type == TypeIndicator.GetType<T46>();
    public bool IsT47 => Type == TypeIndicator.GetType<T47>();
    public bool IsT48 => Type == TypeIndicator.GetType<T48>();
    public bool IsT49 => Type == TypeIndicator.GetType<T49>();
    public bool IsT50 => Type == TypeIndicator.GetType<T50>();
    public bool IsT51 => Type == TypeIndicator.GetType<T51>();
    public bool IsT52 => Type == TypeIndicator.GetType<T52>();
    public bool IsT53 => Type == TypeIndicator.GetType<T53>();
    public bool IsT54 => Type == TypeIndicator.GetType<T54>();
    public bool IsT55 => Type == TypeIndicator.GetType<T55>();
    public bool IsT56 => Type == TypeIndicator.GetType<T56>();
    public bool IsT57 => Type == TypeIndicator.GetType<T57>();
    public bool IsT58 => Type == TypeIndicator.GetType<T58>();
    public bool IsT59 => Type == TypeIndicator.GetType<T59>();
    public bool IsT60 => Type == TypeIndicator.GetType<T60>();
    public bool IsT61 => Type == TypeIndicator.GetType<T61>();
    public bool IsT62 => Type == TypeIndicator.GetType<T62>();
    public bool IsT63 => Type == TypeIndicator.GetType<T63>();
    public bool IsT64 => Type == TypeIndicator.GetType<T64>();
    public bool IsT65 => Type == TypeIndicator.GetType<T65>();
    public bool IsT66 => Type == TypeIndicator.GetType<T66>();

    public T1 AsT1 => new StringSPWNExpr<T1>(ValueAsString).AsValue();
    public T2 AsT2 => new StringSPWNExpr<T2>(ValueAsString).AsValue();
    public T3 AsT3 => new StringSPWNExpr<T3>(ValueAsString).AsValue();
    public T4 AsT4 => new StringSPWNExpr<T4>(ValueAsString).AsValue();
    public T5 AsT5 => new StringSPWNExpr<T5>(ValueAsString).AsValue();
    public T6 AsT6 => new StringSPWNExpr<T6>(ValueAsString).AsValue();
    public T7 AsT7 => new StringSPWNExpr<T7>(ValueAsString).AsValue();
    public T8 AsT8 => new StringSPWNExpr<T8>(ValueAsString).AsValue();
    public T9 AsT9 => new StringSPWNExpr<T9>(ValueAsString).AsValue();
    public T10 AsT10 => new StringSPWNExpr<T10>(ValueAsString).AsValue();
    public T11 AsT11 => new StringSPWNExpr<T11>(ValueAsString).AsValue();
    public T12 AsT12 => new StringSPWNExpr<T12>(ValueAsString).AsValue();
    public T13 AsT13 => new StringSPWNExpr<T13>(ValueAsString).AsValue();
    public T14 AsT14 => new StringSPWNExpr<T14>(ValueAsString).AsValue();
    public T15 AsT15 => new StringSPWNExpr<T15>(ValueAsString).AsValue();
    public T16 AsT16 => new StringSPWNExpr<T16>(ValueAsString).AsValue();
    public T17 AsT17 => new StringSPWNExpr<T17>(ValueAsString).AsValue();
    public T18 AsT18 => new StringSPWNExpr<T18>(ValueAsString).AsValue();
    public T19 AsT19 => new StringSPWNExpr<T19>(ValueAsString).AsValue();
    public T20 AsT20 => new StringSPWNExpr<T20>(ValueAsString).AsValue();
    public T21 AsT21 => new StringSPWNExpr<T21>(ValueAsString).AsValue();
    public T22 AsT22 => new StringSPWNExpr<T22>(ValueAsString).AsValue();
    public T23 AsT23 => new StringSPWNExpr<T23>(ValueAsString).AsValue();
    public T24 AsT24 => new StringSPWNExpr<T24>(ValueAsString).AsValue();
    public T25 AsT25 => new StringSPWNExpr<T25>(ValueAsString).AsValue();
    public T26 AsT26 => new StringSPWNExpr<T26>(ValueAsString).AsValue();
    public T27 AsT27 => new StringSPWNExpr<T27>(ValueAsString).AsValue();
    public T28 AsT28 => new StringSPWNExpr<T28>(ValueAsString).AsValue();
    public T29 AsT29 => new StringSPWNExpr<T29>(ValueAsString).AsValue();
    public T30 AsT30 => new StringSPWNExpr<T30>(ValueAsString).AsValue();
    public T31 AsT31 => new StringSPWNExpr<T31>(ValueAsString).AsValue();
    public T32 AsT32 => new StringSPWNExpr<T32>(ValueAsString).AsValue();
    public T33 AsT33 => new StringSPWNExpr<T33>(ValueAsString).AsValue();
    public T34 AsT34 => new StringSPWNExpr<T34>(ValueAsString).AsValue();
    public T35 AsT35 => new StringSPWNExpr<T35>(ValueAsString).AsValue();
    public T36 AsT36 => new StringSPWNExpr<T36>(ValueAsString).AsValue();
    public T37 AsT37 => new StringSPWNExpr<T37>(ValueAsString).AsValue();
    public T38 AsT38 => new StringSPWNExpr<T38>(ValueAsString).AsValue();
    public T39 AsT39 => new StringSPWNExpr<T39>(ValueAsString).AsValue();
    public T40 AsT40 => new StringSPWNExpr<T40>(ValueAsString).AsValue();
    public T41 AsT41 => new StringSPWNExpr<T41>(ValueAsString).AsValue();
    public T42 AsT42 => new StringSPWNExpr<T42>(ValueAsString).AsValue();
    public T43 AsT43 => new StringSPWNExpr<T43>(ValueAsString).AsValue();
    public T44 AsT44 => new StringSPWNExpr<T44>(ValueAsString).AsValue();
    public T45 AsT45 => new StringSPWNExpr<T45>(ValueAsString).AsValue();
    public T46 AsT46 => new StringSPWNExpr<T46>(ValueAsString).AsValue();
    public T47 AsT47 => new StringSPWNExpr<T47>(ValueAsString).AsValue();
    public T48 AsT48 => new StringSPWNExpr<T48>(ValueAsString).AsValue();
    public T49 AsT49 => new StringSPWNExpr<T49>(ValueAsString).AsValue();
    public T50 AsT50 => new StringSPWNExpr<T50>(ValueAsString).AsValue();
    public T51 AsT51 => new StringSPWNExpr<T51>(ValueAsString).AsValue();
    public T52 AsT52 => new StringSPWNExpr<T52>(ValueAsString).AsValue();
    public T53 AsT53 => new StringSPWNExpr<T53>(ValueAsString).AsValue();
    public T54 AsT54 => new StringSPWNExpr<T54>(ValueAsString).AsValue();
    public T55 AsT55 => new StringSPWNExpr<T55>(ValueAsString).AsValue();
    public T56 AsT56 => new StringSPWNExpr<T56>(ValueAsString).AsValue();
    public T57 AsT57 => new StringSPWNExpr<T57>(ValueAsString).AsValue();
    public T58 AsT58 => new StringSPWNExpr<T58>(ValueAsString).AsValue();
    public T59 AsT59 => new StringSPWNExpr<T59>(ValueAsString).AsValue();
    public T60 AsT60 => new StringSPWNExpr<T60>(ValueAsString).AsValue();
    public T61 AsT61 => new StringSPWNExpr<T61>(ValueAsString).AsValue();
    public T62 AsT62 => new StringSPWNExpr<T62>(ValueAsString).AsValue();
    public T63 AsT63 => new StringSPWNExpr<T63>(ValueAsString).AsValue();
    public T64 AsT64 => new StringSPWNExpr<T64>(ValueAsString).AsValue();
    public T65 AsT65 => new StringSPWNExpr<T65>(ValueAsString).AsValue();
    public T66 AsT66 => new StringSPWNExpr<T66>(ValueAsString).AsValue();

    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66>(T1 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66>(T2 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66>(T3 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66>(T4 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66>(T5 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66>(T6 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66>(T7 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66>(T8 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66>(T9 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66>(T10 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66>(T11 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66>(T12 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66>(T13 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66>(T14 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66>(T15 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66>(T16 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66>(T17 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66>(T18 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66>(T19 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66>(T20 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66>(T21 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66>(T22 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66>(T23 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66>(T24 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66>(T25 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66>(T26 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66>(T27 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66>(T28 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66>(T29 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66>(T30 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66>(T31 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66>(T32 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66>(T33 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66>(T34 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66>(T35 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66>(T36 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66>(T37 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66>(T38 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66>(T39 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66>(T40 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66>(T41 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66>(T42 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66>(T43 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66>(T44 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66>(T45 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66>(T46 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66>(T47 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66>(T48 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66>(T49 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66>(T50 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66>(T51 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66>(T52 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66>(T53 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66>(T54 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66>(T55 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66>(T56 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66>(T57 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66>(T58 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66>(T59 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66>(T60 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66>(T61 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66>(T62 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66>(T63 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66>(T64 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66>(T65 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66>(T66 Value) => new(Value);
}

// Note UnionTypes is NOT a Built-in type in SPWN
[SPWNType("@typeunion")]
public class UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67> : SPWNValueBase
    where T1 : SPWNValueBase
    where T2 : SPWNValueBase
    where T3 : SPWNValueBase
    where T4 : SPWNValueBase
    where T5 : SPWNValueBase
    where T6 : SPWNValueBase
    where T7 : SPWNValueBase
    where T8 : SPWNValueBase
    where T9 : SPWNValueBase
    where T10 : SPWNValueBase
    where T11 : SPWNValueBase
    where T12 : SPWNValueBase
    where T13 : SPWNValueBase
    where T14 : SPWNValueBase
    where T15 : SPWNValueBase
    where T16 : SPWNValueBase
    where T17 : SPWNValueBase
    where T18 : SPWNValueBase
    where T19 : SPWNValueBase
    where T20 : SPWNValueBase
    where T21 : SPWNValueBase
    where T22 : SPWNValueBase
    where T23 : SPWNValueBase
    where T24 : SPWNValueBase
    where T25 : SPWNValueBase
    where T26 : SPWNValueBase
    where T27 : SPWNValueBase
    where T28 : SPWNValueBase
    where T29 : SPWNValueBase
    where T30 : SPWNValueBase
    where T31 : SPWNValueBase
    where T32 : SPWNValueBase
    where T33 : SPWNValueBase
    where T34 : SPWNValueBase
    where T35 : SPWNValueBase
    where T36 : SPWNValueBase
    where T37 : SPWNValueBase
    where T38 : SPWNValueBase
    where T39 : SPWNValueBase
    where T40 : SPWNValueBase
    where T41 : SPWNValueBase
    where T42 : SPWNValueBase
    where T43 : SPWNValueBase
    where T44 : SPWNValueBase
    where T45 : SPWNValueBase
    where T46 : SPWNValueBase
    where T47 : SPWNValueBase
    where T48 : SPWNValueBase
    where T49 : SPWNValueBase
    where T50 : SPWNValueBase
    where T51 : SPWNValueBase
    where T52 : SPWNValueBase
    where T53 : SPWNValueBase
    where T54 : SPWNValueBase
    where T55 : SPWNValueBase
    where T56 : SPWNValueBase
    where T57 : SPWNValueBase
    where T58 : SPWNValueBase
    where T59 : SPWNValueBase
    where T60 : SPWNValueBase
    where T61 : SPWNValueBase
    where T62 : SPWNValueBase
    where T63 : SPWNValueBase
    where T64 : SPWNValueBase
    where T65 : SPWNValueBase
    where T66 : SPWNValueBase
    where T67 : SPWNValueBase
{
    public override string ValueAsString { get; protected set; }

    public UnionTypes(T1 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T2 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T3 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T4 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T5 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T6 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T7 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T8 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T9 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T10 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T11 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T12 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T13 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T14 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T15 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T16 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T17 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T18 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T19 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T20 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T21 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T22 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T23 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T24 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T25 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T26 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T27 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T28 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T29 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T30 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T31 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T32 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T33 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T34 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T35 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T36 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T37 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T38 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T39 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T40 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T41 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T42 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T43 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T44 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T45 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T46 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T47 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T48 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T49 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T50 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T51 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T52 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T53 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T54 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T55 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T56 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T57 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T58 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T59 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T60 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T61 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T62 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T63 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T64 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T65 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T66 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T67 Value) => ValueAsString = Value.ValueAsString;

    public bool IsT1 => Type == TypeIndicator.GetType<T1>();
    public bool IsT2 => Type == TypeIndicator.GetType<T2>();
    public bool IsT3 => Type == TypeIndicator.GetType<T3>();
    public bool IsT4 => Type == TypeIndicator.GetType<T4>();
    public bool IsT5 => Type == TypeIndicator.GetType<T5>();
    public bool IsT6 => Type == TypeIndicator.GetType<T6>();
    public bool IsT7 => Type == TypeIndicator.GetType<T7>();
    public bool IsT8 => Type == TypeIndicator.GetType<T8>();
    public bool IsT9 => Type == TypeIndicator.GetType<T9>();
    public bool IsT10 => Type == TypeIndicator.GetType<T10>();
    public bool IsT11 => Type == TypeIndicator.GetType<T11>();
    public bool IsT12 => Type == TypeIndicator.GetType<T12>();
    public bool IsT13 => Type == TypeIndicator.GetType<T13>();
    public bool IsT14 => Type == TypeIndicator.GetType<T14>();
    public bool IsT15 => Type == TypeIndicator.GetType<T15>();
    public bool IsT16 => Type == TypeIndicator.GetType<T16>();
    public bool IsT17 => Type == TypeIndicator.GetType<T17>();
    public bool IsT18 => Type == TypeIndicator.GetType<T18>();
    public bool IsT19 => Type == TypeIndicator.GetType<T19>();
    public bool IsT20 => Type == TypeIndicator.GetType<T20>();
    public bool IsT21 => Type == TypeIndicator.GetType<T21>();
    public bool IsT22 => Type == TypeIndicator.GetType<T22>();
    public bool IsT23 => Type == TypeIndicator.GetType<T23>();
    public bool IsT24 => Type == TypeIndicator.GetType<T24>();
    public bool IsT25 => Type == TypeIndicator.GetType<T25>();
    public bool IsT26 => Type == TypeIndicator.GetType<T26>();
    public bool IsT27 => Type == TypeIndicator.GetType<T27>();
    public bool IsT28 => Type == TypeIndicator.GetType<T28>();
    public bool IsT29 => Type == TypeIndicator.GetType<T29>();
    public bool IsT30 => Type == TypeIndicator.GetType<T30>();
    public bool IsT31 => Type == TypeIndicator.GetType<T31>();
    public bool IsT32 => Type == TypeIndicator.GetType<T32>();
    public bool IsT33 => Type == TypeIndicator.GetType<T33>();
    public bool IsT34 => Type == TypeIndicator.GetType<T34>();
    public bool IsT35 => Type == TypeIndicator.GetType<T35>();
    public bool IsT36 => Type == TypeIndicator.GetType<T36>();
    public bool IsT37 => Type == TypeIndicator.GetType<T37>();
    public bool IsT38 => Type == TypeIndicator.GetType<T38>();
    public bool IsT39 => Type == TypeIndicator.GetType<T39>();
    public bool IsT40 => Type == TypeIndicator.GetType<T40>();
    public bool IsT41 => Type == TypeIndicator.GetType<T41>();
    public bool IsT42 => Type == TypeIndicator.GetType<T42>();
    public bool IsT43 => Type == TypeIndicator.GetType<T43>();
    public bool IsT44 => Type == TypeIndicator.GetType<T44>();
    public bool IsT45 => Type == TypeIndicator.GetType<T45>();
    public bool IsT46 => Type == TypeIndicator.GetType<T46>();
    public bool IsT47 => Type == TypeIndicator.GetType<T47>();
    public bool IsT48 => Type == TypeIndicator.GetType<T48>();
    public bool IsT49 => Type == TypeIndicator.GetType<T49>();
    public bool IsT50 => Type == TypeIndicator.GetType<T50>();
    public bool IsT51 => Type == TypeIndicator.GetType<T51>();
    public bool IsT52 => Type == TypeIndicator.GetType<T52>();
    public bool IsT53 => Type == TypeIndicator.GetType<T53>();
    public bool IsT54 => Type == TypeIndicator.GetType<T54>();
    public bool IsT55 => Type == TypeIndicator.GetType<T55>();
    public bool IsT56 => Type == TypeIndicator.GetType<T56>();
    public bool IsT57 => Type == TypeIndicator.GetType<T57>();
    public bool IsT58 => Type == TypeIndicator.GetType<T58>();
    public bool IsT59 => Type == TypeIndicator.GetType<T59>();
    public bool IsT60 => Type == TypeIndicator.GetType<T60>();
    public bool IsT61 => Type == TypeIndicator.GetType<T61>();
    public bool IsT62 => Type == TypeIndicator.GetType<T62>();
    public bool IsT63 => Type == TypeIndicator.GetType<T63>();
    public bool IsT64 => Type == TypeIndicator.GetType<T64>();
    public bool IsT65 => Type == TypeIndicator.GetType<T65>();
    public bool IsT66 => Type == TypeIndicator.GetType<T66>();
    public bool IsT67 => Type == TypeIndicator.GetType<T67>();

    public T1 AsT1 => new StringSPWNExpr<T1>(ValueAsString).AsValue();
    public T2 AsT2 => new StringSPWNExpr<T2>(ValueAsString).AsValue();
    public T3 AsT3 => new StringSPWNExpr<T3>(ValueAsString).AsValue();
    public T4 AsT4 => new StringSPWNExpr<T4>(ValueAsString).AsValue();
    public T5 AsT5 => new StringSPWNExpr<T5>(ValueAsString).AsValue();
    public T6 AsT6 => new StringSPWNExpr<T6>(ValueAsString).AsValue();
    public T7 AsT7 => new StringSPWNExpr<T7>(ValueAsString).AsValue();
    public T8 AsT8 => new StringSPWNExpr<T8>(ValueAsString).AsValue();
    public T9 AsT9 => new StringSPWNExpr<T9>(ValueAsString).AsValue();
    public T10 AsT10 => new StringSPWNExpr<T10>(ValueAsString).AsValue();
    public T11 AsT11 => new StringSPWNExpr<T11>(ValueAsString).AsValue();
    public T12 AsT12 => new StringSPWNExpr<T12>(ValueAsString).AsValue();
    public T13 AsT13 => new StringSPWNExpr<T13>(ValueAsString).AsValue();
    public T14 AsT14 => new StringSPWNExpr<T14>(ValueAsString).AsValue();
    public T15 AsT15 => new StringSPWNExpr<T15>(ValueAsString).AsValue();
    public T16 AsT16 => new StringSPWNExpr<T16>(ValueAsString).AsValue();
    public T17 AsT17 => new StringSPWNExpr<T17>(ValueAsString).AsValue();
    public T18 AsT18 => new StringSPWNExpr<T18>(ValueAsString).AsValue();
    public T19 AsT19 => new StringSPWNExpr<T19>(ValueAsString).AsValue();
    public T20 AsT20 => new StringSPWNExpr<T20>(ValueAsString).AsValue();
    public T21 AsT21 => new StringSPWNExpr<T21>(ValueAsString).AsValue();
    public T22 AsT22 => new StringSPWNExpr<T22>(ValueAsString).AsValue();
    public T23 AsT23 => new StringSPWNExpr<T23>(ValueAsString).AsValue();
    public T24 AsT24 => new StringSPWNExpr<T24>(ValueAsString).AsValue();
    public T25 AsT25 => new StringSPWNExpr<T25>(ValueAsString).AsValue();
    public T26 AsT26 => new StringSPWNExpr<T26>(ValueAsString).AsValue();
    public T27 AsT27 => new StringSPWNExpr<T27>(ValueAsString).AsValue();
    public T28 AsT28 => new StringSPWNExpr<T28>(ValueAsString).AsValue();
    public T29 AsT29 => new StringSPWNExpr<T29>(ValueAsString).AsValue();
    public T30 AsT30 => new StringSPWNExpr<T30>(ValueAsString).AsValue();
    public T31 AsT31 => new StringSPWNExpr<T31>(ValueAsString).AsValue();
    public T32 AsT32 => new StringSPWNExpr<T32>(ValueAsString).AsValue();
    public T33 AsT33 => new StringSPWNExpr<T33>(ValueAsString).AsValue();
    public T34 AsT34 => new StringSPWNExpr<T34>(ValueAsString).AsValue();
    public T35 AsT35 => new StringSPWNExpr<T35>(ValueAsString).AsValue();
    public T36 AsT36 => new StringSPWNExpr<T36>(ValueAsString).AsValue();
    public T37 AsT37 => new StringSPWNExpr<T37>(ValueAsString).AsValue();
    public T38 AsT38 => new StringSPWNExpr<T38>(ValueAsString).AsValue();
    public T39 AsT39 => new StringSPWNExpr<T39>(ValueAsString).AsValue();
    public T40 AsT40 => new StringSPWNExpr<T40>(ValueAsString).AsValue();
    public T41 AsT41 => new StringSPWNExpr<T41>(ValueAsString).AsValue();
    public T42 AsT42 => new StringSPWNExpr<T42>(ValueAsString).AsValue();
    public T43 AsT43 => new StringSPWNExpr<T43>(ValueAsString).AsValue();
    public T44 AsT44 => new StringSPWNExpr<T44>(ValueAsString).AsValue();
    public T45 AsT45 => new StringSPWNExpr<T45>(ValueAsString).AsValue();
    public T46 AsT46 => new StringSPWNExpr<T46>(ValueAsString).AsValue();
    public T47 AsT47 => new StringSPWNExpr<T47>(ValueAsString).AsValue();
    public T48 AsT48 => new StringSPWNExpr<T48>(ValueAsString).AsValue();
    public T49 AsT49 => new StringSPWNExpr<T49>(ValueAsString).AsValue();
    public T50 AsT50 => new StringSPWNExpr<T50>(ValueAsString).AsValue();
    public T51 AsT51 => new StringSPWNExpr<T51>(ValueAsString).AsValue();
    public T52 AsT52 => new StringSPWNExpr<T52>(ValueAsString).AsValue();
    public T53 AsT53 => new StringSPWNExpr<T53>(ValueAsString).AsValue();
    public T54 AsT54 => new StringSPWNExpr<T54>(ValueAsString).AsValue();
    public T55 AsT55 => new StringSPWNExpr<T55>(ValueAsString).AsValue();
    public T56 AsT56 => new StringSPWNExpr<T56>(ValueAsString).AsValue();
    public T57 AsT57 => new StringSPWNExpr<T57>(ValueAsString).AsValue();
    public T58 AsT58 => new StringSPWNExpr<T58>(ValueAsString).AsValue();
    public T59 AsT59 => new StringSPWNExpr<T59>(ValueAsString).AsValue();
    public T60 AsT60 => new StringSPWNExpr<T60>(ValueAsString).AsValue();
    public T61 AsT61 => new StringSPWNExpr<T61>(ValueAsString).AsValue();
    public T62 AsT62 => new StringSPWNExpr<T62>(ValueAsString).AsValue();
    public T63 AsT63 => new StringSPWNExpr<T63>(ValueAsString).AsValue();
    public T64 AsT64 => new StringSPWNExpr<T64>(ValueAsString).AsValue();
    public T65 AsT65 => new StringSPWNExpr<T65>(ValueAsString).AsValue();
    public T66 AsT66 => new StringSPWNExpr<T66>(ValueAsString).AsValue();
    public T67 AsT67 => new StringSPWNExpr<T67>(ValueAsString).AsValue();

    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67>(T1 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67>(T2 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67>(T3 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67>(T4 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67>(T5 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67>(T6 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67>(T7 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67>(T8 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67>(T9 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67>(T10 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67>(T11 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67>(T12 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67>(T13 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67>(T14 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67>(T15 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67>(T16 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67>(T17 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67>(T18 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67>(T19 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67>(T20 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67>(T21 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67>(T22 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67>(T23 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67>(T24 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67>(T25 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67>(T26 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67>(T27 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67>(T28 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67>(T29 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67>(T30 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67>(T31 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67>(T32 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67>(T33 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67>(T34 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67>(T35 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67>(T36 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67>(T37 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67>(T38 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67>(T39 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67>(T40 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67>(T41 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67>(T42 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67>(T43 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67>(T44 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67>(T45 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67>(T46 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67>(T47 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67>(T48 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67>(T49 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67>(T50 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67>(T51 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67>(T52 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67>(T53 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67>(T54 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67>(T55 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67>(T56 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67>(T57 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67>(T58 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67>(T59 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67>(T60 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67>(T61 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67>(T62 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67>(T63 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67>(T64 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67>(T65 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67>(T66 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67>(T67 Value) => new(Value);
}

// Note UnionTypes is NOT a Built-in type in SPWN
[SPWNType("@typeunion")]
public class UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68> : SPWNValueBase
    where T1 : SPWNValueBase
    where T2 : SPWNValueBase
    where T3 : SPWNValueBase
    where T4 : SPWNValueBase
    where T5 : SPWNValueBase
    where T6 : SPWNValueBase
    where T7 : SPWNValueBase
    where T8 : SPWNValueBase
    where T9 : SPWNValueBase
    where T10 : SPWNValueBase
    where T11 : SPWNValueBase
    where T12 : SPWNValueBase
    where T13 : SPWNValueBase
    where T14 : SPWNValueBase
    where T15 : SPWNValueBase
    where T16 : SPWNValueBase
    where T17 : SPWNValueBase
    where T18 : SPWNValueBase
    where T19 : SPWNValueBase
    where T20 : SPWNValueBase
    where T21 : SPWNValueBase
    where T22 : SPWNValueBase
    where T23 : SPWNValueBase
    where T24 : SPWNValueBase
    where T25 : SPWNValueBase
    where T26 : SPWNValueBase
    where T27 : SPWNValueBase
    where T28 : SPWNValueBase
    where T29 : SPWNValueBase
    where T30 : SPWNValueBase
    where T31 : SPWNValueBase
    where T32 : SPWNValueBase
    where T33 : SPWNValueBase
    where T34 : SPWNValueBase
    where T35 : SPWNValueBase
    where T36 : SPWNValueBase
    where T37 : SPWNValueBase
    where T38 : SPWNValueBase
    where T39 : SPWNValueBase
    where T40 : SPWNValueBase
    where T41 : SPWNValueBase
    where T42 : SPWNValueBase
    where T43 : SPWNValueBase
    where T44 : SPWNValueBase
    where T45 : SPWNValueBase
    where T46 : SPWNValueBase
    where T47 : SPWNValueBase
    where T48 : SPWNValueBase
    where T49 : SPWNValueBase
    where T50 : SPWNValueBase
    where T51 : SPWNValueBase
    where T52 : SPWNValueBase
    where T53 : SPWNValueBase
    where T54 : SPWNValueBase
    where T55 : SPWNValueBase
    where T56 : SPWNValueBase
    where T57 : SPWNValueBase
    where T58 : SPWNValueBase
    where T59 : SPWNValueBase
    where T60 : SPWNValueBase
    where T61 : SPWNValueBase
    where T62 : SPWNValueBase
    where T63 : SPWNValueBase
    where T64 : SPWNValueBase
    where T65 : SPWNValueBase
    where T66 : SPWNValueBase
    where T67 : SPWNValueBase
    where T68 : SPWNValueBase
{
    public override string ValueAsString { get; protected set; }

    public UnionTypes(T1 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T2 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T3 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T4 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T5 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T6 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T7 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T8 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T9 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T10 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T11 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T12 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T13 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T14 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T15 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T16 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T17 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T18 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T19 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T20 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T21 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T22 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T23 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T24 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T25 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T26 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T27 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T28 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T29 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T30 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T31 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T32 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T33 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T34 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T35 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T36 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T37 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T38 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T39 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T40 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T41 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T42 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T43 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T44 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T45 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T46 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T47 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T48 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T49 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T50 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T51 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T52 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T53 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T54 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T55 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T56 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T57 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T58 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T59 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T60 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T61 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T62 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T63 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T64 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T65 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T66 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T67 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T68 Value) => ValueAsString = Value.ValueAsString;

    public bool IsT1 => Type == TypeIndicator.GetType<T1>();
    public bool IsT2 => Type == TypeIndicator.GetType<T2>();
    public bool IsT3 => Type == TypeIndicator.GetType<T3>();
    public bool IsT4 => Type == TypeIndicator.GetType<T4>();
    public bool IsT5 => Type == TypeIndicator.GetType<T5>();
    public bool IsT6 => Type == TypeIndicator.GetType<T6>();
    public bool IsT7 => Type == TypeIndicator.GetType<T7>();
    public bool IsT8 => Type == TypeIndicator.GetType<T8>();
    public bool IsT9 => Type == TypeIndicator.GetType<T9>();
    public bool IsT10 => Type == TypeIndicator.GetType<T10>();
    public bool IsT11 => Type == TypeIndicator.GetType<T11>();
    public bool IsT12 => Type == TypeIndicator.GetType<T12>();
    public bool IsT13 => Type == TypeIndicator.GetType<T13>();
    public bool IsT14 => Type == TypeIndicator.GetType<T14>();
    public bool IsT15 => Type == TypeIndicator.GetType<T15>();
    public bool IsT16 => Type == TypeIndicator.GetType<T16>();
    public bool IsT17 => Type == TypeIndicator.GetType<T17>();
    public bool IsT18 => Type == TypeIndicator.GetType<T18>();
    public bool IsT19 => Type == TypeIndicator.GetType<T19>();
    public bool IsT20 => Type == TypeIndicator.GetType<T20>();
    public bool IsT21 => Type == TypeIndicator.GetType<T21>();
    public bool IsT22 => Type == TypeIndicator.GetType<T22>();
    public bool IsT23 => Type == TypeIndicator.GetType<T23>();
    public bool IsT24 => Type == TypeIndicator.GetType<T24>();
    public bool IsT25 => Type == TypeIndicator.GetType<T25>();
    public bool IsT26 => Type == TypeIndicator.GetType<T26>();
    public bool IsT27 => Type == TypeIndicator.GetType<T27>();
    public bool IsT28 => Type == TypeIndicator.GetType<T28>();
    public bool IsT29 => Type == TypeIndicator.GetType<T29>();
    public bool IsT30 => Type == TypeIndicator.GetType<T30>();
    public bool IsT31 => Type == TypeIndicator.GetType<T31>();
    public bool IsT32 => Type == TypeIndicator.GetType<T32>();
    public bool IsT33 => Type == TypeIndicator.GetType<T33>();
    public bool IsT34 => Type == TypeIndicator.GetType<T34>();
    public bool IsT35 => Type == TypeIndicator.GetType<T35>();
    public bool IsT36 => Type == TypeIndicator.GetType<T36>();
    public bool IsT37 => Type == TypeIndicator.GetType<T37>();
    public bool IsT38 => Type == TypeIndicator.GetType<T38>();
    public bool IsT39 => Type == TypeIndicator.GetType<T39>();
    public bool IsT40 => Type == TypeIndicator.GetType<T40>();
    public bool IsT41 => Type == TypeIndicator.GetType<T41>();
    public bool IsT42 => Type == TypeIndicator.GetType<T42>();
    public bool IsT43 => Type == TypeIndicator.GetType<T43>();
    public bool IsT44 => Type == TypeIndicator.GetType<T44>();
    public bool IsT45 => Type == TypeIndicator.GetType<T45>();
    public bool IsT46 => Type == TypeIndicator.GetType<T46>();
    public bool IsT47 => Type == TypeIndicator.GetType<T47>();
    public bool IsT48 => Type == TypeIndicator.GetType<T48>();
    public bool IsT49 => Type == TypeIndicator.GetType<T49>();
    public bool IsT50 => Type == TypeIndicator.GetType<T50>();
    public bool IsT51 => Type == TypeIndicator.GetType<T51>();
    public bool IsT52 => Type == TypeIndicator.GetType<T52>();
    public bool IsT53 => Type == TypeIndicator.GetType<T53>();
    public bool IsT54 => Type == TypeIndicator.GetType<T54>();
    public bool IsT55 => Type == TypeIndicator.GetType<T55>();
    public bool IsT56 => Type == TypeIndicator.GetType<T56>();
    public bool IsT57 => Type == TypeIndicator.GetType<T57>();
    public bool IsT58 => Type == TypeIndicator.GetType<T58>();
    public bool IsT59 => Type == TypeIndicator.GetType<T59>();
    public bool IsT60 => Type == TypeIndicator.GetType<T60>();
    public bool IsT61 => Type == TypeIndicator.GetType<T61>();
    public bool IsT62 => Type == TypeIndicator.GetType<T62>();
    public bool IsT63 => Type == TypeIndicator.GetType<T63>();
    public bool IsT64 => Type == TypeIndicator.GetType<T64>();
    public bool IsT65 => Type == TypeIndicator.GetType<T65>();
    public bool IsT66 => Type == TypeIndicator.GetType<T66>();
    public bool IsT67 => Type == TypeIndicator.GetType<T67>();
    public bool IsT68 => Type == TypeIndicator.GetType<T68>();

    public T1 AsT1 => new StringSPWNExpr<T1>(ValueAsString).AsValue();
    public T2 AsT2 => new StringSPWNExpr<T2>(ValueAsString).AsValue();
    public T3 AsT3 => new StringSPWNExpr<T3>(ValueAsString).AsValue();
    public T4 AsT4 => new StringSPWNExpr<T4>(ValueAsString).AsValue();
    public T5 AsT5 => new StringSPWNExpr<T5>(ValueAsString).AsValue();
    public T6 AsT6 => new StringSPWNExpr<T6>(ValueAsString).AsValue();
    public T7 AsT7 => new StringSPWNExpr<T7>(ValueAsString).AsValue();
    public T8 AsT8 => new StringSPWNExpr<T8>(ValueAsString).AsValue();
    public T9 AsT9 => new StringSPWNExpr<T9>(ValueAsString).AsValue();
    public T10 AsT10 => new StringSPWNExpr<T10>(ValueAsString).AsValue();
    public T11 AsT11 => new StringSPWNExpr<T11>(ValueAsString).AsValue();
    public T12 AsT12 => new StringSPWNExpr<T12>(ValueAsString).AsValue();
    public T13 AsT13 => new StringSPWNExpr<T13>(ValueAsString).AsValue();
    public T14 AsT14 => new StringSPWNExpr<T14>(ValueAsString).AsValue();
    public T15 AsT15 => new StringSPWNExpr<T15>(ValueAsString).AsValue();
    public T16 AsT16 => new StringSPWNExpr<T16>(ValueAsString).AsValue();
    public T17 AsT17 => new StringSPWNExpr<T17>(ValueAsString).AsValue();
    public T18 AsT18 => new StringSPWNExpr<T18>(ValueAsString).AsValue();
    public T19 AsT19 => new StringSPWNExpr<T19>(ValueAsString).AsValue();
    public T20 AsT20 => new StringSPWNExpr<T20>(ValueAsString).AsValue();
    public T21 AsT21 => new StringSPWNExpr<T21>(ValueAsString).AsValue();
    public T22 AsT22 => new StringSPWNExpr<T22>(ValueAsString).AsValue();
    public T23 AsT23 => new StringSPWNExpr<T23>(ValueAsString).AsValue();
    public T24 AsT24 => new StringSPWNExpr<T24>(ValueAsString).AsValue();
    public T25 AsT25 => new StringSPWNExpr<T25>(ValueAsString).AsValue();
    public T26 AsT26 => new StringSPWNExpr<T26>(ValueAsString).AsValue();
    public T27 AsT27 => new StringSPWNExpr<T27>(ValueAsString).AsValue();
    public T28 AsT28 => new StringSPWNExpr<T28>(ValueAsString).AsValue();
    public T29 AsT29 => new StringSPWNExpr<T29>(ValueAsString).AsValue();
    public T30 AsT30 => new StringSPWNExpr<T30>(ValueAsString).AsValue();
    public T31 AsT31 => new StringSPWNExpr<T31>(ValueAsString).AsValue();
    public T32 AsT32 => new StringSPWNExpr<T32>(ValueAsString).AsValue();
    public T33 AsT33 => new StringSPWNExpr<T33>(ValueAsString).AsValue();
    public T34 AsT34 => new StringSPWNExpr<T34>(ValueAsString).AsValue();
    public T35 AsT35 => new StringSPWNExpr<T35>(ValueAsString).AsValue();
    public T36 AsT36 => new StringSPWNExpr<T36>(ValueAsString).AsValue();
    public T37 AsT37 => new StringSPWNExpr<T37>(ValueAsString).AsValue();
    public T38 AsT38 => new StringSPWNExpr<T38>(ValueAsString).AsValue();
    public T39 AsT39 => new StringSPWNExpr<T39>(ValueAsString).AsValue();
    public T40 AsT40 => new StringSPWNExpr<T40>(ValueAsString).AsValue();
    public T41 AsT41 => new StringSPWNExpr<T41>(ValueAsString).AsValue();
    public T42 AsT42 => new StringSPWNExpr<T42>(ValueAsString).AsValue();
    public T43 AsT43 => new StringSPWNExpr<T43>(ValueAsString).AsValue();
    public T44 AsT44 => new StringSPWNExpr<T44>(ValueAsString).AsValue();
    public T45 AsT45 => new StringSPWNExpr<T45>(ValueAsString).AsValue();
    public T46 AsT46 => new StringSPWNExpr<T46>(ValueAsString).AsValue();
    public T47 AsT47 => new StringSPWNExpr<T47>(ValueAsString).AsValue();
    public T48 AsT48 => new StringSPWNExpr<T48>(ValueAsString).AsValue();
    public T49 AsT49 => new StringSPWNExpr<T49>(ValueAsString).AsValue();
    public T50 AsT50 => new StringSPWNExpr<T50>(ValueAsString).AsValue();
    public T51 AsT51 => new StringSPWNExpr<T51>(ValueAsString).AsValue();
    public T52 AsT52 => new StringSPWNExpr<T52>(ValueAsString).AsValue();
    public T53 AsT53 => new StringSPWNExpr<T53>(ValueAsString).AsValue();
    public T54 AsT54 => new StringSPWNExpr<T54>(ValueAsString).AsValue();
    public T55 AsT55 => new StringSPWNExpr<T55>(ValueAsString).AsValue();
    public T56 AsT56 => new StringSPWNExpr<T56>(ValueAsString).AsValue();
    public T57 AsT57 => new StringSPWNExpr<T57>(ValueAsString).AsValue();
    public T58 AsT58 => new StringSPWNExpr<T58>(ValueAsString).AsValue();
    public T59 AsT59 => new StringSPWNExpr<T59>(ValueAsString).AsValue();
    public T60 AsT60 => new StringSPWNExpr<T60>(ValueAsString).AsValue();
    public T61 AsT61 => new StringSPWNExpr<T61>(ValueAsString).AsValue();
    public T62 AsT62 => new StringSPWNExpr<T62>(ValueAsString).AsValue();
    public T63 AsT63 => new StringSPWNExpr<T63>(ValueAsString).AsValue();
    public T64 AsT64 => new StringSPWNExpr<T64>(ValueAsString).AsValue();
    public T65 AsT65 => new StringSPWNExpr<T65>(ValueAsString).AsValue();
    public T66 AsT66 => new StringSPWNExpr<T66>(ValueAsString).AsValue();
    public T67 AsT67 => new StringSPWNExpr<T67>(ValueAsString).AsValue();
    public T68 AsT68 => new StringSPWNExpr<T68>(ValueAsString).AsValue();

    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68>(T1 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68>(T2 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68>(T3 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68>(T4 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68>(T5 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68>(T6 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68>(T7 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68>(T8 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68>(T9 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68>(T10 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68>(T11 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68>(T12 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68>(T13 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68>(T14 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68>(T15 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68>(T16 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68>(T17 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68>(T18 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68>(T19 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68>(T20 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68>(T21 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68>(T22 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68>(T23 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68>(T24 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68>(T25 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68>(T26 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68>(T27 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68>(T28 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68>(T29 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68>(T30 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68>(T31 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68>(T32 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68>(T33 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68>(T34 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68>(T35 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68>(T36 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68>(T37 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68>(T38 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68>(T39 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68>(T40 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68>(T41 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68>(T42 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68>(T43 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68>(T44 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68>(T45 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68>(T46 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68>(T47 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68>(T48 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68>(T49 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68>(T50 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68>(T51 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68>(T52 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68>(T53 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68>(T54 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68>(T55 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68>(T56 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68>(T57 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68>(T58 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68>(T59 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68>(T60 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68>(T61 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68>(T62 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68>(T63 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68>(T64 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68>(T65 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68>(T66 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68>(T67 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68>(T68 Value) => new(Value);
}

// Note UnionTypes is NOT a Built-in type in SPWN
[SPWNType("@typeunion")]
public class UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68, T69> : SPWNValueBase
    where T1 : SPWNValueBase
    where T2 : SPWNValueBase
    where T3 : SPWNValueBase
    where T4 : SPWNValueBase
    where T5 : SPWNValueBase
    where T6 : SPWNValueBase
    where T7 : SPWNValueBase
    where T8 : SPWNValueBase
    where T9 : SPWNValueBase
    where T10 : SPWNValueBase
    where T11 : SPWNValueBase
    where T12 : SPWNValueBase
    where T13 : SPWNValueBase
    where T14 : SPWNValueBase
    where T15 : SPWNValueBase
    where T16 : SPWNValueBase
    where T17 : SPWNValueBase
    where T18 : SPWNValueBase
    where T19 : SPWNValueBase
    where T20 : SPWNValueBase
    where T21 : SPWNValueBase
    where T22 : SPWNValueBase
    where T23 : SPWNValueBase
    where T24 : SPWNValueBase
    where T25 : SPWNValueBase
    where T26 : SPWNValueBase
    where T27 : SPWNValueBase
    where T28 : SPWNValueBase
    where T29 : SPWNValueBase
    where T30 : SPWNValueBase
    where T31 : SPWNValueBase
    where T32 : SPWNValueBase
    where T33 : SPWNValueBase
    where T34 : SPWNValueBase
    where T35 : SPWNValueBase
    where T36 : SPWNValueBase
    where T37 : SPWNValueBase
    where T38 : SPWNValueBase
    where T39 : SPWNValueBase
    where T40 : SPWNValueBase
    where T41 : SPWNValueBase
    where T42 : SPWNValueBase
    where T43 : SPWNValueBase
    where T44 : SPWNValueBase
    where T45 : SPWNValueBase
    where T46 : SPWNValueBase
    where T47 : SPWNValueBase
    where T48 : SPWNValueBase
    where T49 : SPWNValueBase
    where T50 : SPWNValueBase
    where T51 : SPWNValueBase
    where T52 : SPWNValueBase
    where T53 : SPWNValueBase
    where T54 : SPWNValueBase
    where T55 : SPWNValueBase
    where T56 : SPWNValueBase
    where T57 : SPWNValueBase
    where T58 : SPWNValueBase
    where T59 : SPWNValueBase
    where T60 : SPWNValueBase
    where T61 : SPWNValueBase
    where T62 : SPWNValueBase
    where T63 : SPWNValueBase
    where T64 : SPWNValueBase
    where T65 : SPWNValueBase
    where T66 : SPWNValueBase
    where T67 : SPWNValueBase
    where T68 : SPWNValueBase
    where T69 : SPWNValueBase
{
    public override string ValueAsString { get; protected set; }

    public UnionTypes(T1 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T2 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T3 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T4 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T5 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T6 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T7 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T8 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T9 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T10 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T11 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T12 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T13 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T14 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T15 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T16 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T17 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T18 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T19 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T20 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T21 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T22 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T23 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T24 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T25 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T26 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T27 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T28 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T29 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T30 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T31 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T32 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T33 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T34 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T35 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T36 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T37 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T38 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T39 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T40 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T41 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T42 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T43 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T44 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T45 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T46 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T47 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T48 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T49 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T50 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T51 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T52 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T53 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T54 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T55 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T56 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T57 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T58 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T59 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T60 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T61 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T62 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T63 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T64 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T65 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T66 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T67 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T68 Value) => ValueAsString = Value.ValueAsString;
    public UnionTypes(T69 Value) => ValueAsString = Value.ValueAsString;

    public bool IsT1 => Type == TypeIndicator.GetType<T1>();
    public bool IsT2 => Type == TypeIndicator.GetType<T2>();
    public bool IsT3 => Type == TypeIndicator.GetType<T3>();
    public bool IsT4 => Type == TypeIndicator.GetType<T4>();
    public bool IsT5 => Type == TypeIndicator.GetType<T5>();
    public bool IsT6 => Type == TypeIndicator.GetType<T6>();
    public bool IsT7 => Type == TypeIndicator.GetType<T7>();
    public bool IsT8 => Type == TypeIndicator.GetType<T8>();
    public bool IsT9 => Type == TypeIndicator.GetType<T9>();
    public bool IsT10 => Type == TypeIndicator.GetType<T10>();
    public bool IsT11 => Type == TypeIndicator.GetType<T11>();
    public bool IsT12 => Type == TypeIndicator.GetType<T12>();
    public bool IsT13 => Type == TypeIndicator.GetType<T13>();
    public bool IsT14 => Type == TypeIndicator.GetType<T14>();
    public bool IsT15 => Type == TypeIndicator.GetType<T15>();
    public bool IsT16 => Type == TypeIndicator.GetType<T16>();
    public bool IsT17 => Type == TypeIndicator.GetType<T17>();
    public bool IsT18 => Type == TypeIndicator.GetType<T18>();
    public bool IsT19 => Type == TypeIndicator.GetType<T19>();
    public bool IsT20 => Type == TypeIndicator.GetType<T20>();
    public bool IsT21 => Type == TypeIndicator.GetType<T21>();
    public bool IsT22 => Type == TypeIndicator.GetType<T22>();
    public bool IsT23 => Type == TypeIndicator.GetType<T23>();
    public bool IsT24 => Type == TypeIndicator.GetType<T24>();
    public bool IsT25 => Type == TypeIndicator.GetType<T25>();
    public bool IsT26 => Type == TypeIndicator.GetType<T26>();
    public bool IsT27 => Type == TypeIndicator.GetType<T27>();
    public bool IsT28 => Type == TypeIndicator.GetType<T28>();
    public bool IsT29 => Type == TypeIndicator.GetType<T29>();
    public bool IsT30 => Type == TypeIndicator.GetType<T30>();
    public bool IsT31 => Type == TypeIndicator.GetType<T31>();
    public bool IsT32 => Type == TypeIndicator.GetType<T32>();
    public bool IsT33 => Type == TypeIndicator.GetType<T33>();
    public bool IsT34 => Type == TypeIndicator.GetType<T34>();
    public bool IsT35 => Type == TypeIndicator.GetType<T35>();
    public bool IsT36 => Type == TypeIndicator.GetType<T36>();
    public bool IsT37 => Type == TypeIndicator.GetType<T37>();
    public bool IsT38 => Type == TypeIndicator.GetType<T38>();
    public bool IsT39 => Type == TypeIndicator.GetType<T39>();
    public bool IsT40 => Type == TypeIndicator.GetType<T40>();
    public bool IsT41 => Type == TypeIndicator.GetType<T41>();
    public bool IsT42 => Type == TypeIndicator.GetType<T42>();
    public bool IsT43 => Type == TypeIndicator.GetType<T43>();
    public bool IsT44 => Type == TypeIndicator.GetType<T44>();
    public bool IsT45 => Type == TypeIndicator.GetType<T45>();
    public bool IsT46 => Type == TypeIndicator.GetType<T46>();
    public bool IsT47 => Type == TypeIndicator.GetType<T47>();
    public bool IsT48 => Type == TypeIndicator.GetType<T48>();
    public bool IsT49 => Type == TypeIndicator.GetType<T49>();
    public bool IsT50 => Type == TypeIndicator.GetType<T50>();
    public bool IsT51 => Type == TypeIndicator.GetType<T51>();
    public bool IsT52 => Type == TypeIndicator.GetType<T52>();
    public bool IsT53 => Type == TypeIndicator.GetType<T53>();
    public bool IsT54 => Type == TypeIndicator.GetType<T54>();
    public bool IsT55 => Type == TypeIndicator.GetType<T55>();
    public bool IsT56 => Type == TypeIndicator.GetType<T56>();
    public bool IsT57 => Type == TypeIndicator.GetType<T57>();
    public bool IsT58 => Type == TypeIndicator.GetType<T58>();
    public bool IsT59 => Type == TypeIndicator.GetType<T59>();
    public bool IsT60 => Type == TypeIndicator.GetType<T60>();
    public bool IsT61 => Type == TypeIndicator.GetType<T61>();
    public bool IsT62 => Type == TypeIndicator.GetType<T62>();
    public bool IsT63 => Type == TypeIndicator.GetType<T63>();
    public bool IsT64 => Type == TypeIndicator.GetType<T64>();
    public bool IsT65 => Type == TypeIndicator.GetType<T65>();
    public bool IsT66 => Type == TypeIndicator.GetType<T66>();
    public bool IsT67 => Type == TypeIndicator.GetType<T67>();
    public bool IsT68 => Type == TypeIndicator.GetType<T68>();
    public bool IsT69 => Type == TypeIndicator.GetType<T69>();

    public T1 AsT1 => new StringSPWNExpr<T1>(ValueAsString).AsValue();
    public T2 AsT2 => new StringSPWNExpr<T2>(ValueAsString).AsValue();
    public T3 AsT3 => new StringSPWNExpr<T3>(ValueAsString).AsValue();
    public T4 AsT4 => new StringSPWNExpr<T4>(ValueAsString).AsValue();
    public T5 AsT5 => new StringSPWNExpr<T5>(ValueAsString).AsValue();
    public T6 AsT6 => new StringSPWNExpr<T6>(ValueAsString).AsValue();
    public T7 AsT7 => new StringSPWNExpr<T7>(ValueAsString).AsValue();
    public T8 AsT8 => new StringSPWNExpr<T8>(ValueAsString).AsValue();
    public T9 AsT9 => new StringSPWNExpr<T9>(ValueAsString).AsValue();
    public T10 AsT10 => new StringSPWNExpr<T10>(ValueAsString).AsValue();
    public T11 AsT11 => new StringSPWNExpr<T11>(ValueAsString).AsValue();
    public T12 AsT12 => new StringSPWNExpr<T12>(ValueAsString).AsValue();
    public T13 AsT13 => new StringSPWNExpr<T13>(ValueAsString).AsValue();
    public T14 AsT14 => new StringSPWNExpr<T14>(ValueAsString).AsValue();
    public T15 AsT15 => new StringSPWNExpr<T15>(ValueAsString).AsValue();
    public T16 AsT16 => new StringSPWNExpr<T16>(ValueAsString).AsValue();
    public T17 AsT17 => new StringSPWNExpr<T17>(ValueAsString).AsValue();
    public T18 AsT18 => new StringSPWNExpr<T18>(ValueAsString).AsValue();
    public T19 AsT19 => new StringSPWNExpr<T19>(ValueAsString).AsValue();
    public T20 AsT20 => new StringSPWNExpr<T20>(ValueAsString).AsValue();
    public T21 AsT21 => new StringSPWNExpr<T21>(ValueAsString).AsValue();
    public T22 AsT22 => new StringSPWNExpr<T22>(ValueAsString).AsValue();
    public T23 AsT23 => new StringSPWNExpr<T23>(ValueAsString).AsValue();
    public T24 AsT24 => new StringSPWNExpr<T24>(ValueAsString).AsValue();
    public T25 AsT25 => new StringSPWNExpr<T25>(ValueAsString).AsValue();
    public T26 AsT26 => new StringSPWNExpr<T26>(ValueAsString).AsValue();
    public T27 AsT27 => new StringSPWNExpr<T27>(ValueAsString).AsValue();
    public T28 AsT28 => new StringSPWNExpr<T28>(ValueAsString).AsValue();
    public T29 AsT29 => new StringSPWNExpr<T29>(ValueAsString).AsValue();
    public T30 AsT30 => new StringSPWNExpr<T30>(ValueAsString).AsValue();
    public T31 AsT31 => new StringSPWNExpr<T31>(ValueAsString).AsValue();
    public T32 AsT32 => new StringSPWNExpr<T32>(ValueAsString).AsValue();
    public T33 AsT33 => new StringSPWNExpr<T33>(ValueAsString).AsValue();
    public T34 AsT34 => new StringSPWNExpr<T34>(ValueAsString).AsValue();
    public T35 AsT35 => new StringSPWNExpr<T35>(ValueAsString).AsValue();
    public T36 AsT36 => new StringSPWNExpr<T36>(ValueAsString).AsValue();
    public T37 AsT37 => new StringSPWNExpr<T37>(ValueAsString).AsValue();
    public T38 AsT38 => new StringSPWNExpr<T38>(ValueAsString).AsValue();
    public T39 AsT39 => new StringSPWNExpr<T39>(ValueAsString).AsValue();
    public T40 AsT40 => new StringSPWNExpr<T40>(ValueAsString).AsValue();
    public T41 AsT41 => new StringSPWNExpr<T41>(ValueAsString).AsValue();
    public T42 AsT42 => new StringSPWNExpr<T42>(ValueAsString).AsValue();
    public T43 AsT43 => new StringSPWNExpr<T43>(ValueAsString).AsValue();
    public T44 AsT44 => new StringSPWNExpr<T44>(ValueAsString).AsValue();
    public T45 AsT45 => new StringSPWNExpr<T45>(ValueAsString).AsValue();
    public T46 AsT46 => new StringSPWNExpr<T46>(ValueAsString).AsValue();
    public T47 AsT47 => new StringSPWNExpr<T47>(ValueAsString).AsValue();
    public T48 AsT48 => new StringSPWNExpr<T48>(ValueAsString).AsValue();
    public T49 AsT49 => new StringSPWNExpr<T49>(ValueAsString).AsValue();
    public T50 AsT50 => new StringSPWNExpr<T50>(ValueAsString).AsValue();
    public T51 AsT51 => new StringSPWNExpr<T51>(ValueAsString).AsValue();
    public T52 AsT52 => new StringSPWNExpr<T52>(ValueAsString).AsValue();
    public T53 AsT53 => new StringSPWNExpr<T53>(ValueAsString).AsValue();
    public T54 AsT54 => new StringSPWNExpr<T54>(ValueAsString).AsValue();
    public T55 AsT55 => new StringSPWNExpr<T55>(ValueAsString).AsValue();
    public T56 AsT56 => new StringSPWNExpr<T56>(ValueAsString).AsValue();
    public T57 AsT57 => new StringSPWNExpr<T57>(ValueAsString).AsValue();
    public T58 AsT58 => new StringSPWNExpr<T58>(ValueAsString).AsValue();
    public T59 AsT59 => new StringSPWNExpr<T59>(ValueAsString).AsValue();
    public T60 AsT60 => new StringSPWNExpr<T60>(ValueAsString).AsValue();
    public T61 AsT61 => new StringSPWNExpr<T61>(ValueAsString).AsValue();
    public T62 AsT62 => new StringSPWNExpr<T62>(ValueAsString).AsValue();
    public T63 AsT63 => new StringSPWNExpr<T63>(ValueAsString).AsValue();
    public T64 AsT64 => new StringSPWNExpr<T64>(ValueAsString).AsValue();
    public T65 AsT65 => new StringSPWNExpr<T65>(ValueAsString).AsValue();
    public T66 AsT66 => new StringSPWNExpr<T66>(ValueAsString).AsValue();
    public T67 AsT67 => new StringSPWNExpr<T67>(ValueAsString).AsValue();
    public T68 AsT68 => new StringSPWNExpr<T68>(ValueAsString).AsValue();
    public T69 AsT69 => new StringSPWNExpr<T69>(ValueAsString).AsValue();

    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68, T69>(T1 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68, T69>(T2 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68, T69>(T3 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68, T69>(T4 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68, T69>(T5 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68, T69>(T6 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68, T69>(T7 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68, T69>(T8 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68, T69>(T9 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68, T69>(T10 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68, T69>(T11 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68, T69>(T12 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68, T69>(T13 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68, T69>(T14 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68, T69>(T15 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68, T69>(T16 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68, T69>(T17 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68, T69>(T18 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68, T69>(T19 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68, T69>(T20 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68, T69>(T21 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68, T69>(T22 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68, T69>(T23 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68, T69>(T24 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68, T69>(T25 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68, T69>(T26 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68, T69>(T27 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68, T69>(T28 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68, T69>(T29 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68, T69>(T30 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68, T69>(T31 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68, T69>(T32 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68, T69>(T33 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68, T69>(T34 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68, T69>(T35 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68, T69>(T36 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68, T69>(T37 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68, T69>(T38 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68, T69>(T39 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68, T69>(T40 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68, T69>(T41 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68, T69>(T42 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68, T69>(T43 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68, T69>(T44 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68, T69>(T45 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68, T69>(T46 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68, T69>(T47 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68, T69>(T48 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68, T69>(T49 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68, T69>(T50 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68, T69>(T51 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68, T69>(T52 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68, T69>(T53 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68, T69>(T54 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68, T69>(T55 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68, T69>(T56 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68, T69>(T57 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68, T69>(T58 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68, T69>(T59 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68, T69>(T60 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68, T69>(T61 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68, T69>(T62 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68, T69>(T63 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68, T69>(T64 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68, T69>(T65 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68, T69>(T66 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68, T69>(T67 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68, T69>(T68 Value) => new(Value);
    public static implicit operator UnionTypes<T1, T2, T3, T4, T5, T6, T7, T8, T9, T10, T11, T12, T13, T14, T15, T16, T17, T18, T19, T20, T21, T22, T23, T24, T25, T26, T27, T28, T29, T30, T31, T32, T33, T34, T35, T36, T37, T38, T39, T40, T41, T42, T43, T44, T45, T46, T47, T48, T49, T50, T51, T52, T53, T54, T55, T56, T57, T58, T59, T60, T61, T62, T63, T64, T65, T66, T67, T68, T69>(T69 Value) => new(Value);
}